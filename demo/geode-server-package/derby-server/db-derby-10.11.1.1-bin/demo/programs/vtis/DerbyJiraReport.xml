<!--  RSS generated by JIRA (Enterprise Edition, Version: 3.10.1-#261) at Wed Aug 15 13:57:18 PDT 2007 -->
<!-- If you wish to do custom client-side styling of RSS, uncomment this:
<?xml-stylesheet href="https://issues.apache.org:443/jira/styles/jiraxml2html.xsl" type="text/xsl"?>
-->
<rss version="0.92">
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org:443/jira/secure/IssueNavigator.jspa?reset=true&amp;pid=10594&amp;fixfor=12312590&amp;resolution=1&amp;sorter/field=issuekey&amp;sorter/order=DESC</link>
    <description>An XML representation of a search request</description>
    <language>en-uk</language>
<item>
<title>[DERBY-2980] three test failed with 'java.security.AccessControlException</title>
<link>https://issues.apache.org:443/jira/browse/DERBY-2980</link>

                    <description>The following tests failed with java.security.AccessControlException:&lt;br/&gt;
derbyall/derbyall.fail:tools/importExportThruIJ.sql&lt;br/&gt;
derbyall/derbyall.fail:i18n/UnicodeEscape_JP.sql&lt;br/&gt;
derbyall/derbyall.fail:i18n/iepnegativetests_ES.sql&lt;br/&gt;
&lt;br/&gt;
Diff is as following:&lt;br/&gt;
&lt;br/&gt;
********* Diff file derbyall/derbytools/importExportThruIJ.diff&lt;br/&gt;
*** Start: importExportThruIJ jdk1.4.2 derbyall:derbytools 2007-07-24 19:37:56 ***&lt;br/&gt;
838 del&lt;br/&gt;
&amp;lt; 0 rows inserted/updated/deleted&lt;br/&gt;
838a838,839&lt;br/&gt;
&amp;gt; ERROR XJ001: Java exception: 'java.security.AccessControlException: access denied (java.io.FilePermission extout/derby-2925.txt read)'.&lt;br/&gt;
&amp;gt; ERROR XJ001: Java exception: 'access denied (java.io.FilePermission extout/derby-2925.txt read): java.security.AccessControlException'.&lt;br/&gt;
846 del&lt;br/&gt;
&amp;lt; ERROR XIE0S: The export operation was not performed, because the specified output file (extout/derby-2925.txt) already exists. Export processing will not overwrite an existing file, even if the process has permissions to write to that file, due to security concerns, and to avoid accidental file damage. Please either change the output file name in the export procedure arguments to specify a file which does not exist, or delete the existing file, then retry the export operation.&lt;br/&gt;
846a847,848&lt;br/&gt;
&amp;gt; ERROR XJ001: Java exception: 'java.security.AccessControlException: access denied (java.io.FilePermission extout/derby-2925.txt read)'.&lt;br/&gt;
&amp;gt; ERROR XJ001: Java exception: 'access denied (java.io.FilePermission extout/derby-2925.txt read): java.security.AccessControlException'.&lt;br/&gt;
852 del&lt;br/&gt;
&amp;lt; 0 rows inserted/updated/deleted&lt;br/&gt;
852a854,855&lt;br/&gt;
&amp;gt; ERROR XJ001: Java exception: 'java.security.AccessControlException: access denied (java.io.FilePermission extout/derby-2925-query.dat read)'.&lt;br/&gt;
&amp;gt; ERROR XJ001: Java exception: 'access denied (java.io.FilePermission extout/derby-2925-query.dat read): java.security.AccessControlException'.&lt;br/&gt;
860 del&lt;br/&gt;
&amp;lt; ERROR XIE0S: The export operation was not performed, because the specified output file (extout/derby-2925-query.dat) already exists. Export processing will not overwrite an existing file, even if the process has permissions to write to that file, due to security concerns, and to avoid accidental file damage. Please either change the output file name in the export procedure arguments to specify a file which does not exist, or delete the existing file, then retry the export operation.&lt;br/&gt;
860a863,864&lt;br/&gt;
&amp;gt; ERROR XJ001: Java exception: 'java.security.AccessControlException: access denied (java.io.FilePermission extout/derby-2925-query.dat read)'.&lt;br/&gt;
&amp;gt; ERROR XJ001: Java exception: 'access denied (java.io.FilePermission extout/derby-2925-query.dat read): java.security.AccessControlException'.&lt;br/&gt;
878 del&lt;br/&gt;
&amp;lt; 0 rows inserted/updated/deleted&lt;br/&gt;
878a882,883&lt;br/&gt;
&amp;gt; ERROR XJ001: Java exception: 'java.security.AccessControlException: access denied (java.io.FilePermission extout/derby-2925_data.dat read)'.&lt;br/&gt;
&amp;gt; ERROR XJ001: Java exception: 'access denied (java.io.FilePermission extout/derby-2925_data.dat read): java.security.AccessControlException'.&lt;br/&gt;
886 del&lt;br/&gt;
&amp;lt; ERROR XIE0S: The export operation was not performed, because the specified output file (extout/derby-2925_data.dat) already exists. Export processing will not overwrite an existing file, even if the process has permissions to write to that file, due to security concerns, and to avoid accidental file damage. Please either change the output file name in the export procedure arguments to specify a file which does not exist, or delete the existing file, then retry the export operation.&lt;br/&gt;
886a891,892&lt;br/&gt;
&amp;gt; ERROR XJ001: Java exception: 'java.security.AccessControlException: access denied (java.io.FilePermission extout/derby-2925_data.dat read)'.&lt;br/&gt;
&amp;gt; ERROR XJ001: Java exception: 'access denied (java.io.FilePermission extout/derby-2925_data.dat read): java.security.AccessControlException'.&lt;br/&gt;
897 del&lt;br/&gt;
&amp;lt; ERROR XIE0T: The export operation was not performed, because the specified large object auxiliary file (extout/derby-2925_lobs.dat) already exists. Export processing will not overwrite an existing file, even if the process has permissions to write to that file, due to security concerns, and to avoid accidental file damage. Please either change the large object auxiliary file name in the export procedure arguments to specify a file which does not exist, or delete the existing file, then retry the export operation.&lt;br/&gt;
897a903,904&lt;br/&gt;
&amp;gt; ERROR XJ001: Java exception: 'java.security.AccessControlException: access denied (java.io.FilePermission extout/derby-2925_data1.dat read)'.&lt;br/&gt;
&amp;gt; ERROR XJ001: Java exception: 'access denied (java.io.FilePermission extout/derby-2925_data1.dat read): java.security.AccessControlException'.&lt;br/&gt;
Test Failed.&lt;br/&gt;
*** End:   importExportThruIJ jdk1.4.2 derbyall:derbytools 2007-07-24 19:38:17 ***&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
********* Diff file derbyall/i18nTest/UnicodeEscape_JP.diff&lt;br/&gt;
*** Start: UnicodeEscape_JP jdk1.4.2 derbyall:i18nTest 2007-07-24 20:52:28 ***&lt;br/&gt;
71 del&lt;br/&gt;
&amp;lt; 0 rows inserted/updated/deleted&lt;br/&gt;
71a71,72&lt;br/&gt;
&amp;gt; ERROR XJ001: Java exception: 'java.security.AccessControlException: access denied (java.io.FilePermission extout/jtest.unl read)'.&lt;br/&gt;
&amp;gt; ERROR XJ001: Java exception: 'access denied (java.io.FilePermission extout/jtest.unl read): java.security.AccessControlException'.&lt;br/&gt;
Test Failed.&lt;br/&gt;
*** End:   UnicodeEscape_JP jdk1.4.2 derbyall:i18nTest 2007-07-24 20:52:39 ***&lt;br/&gt;
&lt;br/&gt;
********* Diff file derbyall/i18nTest/iepnegativetests_ES.diff&lt;br/&gt;
*** Start: iepnegativetests_ES jdk1.4.2 derbyall:i18nTest 2007-07-24 20:53:49 ***&lt;br/&gt;
48 del&lt;br/&gt;
&amp;lt; ERROR XIE0I: Se ha producido una excepci EnC:&amp;gt;243&amp;lt; n de E/S al grabar datos en el archivo.&lt;br/&gt;
49 del&lt;br/&gt;
&amp;lt; ERROR XJ001: Excepci EnC:&amp;gt;243&amp;lt; n de Java: ': java.io.FileNotFoundException'.&lt;br/&gt;
49a48,49&lt;br/&gt;
&amp;gt; ERROR XJ001: Excepci EnC:&amp;gt;243&amp;lt; n de Java: 'java.security.AccessControlException: access denied (java.io.FilePermission extout/nodir/t1.dat read)'.&lt;br/&gt;
&amp;gt; ERROR XJ001: Excepci EnC:&amp;gt;243&amp;lt; n de Java: ': java.security.AccessControlException'.&lt;br/&gt;
Test Failed.&lt;br/&gt;
*** End:   iepnegativetests_ES jdk1.4.2 derbyall:i18nTest 2007-07-24 20:54:09 ***&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
</description>
                <environment/>
            <key id="12374748">DERBY-2980</key>
        <summary>three test failed with 'java.security.AccessControlException</summary>
        <type id="1" iconUrl="https://issues.apache.org:443/jira/images/icons/bug.gif">Bug</type>
    
            <priority id="3" iconUrl="https://issues.apache.org:443/jira/images/icons/priority_major.gif">Major</priority>    
        <status id="5" iconUrl="https://issues.apache.org:443/jira/images/icons/status_resolved.gif">Resolved</status>
                        <resolution id="1">Fixed</resolution>
            
    
                        <assignee username="moazeni">Ramin Moazeni</assignee>
            
                        <reporter username="ramand">Ramandeep Kaur</reporter>
            
    <created>Thu, 26 Jul 2007 15:48:56 -0700 (PDT)</created>
    <updated>Wed, 1 Aug 2007 15:12:18 -0700 (PDT)</updated>

                        <version>10.4.0.0</version>
            
                        <fixVersion>10.3.1.4</fixVersion>
                    <fixVersion>10.4.0.0</fixVersion>
            
                        <component>Regression Test Failure</component>
            
            <due/>
    
            <votes>0</votes>
    
    

            <comments>
                    <comment author="myrna" created="Thu, 26 Jul 2007 17:00:47 -0700 (PDT)">I believe this may be linked to the changes for &lt;a href="https://issues.apache.org/jira/browse/DERBY-2925" title="Prevent export from overwriting existing files"&gt;&lt;strike&gt;DERBY-2925&lt;/strike&gt;&lt;/a&gt;.</comment>
                    <comment author="moazeni" created="Thu, 26 Jul 2007 19:13:33 -0700 (PDT)">Thanks for reporting the issue Ramandip..I am working to resolve&lt;br/&gt;
to issue.&lt;br/&gt;
&lt;br/&gt;
Thanks&lt;br/&gt;
Ramin</comment>
                    <comment author="moazeni" created="Wed, 1 Aug 2007 14:50:32 -0700 (PDT)">resolved in trunk (revision #561546) and 10.3 (revision #561638)&lt;br/&gt;
</comment>
                </comments>
    
    <issuelinks>
                <issuelinktype id="10030">
            <name>Reference</name>
                            <outwardlinks description="relates to">
                            <issuelink>
            <issuekey id="12373566">DERBY-2925</issuekey>
        </issuelink>
                    </outwardlinks>
                                </issuelinktype>
            </issuelinks>
    <attachments>
        </attachments>

    <subtasks>
        </subtasks>

            <customfields>
                                                        <customfield id="customfield_12310050" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                    <customfieldname>Urgency</customfieldname>
                    <customfieldvalues>
                        <customfieldvalue><![CDATA[Normal]]></customfieldvalue>

                    </customfieldvalues>
                </customfield>
                                            </customfields>
    
</item>

<item>
<title>[DERBY-2974] Getting Started guide source still has gsconrefs.dita file</title>
<link>https://issues.apache.org:443/jira/browse/DERBY-2974</link>

                    <description>The book-specific conrefs files were replaced by a single conrefs.dita file in the src directory, but the src/getstart/gsconrefs.dita file is still there. There are no references to this file, and it can safely be removed.</description>
                <environment/>
            <key id="12374481">DERBY-2974</key>
        <summary>Getting Started guide source still has gsconrefs.dita file</summary>
        <type id="1" iconUrl="https://issues.apache.org:443/jira/images/icons/bug.gif">Bug</type>
    
            <priority id="5" iconUrl="https://issues.apache.org:443/jira/images/icons/priority_trivial.gif">Trivial</priority>    
        <status id="5" iconUrl="https://issues.apache.org:443/jira/images/icons/status_resolved.gif">Resolved</status>
                        <resolution id="1">Fixed</resolution>
            
    
                        <assignee username="scotsmatrix">Laura Stewart</assignee>
            
                        <reporter username="chaase3">Kim Haase</reporter>
            
    <created>Tue, 24 Jul 2007 10:44:07 -0700 (PDT)</created>
    <updated>Wed, 1 Aug 2007 06:41:43 -0700 (PDT)</updated>

                        <version>10.3.1.4</version>
            
                        <fixVersion>10.3.1.4</fixVersion>
            
                        <component>Documentation</component>
            
            <due/>
    
            <votes>0</votes>
    
    

            <comments>
                    <comment author="scotsmatrix" created="Tue, 31 Jul 2007 16:34:44 -0700 (PDT)">Removed the unnecessary file.&lt;br/&gt;
Committed revision 561591 to the trunk. &lt;br/&gt;
&lt;br/&gt;
Committed revision 561597 to the 10.3 branch.&lt;br/&gt;
</comment>
                    <comment author="chaase3" created="Wed, 1 Aug 2007 06:41:43 -0700 (PDT)">Thanks very much for fixing this, Laura!</comment>
                </comments>
    
    <attachments>
        </attachments>

    <subtasks>
        </subtasks>

            <customfields>
                                                                        </customfields>
    
</item>

<item>
<title>[DERBY-2973] With collation TERRITORY_BASED, insert into table after changing type of column causes  assert failure and loss of connection</title>
<link>https://issues.apache.org:443/jira/browse/DERBY-2973</link>

                    <description>ij(CONNECTION1)&amp;gt; create table d (id int not null, t_bigvarchar varchar(400), unique (id));&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij(CONNECTION1)&amp;gt; create index t_bigvarchar_ind on d ( t_bigvarchar);&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij(CONNECTION1)&amp;gt; alter table d alter t_bigvarchar set data type varchar(4096);&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij(CONNECTION1)&amp;gt; insert into d (id, t_bigvarchar) values (1,'hello');&lt;br/&gt;
ERROR XJ001: Java exception: 'ASSERT FAILED type of inserted column[0] = org.apache.derby.iapi.types.SQLVarchartype of t&lt;br/&gt;
emplate column[0] = org.apache.derby.iapi.types.CollatorSQLVarchar: org.apache.derby.shared.common.sanity.AssertFailure'&lt;br/&gt;
.&lt;br/&gt;
ij(CONNECTION1)&amp;gt;</description>
                <environment/>
            <key id="12374476">DERBY-2973</key>
        <summary>With collation TERRITORY_BASED, insert into table after changing type of column causes  assert failure and loss of connection</summary>
        <type id="1" iconUrl="https://issues.apache.org:443/jira/images/icons/bug.gif">Bug</type>
    
            <priority id="2" iconUrl="https://issues.apache.org:443/jira/images/icons/priority_critical.gif">Critical</priority>    
        <status id="5" iconUrl="https://issues.apache.org:443/jira/images/icons/status_resolved.gif">Resolved</status>
                        <resolution id="1">Fixed</resolution>
            
    
                        <assignee username="mamtas">Mamta A. Satoor</assignee>
            
                        <reporter username="kmarsden">Kathey Marsden</reporter>
            
    <created>Tue, 24 Jul 2007 10:03:45 -0700 (PDT)</created>
    <updated>Fri, 27 Jul 2007 09:44:31 -0700 (PDT)</updated>

                        <version>10.4.0.0</version>
            
                        <fixVersion>10.3.1.4</fixVersion>
                    <fixVersion>10.4.0.0</fixVersion>
            
                        <component>SQL</component>
            
            <due/>
    
            <votes>0</votes>
    
    

            <comments>
                    <comment author="kmarsden" created="Tue, 24 Jul 2007 10:04:51 -0700 (PDT)">found during collation testing. store/access.sql failed with this error</comment>
                    <comment author="mamtas" created="Fri, 27 Jul 2007 08:55:17 -0700 (PDT)">Committed changes for this jira entry into main using revision 560289. Will merge into 10.3 codeline shortly. The commit comments were as follows&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
ALTER TABLE MODIFY COLUMN should maintain the collation info when the column being altered is character string type. The changes for this went into as a new method in ModifyColumnNode which gets called during the bind phase.&lt;br/&gt;
</comment>
                    <comment author="mamtas" created="Fri, 27 Jul 2007 09:44:31 -0700 (PDT)">Merging changes from main into 10.3 codeline with revision 560307.</comment>
                </comments>
    
    <issuelinks>
                <issuelinktype id="10030">
            <name>Reference</name>
                                        <inwardlinks description="is related to">
                            <issuelink>
            <issuekey id="12369433">DERBY-2656</issuekey>
        </issuelink>
                    </inwardlinks>
                    </issuelinktype>
            </issuelinks>
    <attachments>
        </attachments>

    <subtasks>
        </subtasks>

            <customfields>
                                                                        </customfields>
    
</item>

<item>
<title>[DERBY-2966] rs.moveToInsertRow() causes loss of connection with TERRITORY_BASED collation.</title>
<link>https://issues.apache.org:443/jira/browse/DERBY-2966</link>

                    <description>In the attached test case, rs.moveToInsertRow()  causes loss of the connection with a TERRITORY_BASED collation database. With UCS_BASIC it is fine.&lt;br/&gt;
&lt;br/&gt;
</description>
                <environment/>
            <key id="12374298">DERBY-2966</key>
        <summary>rs.moveToInsertRow() causes loss of connection with TERRITORY_BASED collation.</summary>
        <type id="1" iconUrl="https://issues.apache.org:443/jira/images/icons/bug.gif">Bug</type>
    
            <priority id="2" iconUrl="https://issues.apache.org:443/jira/images/icons/priority_critical.gif">Critical</priority>    
        <status id="6" iconUrl="https://issues.apache.org:443/jira/images/icons/status_closed.gif">Closed</status>
                        <resolution id="1">Fixed</resolution>
            
    
                        <assignee username="mamtas">Mamta A. Satoor</assignee>
            
                        <reporter username="kmarsden">Kathey Marsden</reporter>
            
    <created>Fri, 20 Jul 2007 13:56:26 -0700 (PDT)</created>
    <updated>Thu, 26 Jul 2007 09:34:00 -0700 (PDT)</updated>

                        <version>10.4.0.0</version>
            
                        <fixVersion>10.3.1.4</fixVersion>
                    <fixVersion>10.4.0.0</fixVersion>
            
                        <component>JDBC</component>
            
            <due/>
    
            <votes>0</votes>
    
    

            <comments>
                    <comment author="kmarsden" created="Fri, 20 Jul 2007 14:01:42 -0700 (PDT)">java NoConnectionBug&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;UCS_BASIC collation&lt;br/&gt;
&amp;nbsp;&amp;nbsp;Testing updateShort on SQL type SMALLINT&lt;br/&gt;
PASS: moveInsertRow did not cause loss of connection&lt;br/&gt;
&lt;br/&gt;
[snip all ok for UCSBASIC]&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
 Territory no_NO&lt;br/&gt;
&amp;nbsp;&amp;nbsp;Testing updateShort on SQL type SMALLINT&lt;br/&gt;
Exception in thread &amp;quot;main&amp;quot; java.sql.SQLException: No current connection.&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(SQLExceptionFactory.java:45)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Util.java:88)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Util.java:104)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.derby.impl.jdbc.Util.noCurrentConnection(Util.java:208)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.derby.impl.jdbc.EmbedStatement.checkExecStatus(EmbedStatement.java:1396)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeStatement(EmbedPreparedStatement.java:1649)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeQuery(EmbedPreparedStatement.java:275)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at NoConnectionBug.runTestUpdateXXXAllDataTypesInsertRow(NoConnectionBug.java:171)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at NoConnectionBug.testUpdateXXXAllDataTypesInsertRow(NoConnectionBug.java:202)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at NoConnectionBug.main(NoConnectionBug.java:110)</comment>
                    <comment author="kmarsden" created="Fri, 20 Jul 2007 14:03:17 -0700 (PDT)">This was found during collation tessting the test testUpdateXXXAllDataTypesInsertRow(org.apache.derbyTesting.functionTests.tests.lang.UpdatableResultSetTest failed with  No current connection.</comment>
                    <comment author="mamtas" created="Tue, 24 Jul 2007 10:45:23 -0700 (PDT)">Commited a patch in main (Revision: 559125) and migrated it into 10.3 codeline (Revision: 559133) . Commit comments were as follows&lt;br/&gt;
&lt;br/&gt;
&lt;a href="https://issues.apache.org/jira/browse/DERBY-2966" title="rs.moveToInsertRow() causes loss of connection with TERRITORY_BASED collation."&gt;&lt;strike&gt;DERBY-2966&lt;/strike&gt;&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
We need to have context set up inside a moveToInsertRow code because that code tries to do DTD.getNull and getNull needs to find RuleBasedCollator which is found by relying on the context. Putting the context fixed the problem.&lt;br/&gt;
&lt;br/&gt;
</comment>
                    <comment author="kmarsden" created="Tue, 24 Jul 2007 18:59:24 -0700 (PDT)">Thanks Mamta,&lt;br/&gt;
&lt;br/&gt;
The tests that were failing with no connection and no current row are passing now.&lt;br/&gt;
</comment>
                    <comment author="kmarsden" created="Thu, 26 Jul 2007 09:34:00 -0700 (PDT)">verified fix</comment>
                </comments>
    
    <issuelinks>
                <issuelinktype id="10032">
            <name>Blocker</name>
                            <outwardlinks description="blocks">
                            <issuelink>
            <issuekey id="12369433">DERBY-2656</issuekey>
        </issuelink>
                    </outwardlinks>
                                </issuelinktype>
            </issuelinks>
    <attachments>
            <attachment id="12362268" name="NoConnectionBug.java" size="7617" author="kmarsden" created="Fri, 20 Jul 2007 14:01:42 -0700 (PDT)"/>
        </attachments>

    <subtasks>
        </subtasks>

            <customfields>
                                                                        </customfields>
    
</item>

<item>
<title>[DERBY-2964] ASSERT FAILED type of inserted column[0] = org.apache.derby.iapi.types.SQLVarchar type of template column[0] = org.apache.derby.iapi.types.CollatorSQLVarchar when inserting row into table that has been modified with unique constraint</title>
<link>https://issues.apache.org:443/jira/browse/DERBY-2964</link>

                    <description>Below is the test case from lang/modifyColumn.sql&lt;br/&gt;
&lt;br/&gt;
ij&amp;gt; connect 'jdbc:derby:nordb;create=true;territory=no_NO;collation=TERRITORY_BASED';&lt;br/&gt;
ij(CONNECTION1)&amp;gt; create table t1 (vc varchar(1) not null, nvc varchar(1) not null, bv varchar(1) for bit data not null);&lt;br/&gt;
&lt;br/&gt;
alter table t1 add constraint uq unique (vc, nvc, bv);&lt;br/&gt;
&lt;br/&gt;
insert into t1 values ('p', 'p', x'01');&lt;br/&gt;
insert into t1 values ('pe', 'p', x'01');&lt;br/&gt;
alter table t1 alter vc set data type varchar(2);&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij(CONNECTION1)&amp;gt; 0 rows inserted/updated/deleted&lt;br/&gt;
ij(CONNECTION1)&amp;gt; 1 row inserted/updated/deleted&lt;br/&gt;
ij(CONNECTION1)&amp;gt; ERROR 22001: A truncation error was encountered trying to shrink VARCHAR 'pe' to length 1.&lt;br/&gt;
java.sql.SQLException: A truncation error was encountered trying to shrink VARCHAR 'pe' to length 1.&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(SQLExceptionFactory.java:45)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.derby.impl.jdbc.Util.generateCsSQLException(Util.java:202)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(TransactionResourceImpl.java:391)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(TransactionResourceImpl.java:346)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.derby.impl.jdbc.EmbedConnection.handleException(EmbedConnection.java:1572)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.derby.impl.jdbc.ConnectionChild.handleException(ConnectionChild.java:81)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java:1293)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java:596)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java:528)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.derby.impl.tools.ij.ij.executeImmediate(ij.java:330)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.derby.impl.tools.ij.utilMain.doCatch(utilMain.java:522)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.derby.impl.tools.ij.utilMain.runScriptGuts(utilMain.java:364)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.derby.impl.tools.ij.utilMain.go(utilMain.java:262)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.derby.impl.tools.ij.Main.go(Main.java:215)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.derby.impl.tools.ij.Main.mainCore(Main.java:181)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.derby.impl.tools.ij.Main14.main(Main14.java:56)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.derby.tools.ij.main(ij.java:71)&lt;br/&gt;
Caused by: ERROR 22001: A truncation error was encountered trying to shrink VARCHAR 'pe' to length 1.&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.derby.iapi.error.StandardException.newException(StandardException.java:341)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.derby.iapi.types.SQLChar.hasNonBlankChars(SQLChar.java:1324)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.derby.iapi.types.SQLVarchar.normalize(SQLVarchar.java:173)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.derby.iapi.types.SQLVarchar.normalize(SQLVarchar.java:150)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.derby.iapi.types.DataTypeDescriptor.normalize(DataTypeDescriptor.java:505)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.derby.impl.sql.execute.NormalizeResultSet.normalizeRow(NormalizeResultSet.java:330)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.derby.impl.sql.execute.NormalizeResultSet.getNextRowCore(NormalizeResultSet.java:189)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.derby.impl.sql.execute.DMLWriteResultSet.getNextRowCore(DMLWriteResultSet.java:125)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.derby.impl.sql.execute.InsertResultSet.open(InsertResultSet.java:496)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.derby.impl.sql.GenericPreparedStatement.execute(GenericPreparedStatement.java:370)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java:1203)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;... 10 more&lt;br/&gt;
ij(CONNECTION1)&amp;gt; 0 rows inserted/updated/deleted&lt;br/&gt;
ij(CONNECTION1)&amp;gt; insert into t1 values ('pe', 'p', x'01');&lt;br/&gt;
ERROR XJ001: Java exception: 'ASSERT FAILED type of inserted column[0] = org.apache.derby.iapi.types.SQLVarchartype of t&lt;br/&gt;
emplate column[0] = org.apache.derby.iapi.types.CollatorSQLVarchar: org.apache.derby.shared.common.sanity.AssertFailure'&lt;br/&gt;
.&lt;br/&gt;
java.sql.SQLException: Java exception: 'ASSERT FAILED type of inserted column[0] = org.apache.derby.iapi.types.SQLVarcha&lt;br/&gt;
rtype of template column[0] = org.apache.derby.iapi.types.CollatorSQLVarchar: org.apache.derby.shared.common.sanity.Asse&lt;br/&gt;
rtFailure'.&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(SQLExceptionFactory.java:45)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Util.java:88)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.derby.impl.jdbc.Util.javaException(Util.java:245)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(TransactionResourceImpl.java:403)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(TransactionResourceImpl.java:346)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.derby.impl.jdbc.EmbedConnection.handleException(EmbedConnection.java:1572)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.derby.impl.jdbc.ConnectionChild.handleException(ConnectionChild.java:81)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java:1293)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java:596)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.derby.impl.jdbc.EmbedStatement.execute(EmbedStatement.java:528)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.derby.impl.tools.ij.ij.executeImmediate(ij.java:330)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.derby.impl.tools.ij.utilMain.doCatch(utilMain.java:522)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.derby.impl.tools.ij.utilMain.runScriptGuts(utilMain.java:364)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.derby.impl.tools.ij.utilMain.go(utilMain.java:262)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.derby.impl.tools.ij.Main.go(Main.java:215)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.derby.impl.tools.ij.Main.mainCore(Main.java:181)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.derby.impl.tools.ij.Main14.main(Main14.java:56)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.derby.tools.ij.main(ij.java:71)&lt;br/&gt;
Caused by: org.apache.derby.shared.common.sanity.AssertFailure: ASSERT FAILED type of inserted column[0] = org.apache.de&lt;br/&gt;
rby.iapi.types.SQLVarchartype of template column[0] = org.apache.derby.iapi.types.CollatorSQLVarchar&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.derby.shared.common.sanity.SanityManager.THROWASSERT(SanityManager.java:162)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.derby.shared.common.sanity.SanityManager.THROWASSERT(SanityManager.java:147)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.derby.impl.store.access.btree.OpenBTree.isIndexableRowConsistent(OpenBTree.java:529)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.derby.impl.store.access.btree.BTreeController.doIns(BTreeController.java:385)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.derby.impl.store.access.btree.BTreeController.insert(BTreeController.java:1035)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.derby.impl.store.access.btree.index.B2IController.insert(B2IController.java:211)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.derby.impl.sql.execute.IndexChanger.insertAndCheckDups(IndexChanger.java:455)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.derby.impl.sql.execute.IndexChanger.doInsert(IndexChanger.java:398)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.derby.impl.sql.execute.IndexChanger.insert(IndexChanger.java:605)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.derby.impl.sql.execute.IndexSetChanger.insert(IndexSetChanger.java:268)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.derby.impl.sql.execute.RowChangerImpl.insertRow(RowChangerImpl.java:453)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.derby.impl.sql.execute.InsertResultSet.normalInsertCore(InsertResultSet.java:1024)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.derby.impl.sql.execute.InsertResultSet.open(InsertResultSet.java:497)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.derby.impl.sql.GenericPreparedStatement.execute(GenericPreparedStatement.java:370)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java:1203)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;... 10 more&lt;br/&gt;
ij(CONNECTION1)&amp;gt;</description>
                <environment/>
            <key id="12374289">DERBY-2964</key>
        <summary>ASSERT FAILED type of inserted column[0] = org.apache.derby.iapi.types.SQLVarchar type of template column[0] = org.apache.derby.iapi.types.CollatorSQLVarchar when inserting row into table that has been modified with unique constraint</summary>
        <type id="1" iconUrl="https://issues.apache.org:443/jira/images/icons/bug.gif">Bug</type>
    
            <priority id="3" iconUrl="https://issues.apache.org:443/jira/images/icons/priority_major.gif">Major</priority>    
        <status id="6" iconUrl="https://issues.apache.org:443/jira/images/icons/status_closed.gif">Closed</status>
                        <resolution id="1">Fixed</resolution>
            
    
                        <assignee username="mamtas">Mamta A. Satoor</assignee>
            
                        <reporter username="kmarsden">Kathey Marsden</reporter>
            
    <created>Fri, 20 Jul 2007 12:33:38 -0700 (PDT)</created>
    <updated>Wed, 1 Aug 2007 10:43:19 -0700 (PDT)</updated>

                        <version>10.4.0.0</version>
            
                        <fixVersion>10.3.1.4</fixVersion>
                    <fixVersion>10.4.0.0</fixVersion>
            
                        <component>SQL</component>
            
            <due/>
    
            <votes>0</votes>
    
    

            <comments>
                    <comment author="kmarsden" created="Fri, 20 Jul 2007 12:36:57 -0700 (PDT)">found during collation testing&lt;br/&gt;
</comment>
                    <comment author="mamtas" created="Tue, 31 Jul 2007 23:14:47 -0700 (PDT)">I think the fix for &lt;a href="https://issues.apache.org/jira/browse/DERBY-2973" title="With collation TERRITORY_BASED, insert into table after changing type of column causes  assert failure and loss of connection"&gt;&lt;strike&gt;DERBY-2973&lt;/strike&gt;&lt;/a&gt; should take care of this bug. I ran the script provided in this jira entry in both main and 10.3 codeline and the test script does not throw assert failure anymore. Kathey, will you mind double checking for me? thanks</comment>
                    <comment author="mamtas" created="Tue, 31 Jul 2007 23:16:52 -0700 (PDT)">I will mark the issue resolved but won't close it just yet. The problem has been fixed as part of changes that went in for &lt;a href="https://issues.apache.org/jira/browse/DERBY-2973" title="With collation TERRITORY_BASED, insert into table after changing type of column causes  assert failure and loss of connection"&gt;&lt;strike&gt;DERBY-2973&lt;/strike&gt;&lt;/a&gt;</comment>
                    <comment author="kmarsden" created="Wed, 1 Aug 2007 10:42:58 -0700 (PDT)">looks fixed with test script and with lang/modifyColumn.sql run with TERRITORY_BASED collation&lt;br/&gt;
</comment>
                </comments>
    
    <issuelinks>
                <issuelinktype id="10030">
            <name>Reference</name>
                                        <inwardlinks description="is related to">
                            <issuelink>
            <issuekey id="12369433">DERBY-2656</issuekey>
        </issuelink>
                    </inwardlinks>
                    </issuelinktype>
            </issuelinks>
    <attachments>
        </attachments>

    <subtasks>
        </subtasks>

            <customfields>
                                                                        </customfields>
    
</item>

<item>
<title>[DERBY-2963] AccessControlException: Access denied java.net.SocketPermission &lt;client ip&gt; accept,resolve</title>
<link>https://issues.apache.org:443/jira/browse/DERBY-2963</link>

                    <description>I start the server using an ipv4 address&lt;br/&gt;
&lt;br/&gt;
java derbyrun.jar server start -h x.x.x.x&lt;br/&gt;
&lt;br/&gt;
Then I connect from a remote client  and hit an AccessControlException&lt;br/&gt;
&lt;br/&gt;
The ip in the exception is that of the *client*, not the server.&lt;br/&gt;
&lt;br/&gt;
This setup works in 10.2.2.0.&lt;br/&gt;
&lt;br/&gt;
Same problem if the hostname is in derby.properties&lt;br/&gt;
&lt;br/&gt;
Problem can be worked around by using -noSecurityManager when starting the server</description>
                <environment>SuseLinux 10&lt;br/&gt;
IBM JVM 1.5</environment>
            <key id="12374281">DERBY-2963</key>
        <summary>AccessControlException: Access denied java.net.SocketPermission &lt;client ip&gt; accept,resolve</summary>
        <type id="1" iconUrl="https://issues.apache.org:443/jira/images/icons/bug.gif">Bug</type>
    
            <priority id="1" iconUrl="https://issues.apache.org:443/jira/images/icons/priority_blocker.gif">Blocker</priority>    
        <status id="5" iconUrl="https://issues.apache.org:443/jira/images/icons/status_resolved.gif">Resolved</status>
                        <resolution id="1">Fixed</resolution>
            
    
                        <assignee username="dagw">Dag H. Wanvik</assignee>
            
                        <reporter username="djd">Daniel John Debrunner</reporter>
            
    <created>Fri, 20 Jul 2007 11:14:52 -0700 (PDT)</created>
    <updated>Wed, 25 Jul 2007 15:18:47 -0700 (PDT)</updated>

                        <version>10.3.1.4</version>
            
                        <fixVersion>10.3.1.4</fixVersion>
                    <fixVersion>10.4.0.0</fixVersion>
            
                        <component>Network Server</component>
            
            <due/>
    
            <votes>0</votes>
    
    

            <comments>
                    <comment author="mkutty" created="Fri, 20 Jul 2007 12:17:40 -0700 (PDT)">I found it happening on both Ipv6 and Ipv4 machines. Ipv6 machines gave me the stack trace as follows&lt;br/&gt;
java.security.AccessControlException: Access denied (java.net.SocketPermission [2002:92a:8f7a:13:9:42:73:218]:32813 accept,resolve)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.security.AccessController.checkPermission(AccessController.java:104)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.lang.SecurityManager.checkPermission(SecurityManager.java:547)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.lang.SecurityManager.checkAccept(SecurityManager.java:1172)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.net.ServerSocket.implAccept(ServerSocket.java:466)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.net.ServerSocket.accept(ServerSocket.java:433)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.derby.impl.drda.ClientThread$1.run(Unknown Source)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.security.AccessController.doPrivileged(AccessController.java:242)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.derby.impl.drda.ClientThread.run(Unknown Source)&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
Ipv4 machine didn't give any exception other the the following error message&lt;br/&gt;
ij&amp;gt;connect 'jdbc:&lt;a href="derby://incus.rtp.raleigh.ibm.com:1527/ipv6db;create=true;user=user2;password=pass2';"&gt;derby://incus.rtp.raleigh.ibm.com:1527/ipv6db;create=true;user=user2;password=pass2';&lt;/a&gt;&lt;br/&gt;
ERROR 58009: Insufficient data while reading from the network - expected a minimum of 6 bytes and received only -1 bytes.  The connection has been terminated.&lt;br/&gt;
ij&amp;gt;&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
</comment>
                    <comment author="myrna" created="Sat, 21 Jul 2007 13:03:31 -0700 (PDT)">Just to make sure - is this only when using derbyrun.jar, or also when using NetworkServerControl directly? </comment>
                    <comment author="mkutty" created="Sat, 21 Jul 2007 23:50:25 -0700 (PDT)">No, it is not with the derbyrun.jar. I haven't used derbyrun.jar at all. It is from using the NetworkServerControl command. Is there a known problem with the derbyrun.jar ?</comment>
                    <comment author="myrna" created="Sun, 22 Jul 2007 07:51:07 -0700 (PDT)">&lt;br/&gt;
:-) See the problem description of this bug:&lt;br/&gt;
&lt;br/&gt;
Dan wrote:&lt;br/&gt;
&lt;br/&gt;
I was pretty sure this is what you'd say, - derbyrun.jar kicks off&lt;br/&gt;
NetworkServerControl - but I just wanted to be sure.&lt;br/&gt;
&lt;br/&gt;
My next questions are:&lt;br/&gt;
- what is the difference between this approach and the steps you&lt;br/&gt;
tested that worked for ipv6 for &lt;a href="https://issues.apache.org/jira/browse/DERBY-2874" title="NetworkServer not accepting connections with default security manager on Ipv6 machines"&gt;&lt;strike&gt;DERBY-2874&lt;/strike&gt;&lt;/a&gt;?&lt;br/&gt;
and to pinpoint the problem better:&lt;br/&gt;
- does the current problem happen with 10.3.0.0 beta? 10.3.1.1?&lt;br/&gt;
- does the problem occur with 10.2.2.0 when security policy is enabled&lt;br/&gt;
(i.e. is it a problem with the security policy being on by default, or&lt;br/&gt;
is it a more insidious problem with network server. I'm asking because&lt;br/&gt;
Dan reported the problem does not occur with 10.3.1.2 when the server&lt;br/&gt;
is started with -noSecurityManager).&lt;br/&gt;
&lt;br/&gt;
I hope someone with access to an IPV6 can go through the hoops of&lt;br/&gt;
providing these answers, or someone with understanding of the problem&lt;br/&gt;
can come forward and fix it.&lt;br/&gt;
I believe Rick, who implemented the secure server by default (&amp;amp;fixed&lt;br/&gt;
&lt;a href="https://issues.apache.org/jira/browse/DERBY-2874" title="NetworkServer not accepting connections with default security manager on Ipv6 machines"&gt;&lt;strike&gt;DERBY-2874&lt;/strike&gt;&lt;/a&gt;) is not available this week to fix anything, so if it's in&lt;br/&gt;
that area we may have to wait for more than a week for a fix unless&lt;br/&gt;
someone else steps up...&lt;br/&gt;
&lt;br/&gt;
Myrna&lt;br/&gt;
</comment>
                    <comment author="dagw" created="Mon, 23 Jul 2007 07:47:20 -0700 (PDT)">I also see the issue regardless of whether derbyrun.jar is used or not (IPv4,&lt;br/&gt;
on Solaris).&lt;br/&gt;
&lt;br/&gt;
It seems the default policy file installed intentionally does *not*&lt;br/&gt;
open access to remote clients. I am not sure, but I seem to remember&lt;br/&gt;
this being discussed (&lt;a href="https://issues.apache.org/jira/browse/DERBY-2196" title="Run standalone network server with security manager by default"&gt;&lt;strike&gt;DERBY-2196&lt;/strike&gt;&lt;/a&gt;) and found to be acceptable? However,&lt;br/&gt;
the release notes do not indicate this, which would seem to indicate&lt;br/&gt;
it is not the intended behavior, in which case it is a bug, not a&lt;br/&gt;
&amp;quot;feature&amp;quot;.&lt;br/&gt;
&lt;br/&gt;
Changing this line in server.policy:&lt;br/&gt;
&lt;br/&gt;
  permission java.net.SocketPermission &amp;quot;${derby.security.host}&amp;quot;, &amp;quot;accept&amp;quot;; &lt;br/&gt;
&lt;br/&gt;
to:&lt;br/&gt;
&lt;br/&gt;
  permission java.net.SocketPermission &amp;quot;*&amp;quot;, &amp;quot;accept&amp;quot;; &lt;br/&gt;
&lt;br/&gt;
lets me connect from any host to the interface name given in -h option.&lt;br/&gt;
</comment>
                    <comment author="dagw" created="Mon, 23 Jul 2007 08:53:37 -0700 (PDT)">Uploading a tentative patch against 10.3 trunk widening the&lt;br/&gt;
SocketPermission to &amp;quot;*&amp;quot;, &amp;quot;accept&amp;quot; (not for commit yet).&lt;br/&gt;
Running regression tests now.&lt;br/&gt;
&lt;br/&gt;
If we make this change this we would need to update the documentation&lt;br/&gt;
(and preferably the func spec).&lt;br/&gt;
</comment>
                    <comment author="djd" created="Mon, 23 Jul 2007 09:51:16 -0700 (PDT)">Does this patch work if localhost is specified as the host to listen on?&lt;br/&gt;
&lt;br/&gt;
Just wondering because the security documentation has the permission &amp;quot;listen&amp;quot; which is only used for localhost, so I wonder if accept works when listening on localhost.</comment>
                    <comment author="mkutty" created="Mon, 23 Jul 2007 14:48:38 -0700 (PDT)">This was working with 551289M with Rick's fix for &lt;a href="https://issues.apache.org/jira/browse/DERBY-2874" title="NetworkServer not accepting connections with default security manager on Ipv6 machines"&gt;&lt;strike&gt;DERBY-2874&lt;/strike&gt;&lt;/a&gt; on Ipv6 machines. </comment>
                    <comment author="dagw" created="Mon, 23 Jul 2007 15:27:55 -0700 (PDT)">Good question, Dan. My testing indicates it works, but I don't really understand why.&lt;br/&gt;
I can't find anywhere that &amp;quot;listen&amp;quot; is implied by &amp;quot;accept&amp;quot;.  I'll see what I can find out.&lt;br/&gt;
</comment>
                    <comment author="dagw" created="Tue, 24 Jul 2007 09:58:50 -0700 (PDT)">Did some digging on the &amp;quot;listen&amp;quot; privilege and the other socket&lt;br/&gt;
privileges.&lt;br/&gt;
&lt;br/&gt;
The default policy file (java.home/lib/security/java.policy) contains&lt;br/&gt;
this line:&lt;br/&gt;
&lt;br/&gt;
        // allows anyone to listen on un-privileged ports&lt;br/&gt;
	permission java.net.SocketPermission &amp;quot;localhost:1024-&amp;quot;, &amp;quot;listen&amp;quot;;&lt;br/&gt;
&lt;br/&gt;
If the user specifies a port below 1024, the default policy file would&lt;br/&gt;
not work for any interface. Is this acceptable? For running with root&lt;br/&gt;
privileges, privileged ports is a valid use case, otherwise &amp;quot;1024-&amp;quot; is&lt;br/&gt;
enough. To handle privileged ports we need to add another line the&lt;br/&gt;
policy file:&lt;br/&gt;
&lt;br/&gt;
       permission java.net.SocketPermission &amp;quot;localhost&amp;quot;, &amp;quot;listen&amp;quot;; &lt;br/&gt;
&lt;br/&gt;
or, to tighten it down, add code to produced the correct line e.g. so&lt;br/&gt;
for IPv4 (would not work for IPv6 probably..)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br/&gt;
    permission java.net.SocketPermission &amp;quot;localhost:${derby.security.port}&amp;quot;, &amp;quot;listen&amp;quot;; &lt;br/&gt;
&lt;br/&gt;
(Note that even if we specify -h x.x.x.x it is still &amp;quot;localhost&amp;quot; that&lt;br/&gt;
needs to get the extra privileges for listening.)&lt;br/&gt;
&lt;br/&gt;
Other than &amp;quot;listen&amp;quot; and &amp;quot;accept&amp;quot;, we also need &amp;quot;resolve&amp;quot;, but that is&lt;br/&gt;
implied by &amp;quot;accept&amp;quot;.&lt;br/&gt;
&lt;br/&gt;
So in summary, the present patch is sufficient; unless we want the&lt;br/&gt;
default policy to allow using privileged ports. What do you think?&lt;br/&gt;
</comment>
                    <comment author="mkutty" created="Tue, 24 Jul 2007 13:23:26 -0700 (PDT)">This solution looks fine to me. Also I don't think we should allow default policy to allow using previleged ports. I will be applying the patch and will test on both regular and ipv6 machines&lt;br/&gt;
</comment>
                    <comment author="mkutty" created="Tue, 24 Jul 2007 17:37:40 -0700 (PDT)">This patch works fine. I tested the following scenarios &lt;br/&gt;
&lt;br/&gt;
1. starting the server by giving -h option with ipaddress&lt;br/&gt;
java org.apache.derby.drda.NetworkServerControl start -h 9.72.143.153&lt;br/&gt;
&lt;br/&gt;
2. Starting the server with -h 0.0.0.0&lt;br/&gt;
java org.apache.derby.drda.NetworkServerControl start -h 0.0.0.0&lt;br/&gt;
&lt;br/&gt;
3.  starting the server by giving -h option with ipaddress on ipv6 machines&lt;br/&gt;
java org.apache.derby.drda.NetworkServerControl start -h 2002:92a:8f7a:13:9:42:74:19&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
All of them works fine. I would appreciate if we could include this patch in our release candidate&lt;br/&gt;
</comment>
                    <comment author="dagw" created="Wed, 25 Jul 2007 08:30:18 -0700 (PDT)">Committed on trunk as svn 559436. I will merge to the 10.3 branch&lt;br/&gt;
as soon as my tests are done.</comment>
                    <comment author="dagw" created="Wed, 25 Jul 2007 08:34:30 -0700 (PDT)">Uploading the the version I committed. I improved the&lt;br/&gt;
comment a bit relative to the first version, since the&lt;br/&gt;
tempate policy file will go into the manual, too.</comment>
                    <comment author="dagw" created="Wed, 25 Jul 2007 11:53:21 -0700 (PDT)">Committed on the 10.3 branch as svn 559555.&lt;br/&gt;
</comment>
                    <comment author="dagw" created="Wed, 25 Jul 2007 14:25:18 -0700 (PDT)">Uploading a diff for the admin guide to it can stay in synch&lt;br/&gt;
with the policy template file.</comment>
                    <comment author="dagw" created="Wed, 25 Jul 2007 14:31:00 -0700 (PDT)">Committed doc patch (&lt;a href="https://issues.apache.org/jira/browse/DERBY-2963" title="AccessControlException: Access denied java.net.SocketPermission &amp;lt;client ip&amp;gt; accept,resolve"&gt;&lt;strike&gt;DERBY-2963&lt;/strike&gt;&lt;/a&gt;-docs-1) to doc trunk as svn 559616.&lt;br/&gt;
</comment>
                    <comment author="dagw" created="Wed, 25 Jul 2007 15:17:30 -0700 (PDT)">Merged doc patch to docs 10.3 branch as svn 559632.</comment>
                    <comment author="dagw" created="Wed, 25 Jul 2007 15:18:47 -0700 (PDT)">Fixed in source and docs on trunk and 10.3, resolving.</comment>
                </comments>
    
    <issuelinks>
                <issuelinktype id="10030">
            <name>Reference</name>
                                        <inwardlinks description="is related to">
                            <issuelink>
            <issuekey id="12359060">DERBY-2196</issuekey>
        </issuelink>
                    </inwardlinks>
                    </issuelinktype>
            </issuelinks>
    <attachments>
            <attachment id="12362535" name="DERBY-2963-1.diff" size="1900" author="dagw" created="Wed, 25 Jul 2007 08:34:30 -0700 (PDT)"/>
            <attachment id="12362347" name="DERBY-2963-1.diff" size="1376" author="dagw" created="Mon, 23 Jul 2007 08:53:37 -0700 (PDT)"/>
            <attachment id="12362348" name="DERBY-2963-1.stat" size="108" author="dagw" created="Mon, 23 Jul 2007 08:53:37 -0700 (PDT)"/>
            <attachment id="12362559" name="DERBY-2963-docs-1.diff" size="960" author="dagw" created="Wed, 25 Jul 2007 14:25:18 -0700 (PDT)"/>
            <attachment id="12362560" name="DERBY-2963-docs-1.stat" size="46" author="dagw" created="Wed, 25 Jul 2007 14:25:18 -0700 (PDT)"/>
        </attachments>

    <subtasks>
        </subtasks>

            <customfields>
                                    <customfield id="customfield_12310090" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                    <customfieldname>Derby Info</customfieldname>
                    <customfieldvalues>
                            <customfieldvalue><![CDATA[Regression]]></customfieldvalue>
    
                    </customfieldvalues>
                </customfield>
                                                                </customfields>
    
</item>

<item>
<title>[DERBY-2960] Group by substr() on collated database causes ERROR XJ001: Java exception: 'ASSERT FAILED col1.getClass() (class org.apache.derby.iapi.types.SQLVarchar) expected to be the same as col2.getClass() (class org.apache.derby.iapi.types.CollatorSQLVarchar):</title>
<link>https://issues.apache.org:443/jira/browse/DERBY-2960</link>

                    <description>ij&amp;gt; create table alltypes (i int, s smallint, l bigint, c char(10), v varchar(50), lvc long varchar,d double precision,&lt;br/&gt;
r real, dt date, t time, ts timestamp, b char(2) for bit data, bv varchar(8) for bit data, lbv long varchar for bit data&lt;br/&gt;
, dc decimal(5,2));&lt;br/&gt;
0 rows inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; select substr(c||v, 1, 4), count(*) from alltypes group by substr(c||v, 1, 4) ;&lt;br/&gt;
1   |2&lt;br/&gt;
----------------&lt;br/&gt;
&lt;br/&gt;
0 rows selected&lt;br/&gt;
ij&amp;gt; insert into alltypes values (0, 100, 1000000, 'duplicate', 'this is duplicated', 'also duplicated',200.0e0, 200.0e0,&lt;br/&gt;
&amp;nbsp;date('1992-01-01'), time('12:30:30'), timestamp('1992-01-01 12:30:30'), X'12af', x'0000111100001111', X'1234', 111.11)&lt;br/&gt;
;&lt;br/&gt;
1 row inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; insert into alltypes values (0, 100, 1000000, 'duplicate', 'this is duplicated', 'also duplicated',200.0e0, 200.0e0,&lt;br/&gt;
&amp;nbsp;date('1992-01-01'), time('12:30:30'), timestamp('1992-01-01 12:30:30'), X'12af', x'0000111100001111', X'1234', 111.11)&lt;br/&gt;
;&lt;br/&gt;
1 row inserted/updated/deleted&lt;br/&gt;
ij&amp;gt; select substr(c||v, 1, 4), count(*) from alltypes group by substr(c||v, 1, 4) ;&lt;br/&gt;
ERROR XJ001: Java exception: 'ASSERT FAILED col1.getClass() (class org.apache.derby.iapi.types.SQLVarchar) expected to b&lt;br/&gt;
e the same as col2.getClass() (class org.apache.derby.iapi.types.CollatorSQLVarchar): org.apache.derby.shared.common.san&lt;br/&gt;
ity.AssertFailure'.&lt;br/&gt;
&lt;br/&gt;
</description>
                <environment/>
            <key id="12374192">DERBY-2960</key>
        <summary>Group by substr() on collated database causes ERROR XJ001: Java exception: 'ASSERT FAILED col1.getClass() (class org.apache.derby.iapi.types.SQLVarchar) expected to be the same as col2.getClass() (class org.apache.derby.iapi.types.CollatorSQLVarchar):</summary>
        <type id="1" iconUrl="https://issues.apache.org:443/jira/images/icons/bug.gif">Bug</type>
    
            <priority id="3" iconUrl="https://issues.apache.org:443/jira/images/icons/priority_major.gif">Major</priority>    
        <status id="6" iconUrl="https://issues.apache.org:443/jira/images/icons/status_closed.gif">Closed</status>
                        <resolution id="1">Fixed</resolution>
            
    
                        <assignee username="mamtas">Mamta A. Satoor</assignee>
            
                        <reporter username="kmarsden">Kathey Marsden</reporter>
            
    <created>Thu, 19 Jul 2007 11:57:32 -0700 (PDT)</created>
    <updated>Fri, 20 Jul 2007 09:58:27 -0700 (PDT)</updated>

                        <version>10.4.0.0</version>
            
                        <fixVersion>10.3.1.4</fixVersion>
                    <fixVersion>10.4.0.0</fixVersion>
            
                        <component>SQL</component>
            
            <due/>
    
            <votes>0</votes>
    
    

            <comments>
                    <comment author="kmarsden" created="Thu, 19 Jul 2007 11:59:31 -0700 (PDT)">This issue was found during collation testing.  Below is the test failure and trace;&lt;br/&gt;
1) testMiscExpressions(org.apache.derbyTesting.functionTests.tests.lang.GroupByExpressionTest)java.sql.SQLException: Java exception: 'ASSERT FAILED col1.getClass() (class org.apache.derby.iapi.types.SQLVarchar) expected to be the same as col2.getClass() (class org.apache.derby.iapi.types.CollatorSQLVarchar): org.apache.derby.shared.common.sanity.AssertFailure'.&lt;br/&gt;
	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(SQLExceptionFactory.java:45)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Util.java:88)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.Util.javaException(Util.java:245)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(TransactionResourceImpl.java:403)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(TransactionResourceImpl.java:346)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection.handleException(EmbedConnection.java:1572)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.ConnectionChild.handleException(ConnectionChild.java:81)&lt;br/&gt;
	at &amp;lt;unknown class&amp;gt;.&amp;lt;unknown method&amp;gt;(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeStatement(EmbedPreparedStatement.java:1652)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeQuery(EmbedPreparedStatement.java:275)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.lang.GroupByExpressionTest.verifyQueryResults(GroupByExpressionTest.java:430)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.lang.GroupByExpressionTest.testMiscExpressions(GroupByExpressionTest.java:209)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:95)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
Caused by: org.apache.derby.shared.common.sanity.AssertFailure: ASSERT FAILED col1.getClass() (class org.apache.derby.iapi.types.SQLVarchar) expected to be the same as col2.getClass() (class org.apache.derby.iapi.types.CollatorSQLVarchar)&lt;br/&gt;
	at org.apache.derby.shared.common.sanity.SanityManager.THROWASSERT(SanityManager.java:162)&lt;br/&gt;
	at org.apache.derby.shared.common.sanity.SanityManager.THROWASSERT(SanityManager.java:147)&lt;br/&gt;
	at org.apache.derby.impl.store.access.sort.MergeSort.checkColumnTypes(MergeSort.java:467)&lt;br/&gt;
	at org.apache.derby.impl.store.access.sort.MergeInserter.insert(MergeInserter.java:98)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.GroupedAggregateResultSet.loadSorter(GroupedAggregateResultSet.java:308)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.GroupedAggregateResultSet.openCore(GroupedAggregateResultSet.java:180)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.openCore(ProjectRestrictResultSet.java:168)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl.open(BasicNoPutResultSetImpl.java:258)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericPreparedStatement.execute(GenericPreparedStatement.java:370)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java:1203)&lt;br/&gt;
	... 45 more&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
</comment>
                    <comment author="mamtas" created="Fri, 20 Jul 2007 01:38:59 -0700 (PDT)">It appears that we are generating SQLVarchar rather than CollatorSQLVarchar for the query above. I am working on the problem.</comment>
                    <comment author="mamtas" created="Fri, 20 Jul 2007 09:57:47 -0700 (PDT)">Checked in a fix for this into main (558036) and 10.3 codeline (558049). The commit comments were as follows&lt;br/&gt;
&lt;br/&gt;
&amp;quot;select&amp;quot; query failed because we were generating SQLVarchar rather than CollatorSQLVarchar&lt;br/&gt;
create table alltypes (c char(10), v varchar(50));&lt;br/&gt;
insert into alltypes values ('duplicate', 'is duplicated');&lt;br/&gt;
select substr(c||v, 1, 4), count(*) from alltypes group by substr(c||v, 1, 4) ;&lt;br/&gt;
&lt;br/&gt;
To fix the problem, I needed to override StringDataValue getNewVarchar() in CollatorSQLVarchar. Without this new method, we were generating SQLVarchar in territory based databased when the collation type was territory based.&lt;br/&gt;
&lt;br/&gt;
</comment>
                </comments>
    
    <issuelinks>
                <issuelinktype id="10030">
            <name>Reference</name>
                                        <inwardlinks description="is related to">
                            <issuelink>
            <issuekey id="12369433">DERBY-2656</issuekey>
        </issuelink>
                    </inwardlinks>
                    </issuelinktype>
            </issuelinks>
    <attachments>
        </attachments>

    <subtasks>
        </subtasks>

            <customfields>
                                                                        </customfields>
    
</item>

<item>
<title>[DERBY-2959] create table ... as select ... from systemtable with no data fails even when there is no character string type involved. This happens in a territory based database</title>
<link>https://issues.apache.org:443/jira/browse/DERBY-2959</link>

                    <description>Following query should fail because we are trying to create a user table with UCS_BASIC character columns when the user schema has collation of territory based.&lt;br/&gt;
CREATE TABLE T AS SELECT TABLENAME FROM SYS.SYSTABLES WITH NO DATA&lt;br/&gt;
&lt;br/&gt;
But the following query should not fail because there are no character string columns involved. This jira entry is to fix the exception that is getting thrown for the query below&lt;br/&gt;
CREATE TABLE T AS SELECT COLUMNNUMBER FROM SYS.SYSCOLUMNS WITH NO DATA&lt;br/&gt;
&lt;br/&gt;
I have put in a fix for this in main using revision 557693. The commit comments were as follows &lt;br/&gt;
&lt;br/&gt;
This commit has 2 simple fixes (&lt;a href="https://issues.apache.org/jira/browse/DERBY-2951" title="BatchUpdateTest.testAssociatedParams test fails with collation with exception: Java exception: 'ASSERT FAILED type of inserted column[0] = org.apache.derby.iapi.types.CollatorSQLChartype of template column[0] = org.apache.derby.iapi.types.SQLChar: "&gt;&lt;strike&gt;DERBY-2951&lt;/strike&gt;&lt;/a&gt; which gives assert failure and &lt;a href="https://issues.apache.org/jira/browse/DERBY-2656" title="Run suites.All against a collated database"&gt;&lt;strike&gt;DERBY-2656&lt;/strike&gt;&lt;/a&gt; The table will have collation type UCS_BASIC which is different than the collation of the schema TERRITORY_BASED hence this operation is not supported.) &lt;br/&gt;
&lt;br/&gt;
The failure in &lt;a href="https://issues.apache.org/jira/browse/DERBY-2951" title="BatchUpdateTest.testAssociatedParams test fails with collation with exception: Java exception: 'ASSERT FAILED type of inserted column[0] = org.apache.derby.iapi.types.CollatorSQLChartype of template column[0] = org.apache.derby.iapi.types.SQLChar: "&gt;&lt;strike&gt;DERBY-2951&lt;/strike&gt;&lt;/a&gt; is because in store, we were not using correct format id and hence collation information was not getting written out and read from disk. Added a test case for this in CollationTest. &lt;br/&gt;
&lt;br/&gt;
The failure in &lt;a href="https://issues.apache.org/jira/browse/DERBY-2656" title="Run suites.All against a collated database"&gt;&lt;strike&gt;DERBY-2656&lt;/strike&gt;&lt;/a&gt; was because of the bug that we were comparing collation type for non-character types. Collation is only applicable to character types and hence we should check for character types before comparing the collation info. Added a test case for this one too. </description>
                <environment/>
            <key id="12374180">DERBY-2959</key>
        <summary>create table ... as select ... from systemtable with no data fails even when there is no character string type involved. This happens in a territory based database</summary>
        <type id="1" iconUrl="https://issues.apache.org:443/jira/images/icons/bug.gif">Bug</type>
    
            <priority id="3" iconUrl="https://issues.apache.org:443/jira/images/icons/priority_major.gif">Major</priority>    
        <status id="6" iconUrl="https://issues.apache.org:443/jira/images/icons/status_closed.gif">Closed</status>
                        <resolution id="1">Fixed</resolution>
            
    
                        <assignee username="mamtas">Mamta A. Satoor</assignee>
            
                        <reporter username="mamtas">Mamta A. Satoor</reporter>
            
    <created>Thu, 19 Jul 2007 10:53:58 -0700 (PDT)</created>
    <updated>Mon, 23 Jul 2007 10:05:45 -0700 (PDT)</updated>

                        <version>10.3.1.4</version>
            
                        <fixVersion>10.3.1.4</fixVersion>
                    <fixVersion>10.4.0.0</fixVersion>
            
                        <component>SQL</component>
            
            <due/>
    
            <votes>0</votes>
    
    

            <comments>
                    <comment author="mamtas" created="Thu, 19 Jul 2007 11:01:47 -0700 (PDT)">This issue was found while doing testing in &lt;a href="https://issues.apache.org/jira/browse/DERBY-2656" title="Run suites.All against a collated database"&gt;&lt;strike&gt;DERBY-2656&lt;/strike&gt;&lt;/a&gt;</comment>
                    <comment author="mamtas" created="Thu, 19 Jul 2007 11:15:08 -0700 (PDT)">Merged change into 10.3 codeline using revision 557716</comment>
                    <comment author="mamtas" created="Thu, 19 Jul 2007 22:49:15 -0700 (PDT)">Not sure if this made it into 10.3.1.3 but the fix is in main and 10.3 codeline.</comment>
                    <comment author="myrna" created="Sat, 21 Jul 2007 12:47:38 -0700 (PDT)">yes, revision 557716 is older 557799, so it's in 10.3.1.3. You may consider correcting the commit comment in revision 557716, it says it's fixing the problem of &lt;a href="https://issues.apache.org/jira/browse/DERBY-2656" title="Run suites.All against a collated database"&gt;&lt;strike&gt;DERBY-2656&lt;/strike&gt;&lt;/a&gt;, but that bug actually is the task of running the tests against a collated database. If you propedit the revision comment, the change would show up with this bug.&lt;br/&gt;
</comment>
                    <comment author="mamtas" created="Mon, 23 Jul 2007 10:05:45 -0700 (PDT)">Changed the commit comments for the fixes that went into main and 10.3.1.3 to include the proper jira entry rather than &lt;a href="https://issues.apache.org/jira/browse/DERBY-2656" title="Run suites.All against a collated database"&gt;&lt;strike&gt;DERBY-2656&lt;/strike&gt;&lt;/a&gt;. Thanks to Myrna for pointing it out.</comment>
                </comments>
    
    <issuelinks>
                <issuelinktype id="10032">
            <name>Blocker</name>
                            <outwardlinks description="blocks">
                            <issuelink>
            <issuekey id="12369433">DERBY-2656</issuekey>
        </issuelink>
                    </outwardlinks>
                                </issuelinktype>
            </issuelinks>
    <attachments>
        </attachments>

    <subtasks>
        </subtasks>

            <customfields>
                                                                        </customfields>
    
</item>

<item>
<title>[DERBY-2955] ERROR 42ZA2 creating table with check constraint with literal comparison</title>
<link>https://issues.apache.org:443/jira/browse/DERBY-2955</link>

                    <description>I cannot create the following table with a collated database.  &lt;br/&gt;
EMPNAME should be TERRITORY_BASED collation I think, but perhaps is not initialized in time for the check constraint processing.&lt;br/&gt;
&lt;br/&gt;
ij&amp;gt; connect 'jdbc:derby:nordb;create=true;territory=no_NO;collation=TERRITORY_BASED';&lt;br/&gt;
ij&amp;gt; CREATE TABLE STAFF9 (EMPNUM    CHAR(3) NOT NULL&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;CONSTRAINT STAFF9_PK PRIMARY KEY,&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;EMPNAME  CHAR(20),&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;GRADE DECIMAL(4),&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;CITY   CHAR(15),&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;CONSTRAINT STAFF9_EMPNAME CHECK (EMPNAME NOT LIKE 'T%'));&lt;br/&gt;
ERROR 42ZA2: Operand of LIKE predicate with type CHAR(20) and collation UCS_BASIC is not compatable with LIKE pattern op&lt;br/&gt;
erand with type CHAR(2) and collation TERRITORY_BASED.</description>
                <environment/>
            <key id="12374153">DERBY-2955</key>
        <summary>ERROR 42ZA2 creating table with check constraint with literal comparison</summary>
        <type id="1" iconUrl="https://issues.apache.org:443/jira/images/icons/bug.gif">Bug</type>
    
            <priority id="3" iconUrl="https://issues.apache.org:443/jira/images/icons/priority_major.gif">Major</priority>    
        <status id="6" iconUrl="https://issues.apache.org:443/jira/images/icons/status_closed.gif">Closed</status>
                        <resolution id="1">Fixed</resolution>
            
    
                        <assignee username="mamtas">Mamta A. Satoor</assignee>
            
                        <reporter username="kmarsden">Kathey Marsden</reporter>
            
    <created>Thu, 19 Jul 2007 07:43:37 -0700 (PDT)</created>
    <updated>Fri, 20 Jul 2007 00:41:47 -0700 (PDT)</updated>

                        <version>10.4.0.0</version>
            
                        <fixVersion>10.3.1.4</fixVersion>
                    <fixVersion>10.4.0.0</fixVersion>
            
                        <component>SQL</component>
            
            <due/>
    
            <votes>0</votes>
    
    

            <comments>
                    <comment author="kmarsden" created="Thu, 19 Jul 2007 07:47:22 -0700 (PDT)">This issue was discovered in the testing for &lt;a href="https://issues.apache.org/jira/browse/DERBY-2656" title="Run suites.All against a collated database"&gt;&lt;strike&gt;DERBY-2656&lt;/strike&gt;&lt;/a&gt;.   The test schema8 failed with the following exception:&lt;br/&gt;
&lt;br/&gt;
schema8(org.apache.derbyTesting.functionTests.tests.nist.NistScripts) failed:&lt;br/&gt;
junit.framework.ComparisonFailure: Output at line 115 expected:&amp;lt;0 rows inserted/updated/deleted&amp;gt; but was:&amp;lt;ERROR 42ZA2: Operand of LIKE predicate with type CHAR(20) and collation UCS_BASIC is not compatable with LIKE pattern operand with type CHAR(2) and collation TERRITORY_BASED.&amp;gt;&lt;br/&gt;
	at junit.framework.Assert.assertEquals(Assert.java:81)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.util.CanonTestCase.compareCanon(CanonTestCase.java:100)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.util.ScriptTestCase.runTest(ScriptTestCase.java:124)&lt;br/&gt;
	at junit.framework.TestCase.runBare(TestCase.java:127)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:95)&lt;br/&gt;
	at junit.framework.TestResult$1.protect(TestResult.java:106)&lt;br/&gt;
	at junit.framework.TestResult.runProtected(TestResult.java:124)&lt;br/&gt;
	at junit.framework.TestResult.run(TestResult.java:109)&lt;br/&gt;
	at junit.framework.TestCase.run(TestCase.java:118)&lt;br/&gt;
	at junit.framework.TestSuite.runTest(TestSuite.java:208)&lt;br/&gt;
	at junit.framework.TestSuite.run(TestSuite.java:203)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
	at junit.framework.TestResult.runProtected(TestResult.java:124)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
	at junit.framework.TestSuite.runTest(TestSuite.java:208)&lt;br/&gt;
	at junit.framework.TestSuite.run(TestSuite.java:203)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
	at junit.framework.TestResult.runProtected(TestResult.java:124)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
	at junit.framework.TestResult.runProtected(TestResult.java:124)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
	at junit.framework.TestResult.runProtected(TestResult.java:124)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
	at junit.framework.TestResult.runProtected(TestResult.java:124)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
	at junit.framework.TestResult.runProtected(TestResult.java:124)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
	at junit.framework.TestSuite.runTest(TestSuite.java:208)&lt;br/&gt;
	at junit.framework.TestSuite.run(TestSuite.java:203)&lt;br/&gt;
	at junit.framework.TestSuite.runTest(TestSuite.java:208)&lt;br/&gt;
	at junit.framework.TestSuite.run(TestSuite.java:203)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
	at junit.framework.TestResult.runProtected(TestResult.java:124)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
	at junit.framework.TestResult.runProtected(TestResult.java:124)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
	at junit.framework.TestResult.runProtected(TestResult.java:124)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
	at TimeRunner.main(TimeRunner.java:29)</comment>
                    <comment author="kmarsden" created="Thu, 19 Jul 2007 07:51:16 -0700 (PDT)">Here is another error that can occur with check constraint from the temp_schema10 test.&lt;br/&gt;
ij&amp;gt;  CREATE TABLE RET_CATALOG (&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;VENDOR_ID INT,&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;PRODUCT_ID INT,&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;WHOLESALE NUMERIC (10,2),&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;RETAIL NUMERIC (10,2),&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;MARKUP NUMERIC (10,2),&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;EXPORT_CODE CHAR(2),&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;EXPORT_LICNSE_DATE CHAR(20),&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;CHECK (EXPORT_LICNSE_DATE IS NULL OR (&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;EXPORT_CODE = 'F1' OR&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;EXPORT_CODE = 'F2' OR&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;EXPORT_CODE = 'F3'                  )),&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;CHECK (EXPORT_CODE &amp;lt;&amp;gt; 'F2' OR WHOLESALE &amp;gt; 10000.00),&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;CHECK (RETAIL &amp;gt;= WHOLESALE),&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;CHECK (RETAIL = WHOLESALE + MARKUP));&lt;br/&gt;
ERROR 42818: Comparisons between 'CHAR' and 'CHAR' are not supported.</comment>
                    <comment author="mamtas" created="Thu, 19 Jul 2007 23:43:31 -0700 (PDT)">Checked in a fix for this in main with revision 557886 with following commit comments&lt;br/&gt;
&lt;br/&gt;
We used to set the collation type of character string columns in the generate phase rather than the bind phase of create table. But this will cause problem with following query&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;CREATE TABLE STAFF9 (EMPNAME CHAR(20),&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;CONSTRAINT STAFF9_EMPNAME CHECK (EMPNAME NOT LIKE 'T%'))&lt;br/&gt;
For the query above, when run in a territory based db, we need to have the correct collation set in bind phase of create table so that when LIKE is handled in LikeEscapeOperatorNode, we have the correct collation set for EMPNAME otherwise it will throw an exception for 'T%' having collation of territory based and EMPNAME having the default collation of UCS_BASIC. The change in this commit will ensure that character string columns get their collation set early on in the bind phase so when the bind code for LIKE kicks in, we are all set with correct collation information.&lt;br/&gt;
</comment>
                    <comment author="mamtas" created="Fri, 20 Jul 2007 00:41:38 -0700 (PDT)">Migrated changes into 10.3 codeline as part of revision 557910</comment>
                </comments>
    
    <issuelinks>
                <issuelinktype id="10030">
            <name>Reference</name>
                                        <inwardlinks description="is related to">
                            <issuelink>
            <issuekey id="12369433">DERBY-2656</issuekey>
        </issuelink>
                    </inwardlinks>
                    </issuelinktype>
            </issuelinks>
    <attachments>
        </attachments>

    <subtasks>
        </subtasks>

            <customfields>
                                                                        </customfields>
    
</item>

<item>
<title>[DERBY-2951] BatchUpdateTest.testAssociatedParams test fails with collation with exception: Java exception: 'ASSERT FAILED type of inserted column[0] = org.apache.derby.iapi.types.CollatorSQLChartype of template column[0] = org.apache.derby.iapi.types.SQLChar: </title>
<link>https://issues.apache.org:443/jira/browse/DERBY-2951</link>

                    <description>BatchUpdateTest.testAssociatedParams test fails with collation with exception: java.sql.SQLException: Java exception: 'ASSERT FAILED type of inserted column[0] = org.apache.derby.iapi.types.CollatorSQLChartype of template column[0] = org.apache.derby.iapi.types.SQLChar: org.apache.derby.shared.common.sanity.AssertFailure'.&lt;br/&gt;
&lt;br/&gt;
Full trace below:&lt;br/&gt;
&lt;br/&gt;
Java exception: 'ASSERT FAILED type of inserted column[0] = org.apache.derby.iapi.types.CollatorSQLChartype of template column[0] = org.apache.derby.iapi.types.SQLChar: org.apache.derby.shared.common.sanity.AssertFailure'.&lt;br/&gt;
at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(SQLExceptionFactory.java:45)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Util.java:88)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.Util.javaException(Util.java:245)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(TransactionResourceImpl.java:403)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(TransactionResourceImpl.java:346)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedConnection.handleException(EmbedConnection.java:1572)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.ConnectionChild.handleException(ConnectionChild.java:81)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java:1293)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeStatement(EmbedPreparedStatement.java:1652)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedPreparedStatement.executeUpdate(EmbedPreparedStatement.java:299)&lt;br/&gt;
	at org.apache.derbyTesting.functionTests.tests.jdbcapi.BatchUpdateTest.testAssociatedParams(BatchUpdateTest.java:416)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&lt;br/&gt;
	at java.lang.reflect.Method.invoke(Method.java:615)&lt;br/&gt;
	at junit.framework.TestCase.runTest(TestCase.java:154)&lt;br/&gt;
	at junit.framework.TestCase.runBare(TestCase.java:127)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestCase.runBare(BaseTestCase.java:95)&lt;br/&gt;
	at junit.framework.TestResult$1.protect(TestResult.java:106)&lt;br/&gt;
	at junit.framework.TestResult.runProtected(TestResult.java:124)&lt;br/&gt;
	at junit.framework.TestResult.run(TestResult.java:109)&lt;br/&gt;
	at junit.framework.TestCase.run(TestCase.java:118)&lt;br/&gt;
	at junit.framework.TestSuite.runTest(TestSuite.java:208)&lt;br/&gt;
	at junit.framework.TestSuite.run(TestSuite.java:203)&lt;br/&gt;
	at junit.framework.TestSuite.runTest(TestSuite.java:208)&lt;br/&gt;
	at junit.framework.TestSuite.run(TestSuite.java:203)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
	at junit.framework.TestResult.runProtected(TestResult.java:124)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
	at junit.framework.TestResult.runProtected(TestResult.java:124)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
	at junit.framework.TestSuite.runTest(TestSuite.java:208)&lt;br/&gt;
	at junit.framework.TestSuite.run(TestSuite.java:203)&lt;br/&gt;
	at junit.framework.TestSuite.runTest(TestSuite.java:208)&lt;br/&gt;
	at junit.framework.TestSuite.run(TestSuite.java:203)&lt;br/&gt;
	at junit.framework.TestSuite.runTest(TestSuite.java:208)&lt;br/&gt;
	at junit.framework.TestSuite.run(TestSuite.java:203)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
	at junit.framework.TestResult.runProtected(TestResult.java:124)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
	at junit.framework.TestResult.runProtected(TestResult.java:124)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
	at org.apache.derbyTesting.junit.BaseTestSetup.run(BaseTestSetup.java:57)&lt;br/&gt;
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)&lt;br/&gt;
	at junit.extensions.TestSetup$1.protect(TestSetup.java:19)&lt;br/&gt;
	at junit.framework.TestResult.runProtected(TestResult.java:124)&lt;br/&gt;
	at junit.extensions.TestSetup.run(TestSetup.java:23)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.junit3.JUnit3TestReference.run(JUnit3TestReference.java:128)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:460)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:673)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:386)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:196)&lt;br/&gt;
Caused by: org.apache.derby.shared.common.sanity.AssertFailure: ASSERT FAILED type of inserted column[0] = org.apache.derby.iapi.types.CollatorSQLChartype of template column[0] = org.apache.derby.iapi.types.SQLChar&lt;br/&gt;
	at org.apache.derby.shared.common.sanity.SanityManager.THROWASSERT(SanityManager.java:162)&lt;br/&gt;
	at org.apache.derby.shared.common.sanity.SanityManager.THROWASSERT(SanityManager.java:147)&lt;br/&gt;
	at org.apache.derby.impl.store.access.btree.OpenBTree.isIndexableRowConsistent(OpenBTree.java:529)&lt;br/&gt;
	at org.apache.derby.impl.store.access.btree.BTreeController.doIns(BTreeController.java:385)&lt;br/&gt;
	at org.apache.derby.impl.store.access.btree.BTreeController.insert(BTreeController.java:1035)&lt;br/&gt;
	at org.apache.derby.impl.store.access.btree.index.B2IController.insert(B2IController.java:211)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.IndexChanger.insertAndCheckDups(IndexChanger.java:455)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.IndexChanger.doInsert(IndexChanger.java:398)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.IndexChanger.insert(IndexChanger.java:605)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.IndexSetChanger.insert(IndexSetChanger.java:268)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.RowChangerImpl.insertRow(RowChangerImpl.java:453)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.InsertResultSet.normalInsertCore(InsertResultSet.java:1024)&lt;br/&gt;
	at org.apache.derby.impl.sql.execute.InsertResultSet.open(InsertResultSet.java:497)&lt;br/&gt;
	at org.apache.derby.impl.sql.GenericPreparedStatement.execute(GenericPreparedStatement.java:370)&lt;br/&gt;
	at org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(EmbedStatement.java:1203)&lt;br/&gt;
	... 54 more&lt;br/&gt;
&lt;br/&gt;
</description>
                <environment/>
            <key id="12374109">DERBY-2951</key>
        <summary>BatchUpdateTest.testAssociatedParams test fails with collation with exception: Java exception: 'ASSERT FAILED type of inserted column[0] = org.apache.derby.iapi.types.CollatorSQLChartype of template column[0] = org.apache.derby.iapi.types.SQLChar: </summary>
        <type id="1" iconUrl="https://issues.apache.org:443/jira/images/icons/bug.gif">Bug</type>
    
            <priority id="3" iconUrl="https://issues.apache.org:443/jira/images/icons/priority_major.gif">Major</priority>    
        <status id="6" iconUrl="https://issues.apache.org:443/jira/images/icons/status_closed.gif">Closed</status>
                        <resolution id="1">Fixed</resolution>
            
    
                        <assignee username="mamtas">Mamta A. Satoor</assignee>
            
                        <reporter username="kmarsden">Kathey Marsden</reporter>
            
    <created>Wed, 18 Jul 2007 14:46:49 -0700 (PDT)</created>
    <updated>Thu, 26 Jul 2007 09:35:13 -0700 (PDT)</updated>

                        <version>10.4.0.0</version>
            
                        <fixVersion>10.3.1.4</fixVersion>
                    <fixVersion>10.4.0.0</fixVersion>
            
                        <component>SQL</component>
            
            <due/>
    
            <votes>0</votes>
    
    

            <comments>
                    <comment author="mamtas" created="Thu, 19 Jul 2007 10:13:00 -0700 (PDT)">Commited a fix for this in main using revision 557693. The commit comments were as follows&lt;br/&gt;
&lt;br/&gt;
This commit has 2 simple fixes (&lt;a href="https://issues.apache.org/jira/browse/DERBY-2951" title="BatchUpdateTest.testAssociatedParams test fails with collation with exception: Java exception: 'ASSERT FAILED type of inserted column[0] = org.apache.derby.iapi.types.CollatorSQLChartype of template column[0] = org.apache.derby.iapi.types.SQLChar: "&gt;&lt;strike&gt;DERBY-2951&lt;/strike&gt;&lt;/a&gt; which gives assert failure and &lt;a href="https://issues.apache.org/jira/browse/DERBY-2656" title="Run suites.All against a collated database"&gt;&lt;strike&gt;DERBY-2656&lt;/strike&gt;&lt;/a&gt; The table will have collation type UCS_BASIC which is different than the collation of the schema TERRITORY_BASED hence this operation is not supported.)&lt;br/&gt;
&lt;br/&gt;
The failure in &lt;a href="https://issues.apache.org/jira/browse/DERBY-2951" title="BatchUpdateTest.testAssociatedParams test fails with collation with exception: Java exception: 'ASSERT FAILED type of inserted column[0] = org.apache.derby.iapi.types.CollatorSQLChartype of template column[0] = org.apache.derby.iapi.types.SQLChar: "&gt;&lt;strike&gt;DERBY-2951&lt;/strike&gt;&lt;/a&gt; is because in store, we were not using correct format id and hence collation information was not getting written out and read from disk. Added a test case for this in CollationTest.&lt;br/&gt;
&lt;br/&gt;
The failure in &lt;a href="https://issues.apache.org/jira/browse/DERBY-2656" title="Run suites.All against a collated database"&gt;&lt;strike&gt;DERBY-2656&lt;/strike&gt;&lt;/a&gt; was because of the bug that we were comparing collation type for non-character types. Collation is only applicable to character types and hence we should check for character types before comparing the collation info. Added a test case for this one too.</comment>
                    <comment author="mamtas" created="Thu, 19 Jul 2007 11:16:08 -0700 (PDT)">Merged change into 10.3 codeline using revision 557716 </comment>
                    <comment author="kmarsden" created="Thu, 26 Jul 2007 09:35:13 -0700 (PDT)">verified fix</comment>
                </comments>
    
    <issuelinks>
                <issuelinktype id="10030">
            <name>Reference</name>
                                        <inwardlinks description="is related to">
                            <issuelink>
            <issuekey id="12369433">DERBY-2656</issuekey>
        </issuelink>
                    </inwardlinks>
                    </issuelinktype>
            </issuelinks>
    <attachments>
        </attachments>

    <subtasks>
        </subtasks>

            <customfields>
                                                                        </customfields>
    
</item>

<item>
<title>[DERBY-2941] With 10.2, Closing a resultset after retrieving a large &gt; 32665 bytes value with Network Server does not release locks</title>
<link>https://issues.apache.org:443/jira/browse/DERBY-2941</link>

                    <description>Making a subtask for the 10.2 fix for this issue as the fix for 10.3 will be different.&lt;br/&gt;
&lt;br/&gt;
</description>
                <environment/>
            <key id="12373904">DERBY-2941</key>
        <summary>With 10.2, Closing a resultset after retrieving a large &gt; 32665 bytes value with Network Server does not release locks</summary>
        <type id="7" iconUrl="https://issues.apache.org:443/jira/images/icons/issue_subtask.gif">Sub-task</type>
            <parent id="12372921">DERBY-2892</parent>
    
            <priority id="3" iconUrl="https://issues.apache.org:443/jira/images/icons/priority_major.gif">Major</priority>    
        <status id="5" iconUrl="https://issues.apache.org:443/jira/images/icons/status_resolved.gif">Resolved</status>
                        <resolution id="1">Fixed</resolution>
            
    
                        <assignee username="kmarsden">Kathey Marsden</assignee>
            
                        <reporter username="kmarsden">Kathey Marsden</reporter>
            
    <created>Mon, 16 Jul 2007 08:21:19 -0700 (PDT)</created>
    <updated>Wed, 18 Jul 2007 16:30:25 -0700 (PDT)</updated>

                        <version>10.2.2.0</version>
            
                        <fixVersion>10.2.2.1</fixVersion>
                    <fixVersion>10.3.1.4</fixVersion>
                    <fixVersion>10.4.0.0</fixVersion>
            
                        <component>Network Server</component>
            
            <due/>
    
            <votes>0</votes>
    
    

            <comments>
                    <comment author="kmarsden" created="Mon, 16 Jul 2007 08:27:56 -0700 (PDT)">Attaching a patch for this issue. Patch only differs from patch attached to &lt;a href="https://issues.apache.org/jira/browse/DERBY-2892" title="Closing a resultset after retrieving a large &amp;gt; 32665 bytes value with Network Server does not release locks"&gt;DERBY-2892&lt;/a&gt; in that it has some corrections to javadoc.&lt;br/&gt;
&lt;br/&gt;
-Changes EXTDTAInputStream to use ResultSet.getCharacterStream, ResultSet.getBinaryStream instead of getClob(), getBlob..&lt;br/&gt;
&lt;br/&gt;
- Alters EngineResult for getLenth(int columnIndex) and isNull(int columnIndex) methods&lt;br/&gt;
&lt;br/&gt;
-Enables LargeDataLocksTest&lt;br/&gt;
&lt;br/&gt;
derbyall passed with only known failures.&lt;br/&gt;
&lt;br/&gt;
I would most appreciate review. If I hear no objections I will commit tomorrow.&lt;br/&gt;
&lt;br/&gt;
</comment>
                    <comment author="oysteing" created="Tue, 17 Jul 2007 05:23:24 -0700 (PDT)">I have looked at the patch, and I think the patch looks very good.&lt;br/&gt;
I only have some minor comments/questions:&lt;br/&gt;
&lt;br/&gt;
 - Did you intend to leave the changes to DDMWriter in there?&lt;br/&gt;
&lt;br/&gt;
 - You have added a comment that says &amp;quot;Stream is initialized on the&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;first read&amp;quot;.  It is not quite clear to me what stream you are&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;referring to.  It looks to me that the caller has to initialize the&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;stream (call initInputStream) BEFORE it is to be read.&lt;br/&gt;
&lt;br/&gt;
 - There seem to be some indentation differences in the&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;EXTDTAInputStream constructor.&lt;br/&gt;
&lt;br/&gt;
 - I do not understand the javadoc for EXTDTAInputStream.isNUll.  What&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;do you mean by &amp;quot;determined in the constructor&amp;quot;?  It seems like the&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;only thing the constructor does is to register the parameter&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;values.&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;br/&gt;
+1 to commit, but would prefer that the comments discussed about is made clearer.</comment>
                    <comment author="naka" created="Tue, 17 Jul 2007 05:52:02 -0700 (PDT)">I remember that I had trouble to retrieve length of stored data in &lt;a href="https://issues.apache.org/jira/browse/DERBY-326" title="Improve streaming of large objects for network server and client"&gt;DERBY-326&lt;/a&gt;.&lt;br/&gt;
&lt;a href="http://mail-archives.apache.org/mod_mbox/db-derby-dev/200512.mbox/%3C43A975F5.3090904@basil.ocn.ne.jp%3E"&gt;http://mail-archives.apache.org/mod_mbox/db-derby-dev/200512.mbox/%3C43A975F5.3090904@basil.ocn.ne.jp%3E&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
At that point, it seems that length information might be missing in some cases....&lt;br/&gt;
&lt;br/&gt;
My understanding is that the engine was improved and &lt;br/&gt;
it became always possible to retrieve length of stored data via DataValueDescriptor#getLength().</comment>
                    <comment author="kmarsden" created="Tue, 17 Jul 2007 12:26:17 -0700 (PDT)">Fixed in 10.2 and ported to trunk and 10.3 and verified with 10.2 client.  &lt;a href="https://issues.apache.org/jira/browse/DERBY-2892" title="Closing a resultset after retrieving a large &amp;gt; 32665 bytes value with Network Server does not release locks"&gt;DERBY-2892&lt;/a&gt; still needs to be fixed for server working with 10.3+ client&lt;br/&gt;
&lt;br/&gt;
Kathey&lt;br/&gt;
</comment>
                    <comment author="myrna" created="Wed, 18 Jul 2007 16:15:10 -0700 (PDT)">I know you checked in the test to 10.3 branch, but I'm doubting that this issue should be marked fixed for 10.3.1.2?&lt;br/&gt;
</comment>
                    <comment author="kmarsden" created="Wed, 18 Jul 2007 16:30:25 -0700 (PDT)">I checked the fix into the 10.3 branch as well, so hopefully the fix version is ok.  It only fixes 10.2 client with 10.3. It does not fix 2892 10.3 client with 10.3.&lt;br/&gt;
&lt;br/&gt;
</comment>
                </comments>
    
    <attachments>
            <attachment id="12361897" name="DERBY-2941_diff.txt" size="14221" author="kmarsden" created="Mon, 16 Jul 2007 08:27:56 -0700 (PDT)"/>
        </attachments>

    <subtasks>
        </subtasks>

            <customfields>
                                                        <customfield id="customfield_12310050" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                    <customfieldname>Urgency</customfieldname>
                    <customfieldvalues>
                        <customfieldvalue><![CDATA[Urgent]]></customfieldvalue>

                    </customfieldvalues>
                </customfield>
                                            </customfields>
    
</item>


</channel>
</rss>