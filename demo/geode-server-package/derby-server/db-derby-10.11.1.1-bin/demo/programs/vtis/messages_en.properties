###################################################
#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
###################################################

###################################################
#
# DO NOT EDIT THIS FILE!
#
# Instead, edit messages.xml. The ant MessageBuilder task takes
# messages.xml as input and from it generates this file.
#
###################################################


01001=An attempt to update or delete an already deleted row was made: No row was updated or deleted.

01003=Null values were eliminated from the argument of a column function.

# Arguments:
#
#    {0} = authorizationID
#
01006=Privilege not revoked from user {0}.

# Arguments:
#
#    {0} = authorizationID
#    {1} = authorizationID
#
01007=Role {0} not revoked from authentication id {1}.

# Arguments:
#
#    {0} = authorizationID
#    {1} = authorizationID
#
01008=WITH ADMIN OPTION of role {0} not revoked from authentication id {1}.

# Arguments:
#
#    {0} = columnName
#    {1} = tableName
#
01009=Generated column {0} dropped from table {1}.

0100E=Attempt to return too many result sets. 

# Arguments:
#
#    {0} = constraintName
#    {1} = tableName
#
01500=The constraint {0} on table {1} has been dropped.

# Arguments:
#
#    {0} = viewName
#
01501=The view {0} has been dropped.

# Arguments:
#
#    {0} = triggerName
#    {1} = tableName
#
01502=The trigger {0} on table {1} has been dropped.

# Arguments:
#
#    {0} = columnName
#    {1} = tableName
#
01503=The column {0} on table {1} has been modified by adding a not null constraint.

# Arguments:
#
#    {0} = indexName
#
01504=The new index is a duplicate of an existing index: {0}.

# Arguments:
#
#    {0} = dataValue
#
01505=The value {0} may be truncated.

# Arguments:
#
#    {0} = synonymName
#    {1} = objectName
#
01522=The newly defined synonym ''{0}'' resolved to the object ''{1}'' which is currently undefined.

# Arguments:
#
#    {0} = databaseName
#
01J01=Database ''{0}'' not created, connection made to existing database instead.

01J02=Scroll sensitive cursors are not currently implemented.

# Arguments:
#
#    {0} = className
#    {1} = columnName
#
01J04=The class ''{0}'' for column ''{1}'' does not implement java.io.Serializable or java.sql.SQLData. Instances must implement one of these interfaces to allow them to be stored.

01J05=Database upgrade succeeded. The upgraded database is now ready for use. Revalidating stored prepared statements failed. See next exception for details of failure.

01J06=ResultSet not updatable. Query does not qualify to generate an updatable ResultSet.

01J07=ResultSetHoldability restricted to ResultSet.CLOSE_CURSORS_AT_COMMIT for a global transaction.

# Arguments:
#
#    {0} = resultSetType
#    {1} = resultSetType
#
01J08=Unable to open resultSet type {0}. ResultSet type {1} opened.

01J10=Scroll sensitive result sets are not supported by server; remapping to forward-only cursor

01J12=Unable to obtain message text from server. See the next exception. The stored procedure SYSIBM.SQLCAMESSAGE is not installed on the server. Please contact your database administrator.

# Arguments:
#
#    {0} = number
#
01J13=Number of rows returned ({0}) is too large to fit in an integer; the value returned will be truncated.

01J14=SQL authorization is being used without first enabling authentication.

# Arguments:
#
#    {0} = remainingDays
#    {1} = databaseName
#
01J15=Your password will expire in {0} day(s). Please use the SYSCS_UTIL.SYSCS_MODIFY_PASSWORD procedure to change your password in database ''{1}''.

# Arguments:
#
#    {0} = databaseName
#
01J16=Your password is stale. To protect the database, you should update your password soon. Please use the SYSCS_UTIL.SYSCS_MODIFY_PASSWORD procedure to change your password in database ''{0}''.

01J17=You cannot encrypt, re-encrypt, or decrypt a database which is already booted. You must shutdown the database before attempting these operations.

07000=At least one parameter to the current statement is uninitialized.

# Arguments:
#
#    {0} = parameterName
#    {1} = procedureName
#
07004=Parameter {0} is an {1} procedure parameter and must be registered with CallableStatement.registerOutParameter before execution.

07009=No input parameters.

08000=Connection closed by unknown interrupt.

08001.C.10=A connection could not be established because the security token is larger than the maximum allowed by the network protocol.

08001.C.11=A connection could not be established because the user id has a length of zero or is larger than the maximum allowed by the network protocol.

08001.C.12=A connection could not be established because the password has a length of zero or is larger than the maximum allowed by the network protocol.

08001.C.13=A connection could not be established because the external name (EXTNAM) has a length of zero or is larger than the maximum allowed by the network protocol.

08001.C.14=A connection could not be established because the server name (SRVNAM) has a length of zero or is larger than the maximum allowed by the network protocol.

# Arguments:
#
#    {0} = propertyName
#
08001.C.1=Required Derby DataSource property {0} not set.

# Arguments:
#
#    {0} = error
#    {1} = serverName
#    {2} = portNumber
#    {3} = messageText
#
08001.C.2={0} : Error connecting to server {1} on port {2} with message {3}.

# Arguments:
#
#    {0} = error
#
08001.C.3=SocketException: ''{0}''

# Arguments:
#
#    {0} = error
#
08001.C.4=Unable to open stream on socket: ''{0}''.

# Arguments:
#
#    {0} = number
#    {1} = number
#
08001.C.5=User id length ({0}) is outside the range of 1 to {1}.

# Arguments:
#
#    {0} = length
#    {1} = number
#
08001.C.6=Password length ({0}) is outside the range of 1 to {1}.

08001.C.7=User id can not be null.

08001.C.8=Password can not be null.

# Arguments:
#
#    {0} = databaseName
#
08001.C.9=A connection could not be established because the database name ''{0}'' is larger than the maximum length allowed by the network protocol.

08003=No current connection.

08003.C.1=getConnection() is not valid on a closed PooledConnection.

08003.C.2=Lob method called after connection was closed

08003.C.3=The underlying physical connection is stale or closed.

# Arguments:
#
#    {0} = connectionName
#
08004=Connection refused : {0}

# Arguments:
#
#    {0} = reasonText
#
08004.C.1=Connection authentication failure occurred.  Reason: {0}.

# Arguments:
#
#    {0} = databaseName
#
08004.C.2=The connection was refused because the database {0} was not found.

08004.C.3=Database connection refused.

# Arguments:
#
#    {0} = authorizationID
#    {1} = databaseName
#
08004.C.4=User ''{0}'' cannot shut down database ''{1}''. Only the database owner can perform this operation.

# Arguments:
#
#    {0} = authorizationID
#    {1} = databaseName
#
08004.C.5=User ''{0}'' cannot (re)encrypt database ''{1}''. Only the database owner can perform this operation.

# Arguments:
#
#    {0} = authorizationID
#    {1} = databaseName
#
08004.C.6=User ''{0}'' cannot upgrade database ''{1}''. Only the database owner can perform this operation.

# Arguments:
#
#    {0} = databaseName
#
08004.C.7=Connection refused to database ''{0}'' because it is in replication slave mode.

# Arguments:
#
#    {0} = authorizationID
#    {1} = databaseName
#
08004.C.8=User ''{0}'' cannot issue a replication operation on database ''{1}''. Only the database owner can perform this operation.

# Arguments:
#
#    {0} = authorizationID
#    {1} = exceptionMsg
#
08004.C.9=Missing permission for user ''{0}'' to shutdown system [{1}].

# Arguments:
#
#    {0} = databaseName
#    {1} = exceptionMsg
#
08004.C.10=Cannot check system permission to create database ''{0}'' [{1}].

# Arguments:
#
#    {0} = authorizationID
#    {1} = databaseName
#    {2} = exceptionMsg
#
08004.C.11=Missing permission for user ''{0}'' to create database ''{1}'' [{2}].

08004.C.12=Connection authentication failure occurred. Either the supplied credentials were invalid, or the database uses a password encryption scheme not compatible with the strong password substitution security mechanism. If this error started after upgrade, refer to the release note for DERBY-4483 for options.

08004.C.13=Username or password is null or 0 length.

# Arguments:
#
#    {0} = authorizationID
#    {1} = databaseName
#
08004.C.14=User ''{0}'' cannot decrypt database ''{1}''. Only the database owner can perform this operation.

# Arguments:
#
#    {0} = error
#
08006.C=A network protocol error was encountered and the connection has been terminated: {0}

08006.C.1=An error occurred during connect reset and the connection has been terminated.  See chained exceptions for details.

# Arguments:
#
#    {0} = error
#
08006.C.2= SocketException: ''{0}''

# Arguments:
#
#    {0} = error
#
08006.C.3=A communications error has been detected: {0}.

08006.C.4=An error occurred during a deferred connect reset and the connection has been terminated.  See chained exceptions for details.

# Arguments:
#
#    {0} = number
#    {1} = number
#
08006.C.5=Insufficient data while reading from the network - expected a minimum of {0} bytes and received only {1} bytes.  The connection has been terminated.

08006.C.6=Attempt to fully materialize lob data that is too large for the JVM.  The connection has been terminated.

08006.C.8=org.apache.derby.jdbc.EmbeddedDriver is not registered with the JDBC driver manager

# Arguments:
#
#    {0} = databaseName
#
08006.D=Database ''{0}'' shutdown.

# Arguments:
#
#    {0} = databaseName
#
08006.D.1=Database ''{0}'' dropped.

# Arguments:
#
#    {0} = featureName
#
0A000.S=Feature not implemented: {0}.

# Arguments:
#
#    {0} = commandName
#
0A000.C.6=The DRDA command {0} is not currently implemented.  The connection has been terminated.

0A000.S.1=JDBC method is not yet implemented.

# Arguments:
#
#    {0} = methodName
#
0A000.S.2=JDBC method {0} is not supported by the server. Please upgrade the server.

# Arguments:
#
#    {0} = propertyName
#
0A000.S.3=resultSetHoldability property {0} not supported

0A000.S.4=cancel() not supported by the server.

# Arguments:
#
#    {0} = mechanismName
#
0A000.S.5=Security mechanism ''{0}'' is not supported.

# Arguments:
#
#    {0} = datatypeName
#
0A000.S.7=The data type ''{0}'' is not supported.

# Arguments:
#
#    {0} = roleName
#
0P000=Invalid role specification, role does not exist: ''{0}''.

# Arguments:
#
#    {0} = roleName
#
0P000.S.1=Invalid role specification, role not granted to current user or PUBLIC: ''{0}''.

21000=Scalar subquery is only allowed to return a single row.

# Arguments:
#
#    {0} = dataType
#    {1} = dataValue
#    {2} = length
#
22001=A truncation error was encountered trying to shrink {0} ''{1}'' to length {2}.

# Arguments:
#
#    {0} = datatypeName
#
22003=The resulting value is outside the range for the data type {0}.

# Arguments:
#
#    {0} = year
#    {1} = year
#
22003.S.1=Year ({0}) exceeds the maximum ''{1}''.

22003.S.2=Decimal may only be up to 31 digits.

# Arguments:
#
#    {0} = datatypeName
#    {1} = datatypeName
#
22003.S.3=Overflow occurred during numeric data type conversion of ''{0}'' to {1}.

# Arguments:
#
#    {0} = number
#    {1} = datatypeName
#
22003.S.4=The length ({0}) exceeds the maximum length ({1}) for the data type.

# Arguments:
#
#    {0} = typeName
#    {1} = typeName
#
22005.S.1=Unable to convert a value of type ''{0}'' to type ''{1}'' : the encoding is not supported.

22005.S.2=The required character converter is not available.

22005.S.3=Unicode string cannot convert to Ebcdic string

# Arguments:
#
#    {0} = typeName
#    {1} = number
#    {2} = number
#
22005.S.4=Unrecognized JDBC type. Type: {0}, columnCount: {1}, columnIndex: {2}.

# Arguments:
#
#    {0} = parameterName
#
22005.S.5=Invalid JDBC type for parameter {0}.

# Arguments:
#
#    {0} = datatypeName
#
22005.S.6=Unrecognized Java SQL type {0}.

22005.S.7=Unicode string cannot convert to UTF-8 string

# Arguments:
#
#    {0} = datatypeName
#    {1} = datatypeName
#
22005=An attempt was made to get a data value of type ''{0}'' from a data value of type ''{1}''.

22007.S.180=The string representation of a date/time value is out of range.

22007.S.181=The syntax of the string representation of a date/time value is incorrect.

# Arguments:
#
#    {0} = argument
#    {1} = functionName
#
22008.S=''{0}'' is an invalid argument to the {1} function.

# Arguments:
#
#    {0} = schemaName
#    {1} = sequenceName
#
2200H.S=Sequence generator ''{0}.{1}'' does not cycle. No more values can be obtained from this sequence generator.

2200L=Values assigned to XML columns must be well-formed Document nodes.

# Arguments:
#
#    {0} = parserError
#
2200M=Invalid XML Document: {0}

# Arguments:
#
#    {0} = operatorName
#
2200V=Invalid context item for {0} operator; context items must be well-formed Document nodes.

2200W=XQuery serialization error: Attempted to serialize one or more top-level Attribute nodes.

22011=The second or third argument of the SUBSTR function is out of range.

# Arguments:
#
#    {0} = offset
#    {1} = len
#    {2} = str
#
22011.S.1=The range specified for the substring with offset {0} and len {1} is out of range for the String: {2}.

22012=Attempt to divide by zero.

# Arguments:
#
#    {0} = number
#
22013=Attempt to take the square root of a negative number, ''{0}''.

# Arguments:
#
#    {0} = searchString
#    {1} = fromString
#    {2} = startIndex
#
22014=The start position for LOCATE is invalid; it must be a positive integer. The index  to start the search from is ''{2}''.  The string to search for is ''{0}''.  The string to search from is ''{1}''. 

# Arguments:
#
#    {0} = functionName
#    {1} = typeName
#    {2} = typeName
#    {3} = typeName
#
22015=The ''{0}'' function is not allowed on the following set of types.  First operand is of type ''{1}''.  Second operand is of type ''{2}''.  Third operand (start position) is of type ''{3}''.

# Arguments:
#
#    {0} = typeName
#
22018=Invalid character string format for type {0}.

# Arguments:
#
#    {0} = sequenceName
#
22019=Invalid escape sequence, ''{0}''. The escape string must be exactly one character. It cannot be a null or more than one character.

# Arguments:
#
#    {0} = string
#
22020=Invalid trim string, ''{0}''. The trim string must be exactly one character or NULL. It cannot be more than one character.

22025=Escape character must be followed by escape character, ''_'', or ''%''. It cannot be followed by any other character or be at the end of the pattern.

22027=The built-in TRIM() function only supports a single trim character.  The LTRIM() and RTRIM() built-in functions support multiple trim characters.

# Arguments:
#
#    {0} = number
#
22028=The string exceeds the maximum length of {0}.

22501=An ESCAPE clause of NULL returns undefined results and is not allowed.

2201X=Invalid row count for OFFSET, must be >= 0.

2201W=Row count for FIRST/NEXT must be >= 1 and row count for LIMIT must be >= 0.

# Arguments:
#
#    {0} = string
#
2201Z=NULL value not allowed for {0} argument.

# Arguments:
#
#    {0} = columnName
#
23502=Column ''{0}''  cannot accept a NULL value.

# Arguments:
#
#    {0} = constraintName
#    {1} = tableName
#    {2} = statementType
#    {3} = keyName
#
23503={2} on table ''{1}'' caused a violation of foreign key constraint ''{0}'' for key {3}.  The statement has been rolled back.

# Arguments:
#
#    {0} = indexOrConstraintName
#    {1} = tableName
#
23505=The statement was aborted because it would have caused a duplicate key value in a unique or primary key constraint or unique index identified by ''{0}'' defined on ''{1}''.

# Arguments:
#
#    {0} = indexOrConstraintName
#    {1} = tableName
#
23506.T.1=The transaction was aborted because of a deferred constraint violation: Duplicate in unique or primary key constraint identified by ''{0}'' defined on ''{1}''.

# Arguments:
#
#    {0} = indexOrConstraintName
#    {1} = tableName
#
23507.S.1=Deferred constraint violation: Duplicate in unique or primary key constraint identified by ''{0}'' defined on ''{1}''.

# Arguments:
#
#    {0} = tableName
#    {1} = constraintName
#
23513=The check constraint ''{1}'' was violated while performing an INSERT or UPDATE on table ''{0}''.

24000=Invalid cursor state - no current row.

24501.S=The identified cursor is not open.

25001=Cannot close a connection while a transaction is still active.

25001.S.1=Invalid transaction state: active SQL transaction.

25501=Unable to set the connection read-only property in an active transaction.

25502=An SQL data change is not permitted for a read-only connection, user or database.

25503=DDL is not permitted for a read-only connection, user or database.

25505=A read-only user or a user in a read-only database is not permitted to disable read-only mode on a connection.

# Arguments:
#
#    {0} = authorizationID
#
28502=The user name ''{0}'' is not valid. 

2D521.S.1=setAutoCommit(true) invalid during global transaction.

2D521.S.2=Commit or Rollback invalid for application execution environment. 

# Arguments:
#
#    {0} = exception
#
38000=The exception ''{0}'' was thrown while evaluating an expression.

38001=The external routine is not allowed to execute SQL statements.

38002=The routine attempted to modify data, but the routine was not defined as MODIFIES SQL DATA.

38004=The routine attempted to read data, but the routine was not defined as READS SQL DATA.

# Arguments:
#
#    {0} = type
#
39004=A NULL value cannot be passed to a method which takes a parameter of primitive type ''{0}''.

# Arguments:
#
#    {0} = savepointName
#
3B001.S=SAVEPOINT, {0} does not  exist or is not active in the current transaction.

3B002.S=The maximum number of savepoints has been reached. 

3B501.S=A SAVEPOINT with the passed name already exists in the current transaction.

3B502.S=A Release or Rollback to Savepoint was specified, but the savepoint does not exist.

# Arguments:
#
#    {0} = lockCycle
#    {1} = transactionID
#
40001=A lock could not be obtained due to a deadlock, cycle of locks and waiters is:\n{0}. The selected victim is XID : {1}.

40XC0=Dead statement. This may be caused by catching a transaction severity error inside this statement.

40XD0=Container has been closed.

40XD1=Container was opened in read-only mode.

# Arguments:
#
#    {0} = containerName
#
40XD2=Container {0} cannot be opened; it either has been dropped or does not exist.

40XL1=A lock could not be obtained within the time requested

# Arguments:
#
#    {0} = tableDump
#
40XL1.T.1=A lock could not be obtained within the time requested.  The lockTable dump is: {0}

40XT0=An internal error was identified by RawStore module.

40XT1=An exception was thrown during transaction commit.

40XT2=An exception was thrown during rollback of a SAVEPOINT.

40XT4=An attempt was made to close a transaction that was still active. The transaction has been aborted.

40XT5=Exception thrown during an internal transaction.

40XT6=Database is in quiescent state, cannot activate transaction.  Please wait for a moment till it exits the quiescent state.

40XT7=Operation is not supported in an internal transaction.

# Arguments:
#
#    {0} = internalTransactionState
#
40XT8=An internal error was identified by RawStore module. Internal state detail from the transaction is as follows: {0}

42000=Syntax error or access rule violation; see additional errors for details.

# Arguments:
#
#    {0} = authorizationID
#    {1} = permissionType
#    {2} = schemaNamet
#    {3} = tableName
#
42500=User ''{0}'' does not have {1} permission on table ''{2}''.''{3}''.

# Arguments:
#
#    {0} = authorizationID
#    {1} = permissionType
#    {2} = schemaNamet
#    {3} = tableName
#
42501=User ''{0}'' does not have {1} permission on table ''{2}''.''{3}'' for grant.

# Arguments:
#
#    {0} = authorizationID
#    {1} = permissionType
#    {2} = columnName
#    {3} = schemaName
#    {4} = tableName
#
42502=User ''{0}'' does not have {1} permission on column ''{2}'' of table ''{3}''.''{4}''.

# Arguments:
#
#    {0} = authorizationID
#    {1} = permissionType
#    {2} = columnName
#    {3} = schemaName
#    {4} = tableName
#
42503=User ''{0}'' does not have {1} permission on column ''{2}'' of table ''{3}''.''{4}'' for grant.

# Arguments:
#
#    {0} = authorizationID
#    {1} = permissionType
#    {2} = objectName
#    {3} = schemaName
#    {4} = tableName
#
42504=User ''{0}'' does not have {1} permission on {2} ''{3}''.''{4}''.

# Arguments:
#
#    {0} = authorizationID
#    {1} = permissionType
#    {2} = objectName
#    {3} = schemaName
#    {4} = tableName
#
42505=User ''{0}'' does not have {1} permission on {2} ''{3}''.''{4}'' for grant.

# Arguments:
#
#    {0} = authorizationID
#    {1} = objectName
#    {2} = schemaName
#    {3} = tableName
#
42506=User ''{0}'' is not the owner of {1} ''{2}''.''{3}''.

# Arguments:
#
#    {0} = authorizationID
#    {1} = schemaName
#
42507=User ''{0}'' can not perform the operation in schema ''{1}''.

# Arguments:
#
#    {0} = authorizationID
#    {1} = schemaName
#
42508=User ''{0}'' can not create schema ''{1}''. Only database owner could issue this statement.

# Arguments:
#
#    {0} = objectName
#
42509=Specified grant or revoke operation is not allowed on object ''{0}''.

# Arguments:
#
#    {0} = authorizationID
#    {1} = permissionName
#    {2} = schemaName
#    {3} = objectName
#
4250A=User ''{0}'' does not have {1} permission on object ''{2}''.''{3}''.

# Arguments:
#
#    {0} = propertyName
#    {1} = propertyValue
#
4250B=Invalid database authorization property ''{0}={1}''.

# Arguments:
#
#    {0} = authorizationID
#
4250C=User(s) ''{0}'' must not be in both read-only and full-access authorization lists.

# Arguments:
#
#    {0} = listName
#    {1} = authorizationID
#
4250D=Repeated user(s) ''{1}'' in access list ''{0}'';

# Arguments:
#
#    {0} = authorizationID
#
4250E=Internal Error: invalid {0} id in statement permission list.

# Arguments:
#
#    {0} = sqlText
#
4251A=Statement {0} can only be issued by database owner.

4251B=PUBLIC is reserved and cannot be used as a user identifier or role name.

# Arguments:
#
#    {0} = authorizationID
#    {1} = authorizationID
#
4251C=Role {0} cannot be granted to {1} because this would create a circularity.

4251D=Only the database owner can perform this operation.

# Arguments:
#
#    {0} = tableName
#    {1} = columnName
#
4251E=No one can view the ''{0}''.''{1}'' column.

4251F=You cannot drop the credentials of the database owner.

4251G=Please set derby.authentication.builtin.algorithm to a valid message digest algorithm. The current authentication scheme is too weak to be used by NATIVE authentication.

4251H=Invalid NATIVE authentication specification. Please set derby.authentication.provider to a value of the form NATIVE:$credentialsDB or NATIVE:$credentialsDB:LOCAL (at the system level).

# Arguments:
#
#    {0} = databaseName
#
4251I=Authentication cannot be performed because the credentials database ''{0}'' does not exist.

# Arguments:
#
#    {0} = propertyName
#
4251J=The value for the property ''{0}'' is formatted badly.

4251K=The first credentials created must be those of the DBO.

# Arguments:
#
#    {0} = dbName
#
4251L=The derby.authentication.provider property specifies ''{0}'' as the name of the credentials database. This is not a valid name for a database.

# Arguments:
#
#    {0} = columnName
#
42601=In an ALTER TABLE statement, the column ''{0}'' has been specified as NOT NULL and either the DEFAULT clause was not specified or was specified as DEFAULT NULL.

42601.S.372=ALTER TABLE statement cannot add an IDENTITY column to a table.

# Arguments:
#
#    {0} = functionName
#
42605=The number of arguments for function ''{0}'' is incorrect.

# Arguments:
#
#    {0} = number
#
42606=An invalid hexadecimal constant starting with ''{0}'' has been detected.

42610=All the arguments to the COALESCE/VALUE function cannot be parameters. The function needs at least one argument that is not a parameter.

# Arguments:
#
#    {0} = dataType
#
42611=The length, precision, or scale attribute for column, or type mapping ''{0}'' is not valid. 

# Arguments:
#
#    {0} = clause
#
42613=Multiple or conflicting keywords involving the ''{0}'' clause are present.

# Arguments:
#
#    {0} = columnName
#
42621=A check constraint or generated column that is defined with ''{0}'' is invalid.

# Arguments:
#
#    {0} = name
#    {1} = number
#
42622=The name ''{0}'' is too long. The maximum length is ''{1}''.

# Arguments:
#
#    {0} = name
#    {1} = context
#
42734=Name ''{0}'' specified in context ''{1}'' is not unique.

42802=The number of values assigned is not the same as the number of specified or implied columns.

# Arguments:
#
#    {0} = columnName
#
42803=An expression containing the column ''{0}'' appears in the SELECT list and is not part of a GROUP BY clause.

# Arguments:
#
#    {0} = sqlText
#
42815.S.713=The replacement value for ''{0}'' is invalid.

# Arguments:
#
#    {0} = dataType
#    {1} = dataType
#
42815.S.171=The data type, length or value of arguments ''{0}'' and ''{1}'' is incompatible.

# Arguments:
#
#    {0} = type
#    {1} = type
#
42818=Comparisons between ''{0}'' and ''{1}'' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = ''T1'')

# Arguments:
#
#    {0} = string
#
42820=The floating point literal ''{0}'' contains more than 30 characters.

# Arguments:
#
#    {0} = type
#    {1} = type
#
42821=Columns of type ''{0}'' cannot hold values of type ''{1}''. 

42824=An operand of LIKE is not a string, or the first operand is not a column.

# Arguments:
#
#    {0} = columnName
#
42831=''{0}'' cannot be a column of a primary key or unique key because it can contain null values.

# Arguments:
#
#    {0} = columnName
#
42831.S.1=''{0}'' cannot be a column of a primary key because it can contain null values.

# Arguments:
#
#    {0} = key
#
42834=SET NULL cannot be specified because FOREIGN KEY ''{0}''  cannot contain null values.  

# Arguments:
#
#    {0} = tableName
#    {1} = columnName
#
42837=ALTER TABLE ''{0}'' specified attributes for column ''{1}'' that are not compatible with the existing column.

# Arguments:
#
#    {0} = type
#    {1} = type
#
42846=Cannot convert types ''{0}'' to ''{1}''.

# Arguments:
#
#    {0} = columnName
#
42877=A qualified column name ''{0}'' is not allowed in the ORDER BY clause.

42878=The ORDER BY clause of a SELECT UNION statement only supports unqualified column references and column position numbers. Other expressions are not currently supported.

# Arguments:
#
#    {0} = columnName
#
42879=The ORDER BY clause may not contain column ''{0}'', since the query specifies DISTINCT and that column does not appear in the query result.

4287A=The ORDER BY clause may not specify an expression, since the query specifies DISTINCT.

4287B=In this context, the ORDER BY clause may only specify a column number.

# Arguments:
#
#    {0} = routineName
#    {1} = type
#
42884=No authorized routine named ''{0}'' of type ''{1}'' having compatible arguments was found.

# Arguments:
#
#    {0} = parameterMode
#    {1} = parameterName
#
42886=''{0}'' parameter ''{1}'' requires a parameter marker ''?''.

# Arguments:
#
#    {0} = columnName
#
42894=DEFAULT value or IDENTITY attribute value is not valid for column ''{0}''.

428C1=Only one identity column is allowed in a table.

428EK=The qualifier for a declared global temporary table name must be SESSION.

42903=Invalid use of an aggregate function.

42908=The CREATE VIEW statement does not include a column list.

42909=The CREATE TABLE statement does not include a column list.

# Arguments:
#
#    {0} = key
#    {1} = detailedReason
#
42915=Foreign  Key ''{0}'' is invalid for the reason which follows: ''{1}''. 

# Arguments:
#
#    {0} = synonym2
#    {1} = synonym1
#
42916=Synonym ''{0}'' cannot be created for ''{1}'' as it would result in a circular synonym chain.

# Arguments:
#
#    {0} = schemaNamet
#
42939=An object cannot be created with the schema name ''{0}''.

# Arguments:
#
#    {0} = authorizationID
#
4293A=A role cannot be created with the name ''{0}'', the SYS prefix is reserved.

# Arguments:
#
#    {0} = columnName
#
42962=Long column type column or parameter ''{0}'' not permitted in declared global temporary tables or procedure definitions. 

42995=The requested function does not apply to global temporary tables.

# Arguments:
#
#    {0} = error
#
42X01=Syntax error: {0}.

# Arguments:
#
#    {0} = parserException
#
42X02={0}.

# Arguments:
#
#    {0} = columnName
#
42X03=Column name ''{0}'' is in more than one table in the FROM list.

# Arguments:
#
#    {0} = columnName
#    {1} = columnName
#
42X04=Column ''{0}'' is either not in any table in the FROM list or appears within a join specification and is outside the scope of the join specification or appears in a HAVING clause and is not in the GROUP BY list. If this is a CREATE or ALTER TABLE  statement then ''{0}'' is not a column in the target table.

# Arguments:
#
#    {0} = objectName
#
42X05=Table/View ''{0}'' does not exist.

# Arguments:
#
#    {0} = tableName
#
42X06=Too many result columns specified for table ''{0}''.

42X07=Null is only allowed in a VALUES clause within an INSERT statement.

# Arguments:
#
#    {0} = className
#    {1} = constructorName
#
42X08=The constructor for class ''{0}'' cannot be used as an external virtual table because the class does not implement ''{1}''. 

# Arguments:
#
#    {0} = tableName
#
42X09=The table or alias name ''{0}'' is used more than once in the FROM list.

# Arguments:
#
#    {0} = tableName
#
42X10=''{0}'' is not an exposed table name in the scope in which it appears.

# Arguments:
#
#    {0} = columnName
#
42X12=Column name ''{0}'' appears more than once in the CREATE TABLE statement.  

# Arguments:
#
#    {0} = columnName
#
42X13=Column name ''{0}'' appears more than once times in the column list of an INSERT statement. 

# Arguments:
#
#    {0} = columnName
#    {1} = tableOrVTIName
#
42X14=''{0}'' is not a column in table or VTI ''{1}''.

# Arguments:
#
#    {0} = columnName
#
42X15=Column name ''{0}'' appears in a statement without a FROM list.

# Arguments:
#
#    {0} = columnName
#
42X16=Column name ''{0}'' appears multiple times in the SET clause of an UPDATE statement.

# Arguments:
#
#    {0} = joinOrder
#
42X17=In the Properties list of a FROM clause, the value ''{0}'' is not valid as a joinOrder specification. Only the values FIXED and UNFIXED are valid.  

# Arguments:
#
#    {0} = dataType
#
42X19.S.1=The WHERE, WHEN or HAVING clause or CHECK CONSTRAINT definition is a ''{0}'' expression.  It must be a BOOLEAN expression.

42X19.S.2=The WHERE or HAVING clause or CHECK CONSTRAINT definition is an untyped parameter expression.  It must be a BOOLEAN expression.

42X20=Syntax error; integer literal expected.

# Arguments:
#
#    {0} = cursorName
#
42X23=Cursor {0} is not updatable.

# Arguments:
#
#    {0} = columnName
#
42X24=Column {0} is referenced in the HAVING clause but is not in the GROUP BY list.

# Arguments:
#
#    {0} = functionName
#    {1} = 1
#
42X25=The ''{0}'' function is not allowed on the ''{1}'' type.

# Arguments:
#
#    {0} = className
#    {1} = columnName
#
42X26=The class ''{0}'' for column ''{1}'' does not exist or is inaccessible. This can happen if the class is not public.

# Arguments:
#
#    {0} = tableName
#    {1} = cursorName
#
42X28=Delete table ''{0}'' is not target of cursor ''{1}''.

# Arguments:
#
#    {0} = tableName
#    {1} = cursorName
#
42X29=Update table ''{0}'' is not the target of cursor ''{1}''.

# Arguments:
#
#    {0} = cursorName
#
42X30=Cursor ''{0}'' not found. Verify that autocommit is off.

# Arguments:
#
#    {0} = columnName
#    {1} = cursorName
#
42X31=Column ''{0}'' is not in the FOR UPDATE list of cursor ''{1}''.

# Arguments:
#
#    {0} = tableName
#
42X32=The number of columns in the derived column list must match the number of columns in table ''{0}''.

# Arguments:
#
#    {0} = columnName
#
42X33=The derived column list contains a duplicate column name ''{0}''.

42X34=There is a ? parameter in the select list.  This is not allowed.

# Arguments:
#
#    {0} = operatorName
#
42X35=It is not allowed for both operands of ''{0}'' to be ? parameters.

# Arguments:
#
#    {0} = operatorName
#
42X36=The ''{0}'' operator is not allowed to take a ? parameter as an operand.

# Arguments:
#
#    {0} = operatorName
#    {1} = type
#
42X37=The unary ''{0}'' operator is not allowed on the ''{1}'' type.

42X38=''SELECT *'' only allowed in EXISTS and NOT EXISTS subqueries.

42X39=Subquery is only allowed to return a single column.

42X40=A NOT statement has an operand that is not boolean . The operand of NOT must evaluate to TRUE, FALSE, or UNKNOWN. 

# Arguments:
#
#    {0} = propertyName
#    {1} = propertyValue
#
42X41=In the Properties clause of a FROM list, the property ''{0}'' is not valid (the property was being set to ''{1}''). 

# Arguments:
#
#    {0} = columnName
#
42X42=Correlation name not allowed for column ''{0}'' because it is part of the FOR UPDATE list.

# Arguments:
#
#    {0} = className
#
42X43=The ResultSetMetaData returned for the class/object ''{0}'' was null. In order to use this class as an external virtual table, the ResultSetMetaData cannot be null. 

# Arguments:
#
#    {0} = number
#
42X44=Invalid length ''{0}'' in column specification.

# Arguments:
#
#    {0} = dataType
#    {1} = argumentNumber
#    {2} = operatorName
#
42X45={0} is an invalid type for argument number {1} of {2}.

# Arguments:
#
#    {0} = functionName
#
42X46=There are multiple functions named ''{0}''. Use the full signature or the specific name.

# Arguments:
#
#    {0} = procedureName
#
42X47=There are multiple procedures named ''{0}''. Use the full signature or the specific name.

# Arguments:
#
#    {0} = dataType
#    {1} = number
#
42X48=Value ''{1}'' is not a valid precision for {0}.

# Arguments:
#
#    {0} = invalidNumber
#
42X49=Value ''{0}'' is not a valid integer literal.

# Arguments:
#
#    {0} = className
#    {1} = methodName
#    {2} = parameterTypes
#
42X50=No method was found that matched the method call {0}.{1}({2}), tried all combinations of object and primitive types and any possible type conversion for any  parameters the method call may have. The method might exist but it is not public and/or static, or the parameter types are not method invocation convertible.

# Arguments:
#
#    {0} = className
#
42X51=The class ''{0}'' does not exist or is inaccessible. This can happen if the class is not public.

# Arguments:
#
#    {0} = methodName
#    {1} = type
#
42X52=Calling  method (''{0}'') using a receiver of the Java primitive type ''{1}'' is not allowed.

# Arguments:
#
#    {0} = type
#
42X53=The LIKE predicate can only have ''CHAR'' or ''VARCHAR'' operands. Type ''{0}'' is not permitted.

# Arguments:
#
#    {0} = methodName
#
42X54=The Java method ''{0}'' has a ? as a receiver.  This is not allowed.

# Arguments:
#
#    {0} = tableName
#    {1} = tableName
#
42X55=Table name ''{1}'' should be the same as ''{0}''.

# Arguments:
#
#    {0} = viewName
#
42X56=The number of columns in the view column list does not match the number of columns in the underlying query expression in the view definition for ''{0}''.

# Arguments:
#
#    {0} = tableName
#    {1} = number
#
42X57=The getColumnCount() for external virtual table ''{0}'' returned an invalid value ''{1}''.  Valid values are greater than or equal to 1. 

# Arguments:
#
#    {0} = tableName
#
42X58=The number of columns on the left and right sides of the {0} must be the same.

42X59=The number of columns in each VALUES constructor must be the same.

# Arguments:
#
#    {0} = insertMode
#    {1} = tableName
#
42X60=Invalid value ''{0}'' for insertMode property specified for table ''{1}''.

# Arguments:
#
#    {0} = dataType
#    {1} = dataType
#    {2} = sqlOperator
#
42X61=Types ''{0}'' and ''{1}'' are not {2} compatible.

# Arguments:
#
#    {0} = sqlText
#    {1} = schemaName
#
42X62=''{0}'' is not allowed in the ''{1}'' schema.

42X63=The USING clause did not return any results. No parameters can be set. 

# Arguments:
#
#    {0} = propertyValue
#
42X64=In the Properties list, the invalid value ''{0}'' was specified for the useStatistics property. The only valid values are TRUE or FALSE. 

# Arguments:
#
#    {0} = index
#
42X65=Index ''{0}'' does not exist.

# Arguments:
#
#    {0} = columnName
#
42X66=Column name ''{0}'' appears more than once in the CREATE INDEX statement.

# Arguments:
#
#    {0} = fieldName
#    {1} = className
#
42X68=No field ''{0}'' was found belonging to class ''{1}''.  It may be that the field exists, but it is not public, or that the class does not exist or is not public.

# Arguments:
#
#    {0} = fieldName
#    {1} = type
#
42X69=It is not allowed to reference a field (''{0}'') using a referencing expression of the Java primitive type ''{1}''.

# Arguments:
#
#    {0} = tableName
#
42X70=The number of columns in the table column list does not match the number of columns in the underlying query expression in the table definition for ''{0}''.

# Arguments:
#
#    {0} = datatypeName
#    {1} = columnName
#
42X71=Invalid data type ''{0}'' for column ''{1}''.

# Arguments:
#
#    {0} = fieldName
#    {1} = className
#
42X72=No static field ''{0}'' was found belonging to class ''{1}''.  The field might exist, but it is not public and/or static, or the class does not exist or the class is not public.  

# Arguments:
#
#    {0} = className
#    {1} = methodName
#    {2} = parameterTypes
#
42X73=Method resolution for signature {0}.{1}({2}) was ambiguous. (No single maximally specific method.)

42X74=Invalid CALL statement syntax.

# Arguments:
#
#    {0} = className
#    {1} = parameterTypes
#
42X75=No constructor was found with the signature {0}({1}).  It may be that the parameter types are not method invocation convertible.

# Arguments:
#
#    {0} = columnName
#
42X76=At least one column, ''{0}'', in the primary key being added is nullable. All columns in a primary key must be non-nullable.

# Arguments:
#
#    {0} = columnPosition
#
42X77=Column position ''{0}'' is out of range for the query expression.

# Arguments:
#
#    {0} = columnName
#
42X78=Column ''{0}'' is not in the result of the query expression.

# Arguments:
#
#    {0} = columnName
#
42X79=Column name ''{0}'' appears more than once in the result of the query expression.

42X80=VALUES clause must contain at least one element. Empty elements are not allowed. 

42X81=A query expression must return at least one column.

42X82=The USING clause returned more than one row. Only single-row ResultSets are permissible.

# Arguments:
#
#    {0} = index
#    {1} = constraintName
#
42X84=Index ''{0}'' was created to enforce constraint ''{1}''.  It can only be dropped by dropping the constraint.

# Arguments:
#
#    {0} = constraintName
#    {1} = tableName
#
42X85=Constraint ''{0}''is required to be in the same schema as table ''{1}''.

# Arguments:
#
#    {0} = constraintName
#    {1} = tableName
#
42X86=ALTER TABLE failed. There is no constraint ''{0}'' on table ''{1}''. 

# Arguments:
#
#    {0} = expression
#
42X87=At least one result expression (THEN or ELSE) of the ''{0}'' expression must not be a ''?''. 

42X88=A conditional has a non-Boolean operand. The operand of a conditional must evaluate to TRUE, FALSE, or UNKNOWN.  

# Arguments:
#
#    {0} = type
#    {1} = type
#
42X89=Types ''{0}'' and ''{1}'' are not type compatible. Neither type is assignable to the other type.  

# Arguments:
#
#    {0} = tableName
#
42X90=More than one primary key constraint specified for table ''{0}''.

# Arguments:
#
#    {0} = constraintName
#
42X91=Constraint name ''{0}'' appears more than once in the CREATE TABLE statement. 

# Arguments:
#
#    {0} = columnName
#
42X92=Column name ''{0}'' appears more than once in a constraint''s column list.

# Arguments:
#
#    {0} = tableName
#    {1} = columnName
#
42X93=Table ''{0}'' contains a constraint definition with column ''{1}'' which is not in the table.

# Arguments:
#
#    {0} = sqlObjectType
#    {1} = objectName
#
42X94={0} ''{1}'' does not exist.

# Arguments:
#
#    {0} = fileName
#
42X96=The database class path contains an unknown jar file ''{0}''.

42X97=Conflicting constraint characteristics for constraint.

42X98=Parameters are not allowed in a VIEW definition.

42X99=Parameters are not allowed in a TABLE definition.

# Arguments:
#
#    {0} = columnName
#    {1} = datatypeName
#
42XA0=The generation clause for column ''{0}'' has data type ''{1}'', which cannot be assigned to the column''s declared data type.

# Arguments:
#
#    {0} = columnName
#
42XA1=The generation clause for column ''{0}'' contains an aggregate. This is not allowed.

# Arguments:
#
#    {0} = sqlObjectName
#
42XA2=''{0}'' cannot appear in a Generation Clause because it may return unreliable results.

# Arguments:
#
#    {0} = columnName
#
42XA3=You may not override the value of generated column ''{0}''.

# Arguments:
#
#    {0} = columnName
#
42XA4=The generation clause for column ''{0}'' references other generated columns. This is not allowed.

# Arguments:
#
#    {0} = routineName
#
42XA5=Routine ''{0}'' may issue SQL and therefore cannot appear in this context.

# Arguments:
#
#    {0} = columnName
#
42XA6=''{0}'' is a generated column. It cannot be part of a foreign key whose referential action for DELETE is SET NULL or SET DEFAULT, or whose referential action for UPDATE is CASCADE.

# Arguments:
#
#    {0} = columnName
#
42XA7=''{0}'' is a generated column. You cannot change its default value.

# Arguments:
#
#    {0} = columnName
#    {1} = columnName
#
42XA8=You cannot rename ''{0}'' because it is referenced by the generation clause of column ''{1}''.

# Arguments:
#
#    {0} = columnName
#
42XA9=Column ''{0}'' needs an explicit datatype. The datatype can be omitted only for columns with generation clauses.

# Arguments:
#
#    {0} = columnName
#
42XAA=The NEW value of generated column ''{0}'' is mentioned in the BEFORE action of a trigger. This is not allowed.

42XAB=NOT NULL is allowed only if you explicitly declare a datatype.

42XAC=''INCREMENT BY'' value can not be zero.

# Arguments:
#
#    {0} = argName
#    {1} = datatypeName
#    {2} = minValue
#    {3} = maxValue
#
42XAE=''{0}'' value out of range of datatype ''{1}''. Must be between ''{2}'' and ''{3}''.

# Arguments:
#
#    {0} = minValue
#    {1} = maxValue
#
42XAF=Invalid ''MINVALUE'' value ''{0}''. Must be smaller than ''MAXVALUE: {1}''.

# Arguments:
#
#    {0} = startValue
#    {1} = minValue
#    {2} = maxValue
#
42XAG=Invalid ''START WITH'' value ''{0}''. Must be between ''{1}'' and ''{2}''.

42XAH=A NEXT VALUE FOR expression may not appear in many contexts, including WHERE, ON, HAVING, ORDER BY, DISTINCT, CASE, GENERATION, and AGGREGATE clauses as well as WINDOW functions and CHECK CONSTRAINTS.

# Arguments:
#
#    {0} = sequenceName
#
42XAI=The statement references the following sequence more than once: ''{0}''.

# Arguments:
#
#    {0} = clauseName
#
42XAJ=The CREATE SEQUENCE statement has a redundant ''{0}'' clause.

42XAK=The target table of a MERGE statement must be a base table.

42XAL=The source table of a MERGE statement must be a base table, view, or table function.

42XAM=The source and target tables of a MERGE statement may not have the same correlation name.

42XAN=Constraint characteristics not allowed for NOT NULL.

42XAO=Subqueries are not allowed in the WHEN [ NOT ] MATCHED clauses of MERGE statements.

42XAP=Synonyms are not allowed as the source or target tables of MERGE statements.

42XAQ=The source and target tables of MERGE statements may not have derived column lists.

# Arguments:
#
#    {0} = className
#
42Y00=Class ''{0}'' does not implement org.apache.derby.iapi.db.AggregateDefinition and thus cannot be used as an aggregate expression.

# Arguments:
#
#    {0} = constraintName
#
42Y01=Constraint ''{0}'' is invalid.

# Arguments:
#
#    {0} = statement
#
42Y03.S.0=''{0}'' is not recognized as a function or procedure.

# Arguments:
#
#    {0} = statement
#
42Y03.S.1=''{0}'' is not recognized as a procedure.

# Arguments:
#
#    {0} = statement
#
42Y03.S.2=''{0}'' is not recognized as a function.

# Arguments:
#
#    {0} = statement
#
42Y03.S.3=''{0}'' is a procedure but it is being used as a function.

# Arguments:
#
#    {0} = statement
#
42Y03.S.4=''{0}'' is a function but it is being called as a procedure.

# Arguments:
#
#    {0} = name
#
42Y04=Cannot create a procedure or function with EXTERNAL NAME ''{0}'' because it is not a list separated by periods. The expected format is <full java path>.<method name>.

# Arguments:
#
#    {0} = key
#
42Y05=There is no Foreign Key named ''{0}''.

# Arguments:
#
#    {0} = schemaNamet
#
42Y07=Schema ''{0}'' does not exist

42Y08=Foreign key constraints are not allowed on system tables.

42Y09=Void methods are only allowed within a CALL statement.

42Y10=A table constructor that is not in an INSERT statement has all ? parameters in one of its columns.  For each column, at least one of the rows must have a non-parameter.

# Arguments:
#
#    {0} = clauseName
#
42Y11=A join specification is required with the ''{0}'' clause.

# Arguments:
#
#    {0} = expressionType
#
42Y12=The ON clause of a JOIN is a ''{0}'' expression.  It must be a BOOLEAN expression.

# Arguments:
#
#    {0} = columnName
#
42Y13=Column name ''{0}'' appears more than once in the CREATE VIEW statement.

# Arguments:
#
#    {0} = methodName
#    {1} = className
#
42Y16=No public static method ''{0}'' was found in class ''{1}''. The method might exist, but it is not public, or it is not static. 

# Arguments:
#
#    {0} = aggregateType
#    {1} = type
#
42Y22=Aggregate {0} cannot operate on type {1}.

# Arguments:
#
#    {0} = colunmName
#
42Y23=Incorrect JDBC type info returned for column {0}.

# Arguments:
#
#    {0} = viewName
#
42Y24=View ''{0}'' is not updatable. (Views are currently not updatable.) 

# Arguments:
#
#    {0} = tableName
#
42Y25=''{0}'' is a system table.  Users are not allowed to modify the contents of this table.

42Y26=Aggregates are not allowed in the GROUP BY list.

42Y27=Parameters are not allowed in the trigger action.

42Y29=The SELECT list of a non-grouped query contains at least one invalid expression. When the SELECT list contains at least one aggregate then all entries must be valid aggregate expressions.

42Y30=The SELECT list of a grouped query contains at least one invalid expression. If a SELECT list has a GROUP BY, the list may only contain valid grouping expressions and valid aggregate expressions.  

# Arguments:
#
#    {0} = className
#    {1} = aggregateName
#    {2} = type
#
42Y32=Aggregator class ''{0}'' for aggregate ''{1}'' on type {2} does not implement org.apache.derby.iapi.sql.execute.ExecAggregator. 

# Arguments:
#
#    {0} = aggregateName
#
42Y33=Aggregate {0} contains one or more aggregates.

# Arguments:
#
#    {0} = columnName
#    {1} = tableName
#
42Y34=Column name ''{0}'' matches more than one result column in table ''{1}''.

# Arguments:
#
#    {0} = reference
#
42Y35=Column reference ''{0}'' is invalid. When the SELECT list contains at least one aggregate then all entries must be valid aggregate expressions.  

# Arguments:
#
#    {0} = reference
#
42Y36=Column reference ''{0}'' is invalid, or is part of an invalid expression.  For a SELECT list with a GROUP BY, the columns and expressions being selected may only contain valid grouping expressions and valid aggregate expressions.

# Arguments:
#
#    {0} = javaTypeName
#
42Y37=''{0}'' is a Java primitive and cannot be used with this operator.

# Arguments:
#
#    {0} = tableName
#
42Y38=insertMode = replace is not permitted on an insert where the target table, ''{0}'', is referenced in the SELECT.

# Arguments:
#
#    {0} = sqlObjectName
#
42Y39=''{0}'' may not appear in a CHECK CONSTRAINT definition because it may return non-deterministic results.

# Arguments:
#
#    {0} = columnName
#    {1} = triggerName
#
42Y40=''{0}'' appears multiple times in the UPDATE OF column list for trigger ''{1}''.

# Arguments:
#
#    {0} = storedPreparedStatementName
#
42Y41=''{0}'' cannot be directly invoked via EXECUTE STATEMENT because it is part of a trigger.

# Arguments:
#
#    {0} = dataType
#    {1} = scaleValue
#
42Y42=Scale ''{1}'' is not a valid scale for a {0}.

# Arguments:
#
#    {0} = scaleValue
#    {1} = precision
#
42Y43=Scale ''{0}'' is not a valid scale with precision of ''{1}''.

# Arguments:
#
#    {0} = key
#    {1} = key
#
42Y44=Invalid key ''{0}'' specified in the Properties list of a FROM list. The case-sensitive keys that are currently supported are ''{1}''. 

# Arguments:
#
#    {0} = vtiName
#
42Y45=VTI ''{0}'' cannot be bound because it is a special trigger VTI and this statement is not part of a trigger action or WHEN clause.

# Arguments:
#
#    {0} = index
#    {1} = tableName
#
42Y46=Invalid Properties list in FROM list.  There is no index ''{0}'' on table ''{1}''.

# Arguments:
#
#    {0} = constraintName
#    {1} = tableName
#
42Y48=Invalid Properties list in FROM list.  Either there is no named constraint ''{0}'' on table ''{1}'' or the constraint does not have a backing index.

# Arguments:
#
#    {0} = key
#
42Y49=Multiple values specified for property key ''{0}''. 

# Arguments:
#
#    {0} = tableName
#
42Y50=Properties list for table ''{0}'' may contain values for index or for constraint but not both.

# Arguments:
#
#    {0} = sqlText
#    {1} = sqlObjectName
#
42Y55=''{0}'' cannot be performed on ''{1}'' because it does not exist.

# Arguments:
#
#    {0} = strategyValue
#    {1} = tableName
#
42Y56=Invalid join strategy ''{0}'' specified in Properties list on table ''{1}''. The currently supported values for a join strategy are: ''hash'' and ''nestedloop''.

# Arguments:
#
#    {0} = invalidNumber
#    {1} = optimizerOverrideName
#
42Y58=NumberFormatException occurred when converting value ''{0}'' for optimizer override ''{1}''.

# Arguments:
#
#    {0} = invalidNumber
#
42Y59=Invalid value, ''{0}'', specified for hashInitialCapacity override. Value must be greater than 0.

# Arguments:
#
#    {0} = invalidNumber
#
42Y60=Invalid value, ''{0}'', specified for hashLoadFactor override. Value must be greater than 0.0 and less than or equal to 1.0.

# Arguments:
#
#    {0} = invalidNumber
#
42Y61=Invalid value, ''{0}'', specified for hashMaxCapacity override. Value must be greater than 0.

# Arguments:
#
#    {0} = statement
#    {1} = viewName
#
42Y62=''{0}'' is not allowed on ''{1}'' because it is a view.

# Arguments:
#
#    {0} = index
#    {1} = tableName
#
42Y63=Hash join requires an optimizable equijoin predicate on a column in the selected index or heap.  An optimizable equijoin predicate does not exist on any column in table or index ''{0}''. Use the ''index'' optimizer override to specify such an index or the heap on table ''{1}''.

# Arguments:
#
#    {0} = invalidNumber
#
42Y64=bulkFetch value of ''{0}'' is invalid. The minimum value for bulkFetch is 1.

# Arguments:
#
#    {0} = joinType
#
42Y65=bulkFetch is not permitted on ''{0}'' joins.

42Y66=bulkFetch is not permitted on updatable cursors. 

# Arguments:
#
#    {0} = schemaNamet
#
42Y67=Schema ''{0}'' cannot be dropped.

42Y69=No valid execution plan was found for this statement. This may have many causes: 1) you specified a hash join strategy when hash join is not allowed (no optimizable equijoin), 2) you are attempting to join two external virtual tables, each of which references the other, and so the statement cannot be evaluated, 3) you have specified a plan shape which the optimizer would never consider.

42Y70=The user specified an illegal join order. This could be caused by a join column from an inner table being passed as a parameter to an external virtual table.

# Arguments:
#
#    {0} = procedureName
#
42Y71=System function or procedure ''{0}'' cannot be dropped.

# Arguments:
#
#    {0} = statement
#
42Y82=System generated stored prepared statement ''{0}'' that cannot be dropped using DROP STATEMENT. It is part of a trigger. 

# Arguments:
#
#    {0} = aggregateName
#
42Y83=An untyped NULL is not permitted as an argument to aggregate {0}.  Please cast the NULL to a suitable type.

# Arguments:
#
#    {0} = sqlText
#
42Y84=''{0}'' may not appear in a DEFAULT definition.

42Y85=The DEFAULT keyword is only allowed in a VALUES clause when the VALUES clause appears within an INSERT statement.

42Y90=FOR UPDATE is not permitted in this type of statement.  

42Y91=The USING clause is not permitted in an EXECUTE STATEMENT for a trigger action.

# Arguments:
#
#    {0} = sqlKeyword
#    {1} = sqlKeyword
#
42Y92={0} triggers may only reference {1} transition variables/tables.

42Y93=Illegal REFERENCING clause: only one name is permitted for each type of transition variable/table.

42Y94=An AND or OR has a non-boolean operand. The operands of AND and OR must evaluate to TRUE, FALSE, or UNKNOWN.  

# Arguments:
#
#    {0} = operatorName
#    {1} = operandType
#    {2} = operandType
#
42Y95=The ''{0}'' operator with a left operand type of ''{1}'' and a right operand type of ''{2}'' is not supported.

# Arguments:
#
#    {0} = lineNumber
#    {1} = columnName
#
42Y97=Invalid escape character at line ''{0}'', column ''{1}''.

42Z02=Multiple DISTINCT aggregates are not supported at this time.

42Z07=Aggregates are not permitted in the ON clause.

# Arguments:
#
#    {0} = tableName
#    {1} = triggerName
#
42Z08=Bulk insert replace is not permitted on ''{0}'' because it has an enabled trigger ({1}).

# Arguments:
#
#    {0} = columnName
#
42Z15=Invalid type specified for column ''{0}''. The type of a column may not be changed.  

42Z16=Only columns of type VARCHAR, CLOB, and BLOB may have their length altered. 

# Arguments:
#
#    {0} = columnName
#
42Z17=Invalid length specified for column ''{0}''. Length must be greater than the current column length.

# Arguments:
#
#    {0} = columnName
#    {1} = constraintName
#
42Z18=Column ''{0}'' is part of a foreign key constraint ''{1}''. To alter the length of this column, you should drop the constraint first, perform the ALTER TABLE, and then recreate the constraint.

# Arguments:
#
#    {0} = columnName
#    {1} = constraintName
#
42Z19=Column ''{0}'' is being referenced by at least one foreign key constraint ''{1}''. To alter the length of this column, you should drop referencing constraints, perform the ALTER TABLE and then recreate the constraints. 

# Arguments:
#
#    {0} = columnName
#
42Z20=Column ''{0}'' cannot be made nullable. It is part of a primary key or unique constraint, which cannot have any nullable columns.

# Arguments:
#
#    {0} = columnName
#
42Z20.S.1=Column ''{0}'' cannot be made nullable. It is part of a primary key, which cannot have any nullable columns.

# Arguments:
#
#    {0} = columnName
#
42Z21=Invalid increment specified for identity for column ''{0}''. Increment cannot be zero.  

# Arguments:
#
#    {0} = columnName
#
42Z22=Invalid type specified for identity column ''{0}''. The only valid types for identity columns are BIGINT, INT and SMALLINT.

# Arguments:
#
#    {0} = columnName
#
42Z23=Attempt to modify an identity column ''{0}''. 

# Arguments:
#
#    {0} = tableName
#    {1} = columnName
#
42Z24=Overflow occurred in identity value for column ''{1}'' in table ''{0}''.

42Z25=Internal Error identity counter. Update was called without arguments with current value \= NULL.

# Arguments:
#
#    {0} = columnName
#
42Z26=A column, ''{0}'', with an identity default cannot be made nullable.

# Arguments:
#
#    {0} = columnName
#
42Z27=A nullable column, ''{0}'', cannot be modified to have identity default.

# Arguments:
#
#    {0} = queryTreeNodeIdentifier
#
42Z50=Internal Error: Unable to generate code for {0}.

# Arguments:
#
#    {0} = number
#
42Z53=Internal Error: Type of activation to generate for node choice {0} is unknown.

# Arguments:
#
#    {0} = sqlText
#    {1} = propertyName
#    {2} = propertyValue
#
42Z60={0} not allowed unless database property {1} has value ''{2}''.

42Z70=Binding directly to an XML value is not allowed; try using XMLPARSE.

42Z71=XML values are not allowed in top-level result sets; try using XMLSERIALIZE.

# Arguments:
#
#    {0} = keywords
#    {1} = lineNumber
#    {2} = columnNumber
#
42Z72=Missing SQL/XML keyword(s) ''{0}'' at line {1}, column {2}.

# Arguments:
#
#    {0} = typeName
#
42Z73=Invalid target type for XMLSERIALIZE: ''{0}''.

# Arguments:
#
#    {0} = featureName
#
42Z74=XML feature not supported: ''{0}''.

42Z75=XML query expression must be a string literal.

42Z76=Multiple XML context items are not allowed.

# Arguments:
#
#    {0} = dataType
#
42Z77=Context item must have type ''XML''; ''{0}'' is not allowed.

42Z79=Unable to determine the parameter type for XMLPARSE; try using a CAST.

# Arguments:
#
#    {0} = className
#
42Z90=Class ''{0}'' does not return an updatable ResultSet.

# This is a kind of query fragment, which may or may not appear in certain query contexts.
#
42Z91=SELECT

# A transaction isolation level. See http://en.wikipedia.org/wiki/Isolation_%28database_systems%29
#
42Z92=repeatable read

# Arguments:
#
#    {0} = constraintName
#    {1} = constraintName
#
42Z93=Constraints ''{0}'' and ''{1}'' have the same set of columns, which is not allowed. 

# Arguments:
#
#    {0} = columnName
#    {1} = constraintName
#
42Z97=Renaming column ''{0}'' will cause check constraint ''{1}'' to break.

42Z99=String or Hex literal cannot exceed 64K.

# A transaction isolation level. See http://en.wikipedia.org/wiki/Isolation_%28database_systems%29
#
42Z9A=read uncommitted

42Z9D.S.1=Procedures that modify SQL data are not allowed in BEFORE triggers.

# Arguments:
#
#    {0} = statement
#    {1} = triggerName
#
42Z9D=''{0}'' statements are not allowed in ''{1}'' triggers.

# Arguments:
#
#    {0} = constraintName
#    {1} = constraintType
#
42Z9E=Constraint ''{0}'' is not a {1} constraint.

# Arguments:
#
#    {0} = index
#    {1} = tableName
#    {2} = number
#
42Z9F=Too many indexes ({0}) on the table {1}. The limit is {2}.  

42ZA0=Statement too complex. Try rewriting the query to remove complexity. Eliminating many duplicate expressions or breaking up the query and storing interim results in a temporary table can often help resolve this error.

# Arguments:
#
#    {0} = batch
#
42ZA1=Invalid SQL in Batch: ''{0}''.

# Arguments:
#
#    {0} = dataType
#    {1} = collationType
#    {2} = dataType
#    {3} = collationType
#
42ZA2=Operand of LIKE predicate with type {0} and collation {1} is not compatable with LIKE pattern operand with type {2} and collation {3}.

# Arguments:
#
#    {0} = collationType
#    {1} = schemaName
#
42ZA3=The table will have collation type {0} which is different than the collation of the schema {1} hence this operation is not supported .

42ZB1=Parameter style DERBY_JDBC_RESULT_SET is only allowed for table functions.

42ZB2=Table functions can only have parameter style DERBY_JDBC_RESULT_SET.

42ZB3=XML is not allowed as the datatype of a user-defined aggregate or of a column returned by a table function.

# Arguments:
#
#    {0} = schemaName
#    {1} = functionName
#
42ZB4=''{0}''.{1}'' does not identify a table function.

# Arguments:
#
#    {0} = className
#
42ZB5=Class ''{0}'' implements VTICosting but does not provide a public, no-argument constructor.

42ZB6=A scalar value is expected, not a row set returned by a table function.

# Arguments:
#
#    {0} = columnName
#
42ZB7=Illegal reference to column ''{0}'' by a table function or VTI.

# Arguments:
#
#    {0} = windowName
#
42ZC0=Window ''{0}'' is not defined.

42ZC1=Only one window is supported.

# Arguments:
#
#    {0} = clauseName
#
42ZC2=Window function is illegal in this context: ''{0}'' clause

# Arguments:
#
#    {0} = aggregateName
#
42ZC3=A user defined aggregate may not have the name of an aggregate defined by the SQL Standard or the name of a builtin Derby function having one argument: ''{0}''

# Arguments:
#
#    {0} = schemaName
#    {1} = aggregateName
#    {2} = className
#
42ZC4=User defined aggregate ''{0}''.''{1}'' is bound to external class ''{2}''. The parameter types of that class could not be resolved.

# Arguments:
#
#    {0} = schemaName
#    {1} = aggregateName
#    {2} = javaDataType
#    {3} = javaDataType
#
42ZC6=User defined aggregate ''{0}''.''{1}'' was declared to have this input Java type: ''{2}''. This does not extend the following actual bounding input Java type: ''{3}''.

# Arguments:
#
#    {0} = schemaName
#    {1} = aggregateName
#    {2} = javaDataType
#    {3} = javaDataType
#
42ZC7=User defined aggregate ''{0}''.''{1}'' was declared to have this return Java type: ''{2}''. This does not extend the following actual bounding return Java type: ''{3}''.

# Arguments:
#
#    {0} = className
#    {1} = schemaName
#    {2} = aggregateName
#    {3} = detailedMessage
#
42ZC8=Implementing class ''{0}'' for user defined aggregate ''{1}''.''{2}'' could not be instantiated or was malformed. Detailed message follows: {3}

42ZC9=A varargs routine must have parameter style DERBY or DERBY_JDBC_RESULT_SET.

42ZCA=Parameter style DERBY is only allowed for varargs routines.

42ZCB=A varargs procedure may not return result sets.

# Arguments:
#
#    {0} = rowSourceCountInPlan
#    {1} = actualRowSourceCount
#
42ZCC=Bad optimizer override. There are {0} row sources in the plan but there should be {1}.

42ZCD=Bad optimizer override. The plan is not a left-deep tree.

42ZCE=Bad optimizer override. Row sources have not been resolved.

# Arguments:
#
#    {0} = codePage
#    {1} = codePage
#
57017.C=There is no available conversion for the source code page, {0}, to the target code page, {1}.  The connection has been terminated.

58009.C.10=Network protocol exception: only one of the VCM, VCS length can be greater than 0.  The connection has been terminated.

58009.C.11=The connection was terminated because the encoding is not supported.

# Arguments:
#
#    {0} = codePoint
#    {1} = codePoint
#
58009.C.12=Network protocol exception: actual code point, {0}, does not match expected code point, {1}.  The connection has been terminated.

58009.C.13=Network protocol exception: DDM collection contains less than 4 bytes of data.  The connection has been terminated.

58009.C.14=Network protocol exception: collection stack not empty at end of same id chain parse.  The connection has been terminated.

58009.C.15=Network protocol exception: DSS length not 0 at end of same id chain parse.  The connection has been terminated.

58009.C.16=Network protocol exception: DSS chained with same id at end of same id chain parse.  The connection has been terminated.

# Arguments:
#
#    {0} = number
#
58009.C.17=Network protocol exception: end of stream prematurely reached while reading InputStream, parameter #{0}.  The connection has been terminated.

58009.C.18=Network protocol exception: invalid FDOCA LID.  The connection has been terminated.

58009.C.19=Network protocol exception: SECTKN was not returned.  The connection has been terminated.

58009.C.20=Network protocol exception: only one of NVCM, NVCS can be non-null.  The connection has been terminated.

# Arguments:
#
#    {0} = length
#
58009.C.21=Network protocol exception: SCLDTA length, {0}, is invalid for RDBNAM.  The connection has been terminated.

# Arguments:
#
#    {0} = length
#
58009.C.7=Network protocol exception: SCLDTA length, {0}, is invalid for RDBCOLID.  The connection has been terminated.

# Arguments:
#
#    {0} = length
#
58009.C.8=Network protocol exception: SCLDTA length, {0}, is invalid for PKGID.  The connection has been terminated.

# Arguments:
#
#    {0} = length
#    {1} = sqlApplicationManager
#
58009.C.9=Network protocol exception: PKGNAMCSN length, {0}, is invalid at SQLAM {1}.  The connection has been terminated.

# Arguments:
#
#    {0} = managerCodePoint
#    {1} = level
#
58010.C=A network protocol error was encountered.  A connection could not be established because the manager {0} at level {1} is not supported by the server. 

# Arguments:
#
#    {0} = distributedDataManagementCommand
#
58014.C=The DDM command 0x{0} is not supported.  The connection has been terminated.

# Arguments:
#
#    {0} = distributedDataManagementObject
#
58015.C=The DDM object 0x{0} is not supported.  The connection has been terminated.

# Arguments:
#
#    {0} = distributedDataManagementParameter
#
58016.C=The DDM parameter 0x{0} is not supported.  The connection has been terminated.

# Arguments:
#
#    {0} = distributedDataManagementParameterValue
#
58017.C=The DDM parameter value 0x{0} is not supported.  An input host variable may not be within the range the server supports.  The connection has been terminated.

# Arguments:
#
#    {0} = columnName
#
X0A00.S=The select list mentions column ''{0}'' twice. This is not allowed in queries with GROUP BY or HAVING clauses. Try aliasing one of the conflicting columns to a unique name.

# Arguments:
#
#    {0} = tableName
#    {1} = mode
#
X0X02.S=Table ''{0}'' cannot be locked in ''{1}'' mode.

X0X03.S=Invalid transaction state - held cursor requires same isolation level

# Arguments:
#
#    {0} = tableName
#
X0X05.S=Table/View ''{0}'' does not exist.

# Arguments:
#
#    {0} = fileName
#    {1} = classpath
#
X0X07.S=Cannot remove jar file ''{0}'' because it is on your derby.database.classpath ''{0}''.

# Arguments:
#
#    {0} = columnArrayLength
#
X0X0D.S=Invalid column array length ''{0}''. To return generated keys, column array must be of length 1 and contain only the identity column.

# Arguments:
#
#    {0} = columnPosition
#    {1} = tableName
#
X0X0E.S=Table ''{1}'' does not have an auto-generated column at column position ''{0}''.

# Arguments:
#
#    {0} = columnName
#    {1} = tableName
#
X0X0F.S=Table ''{1}'' does not have an auto-generated column named ''{0}''.

X0X10.S=The USING clause returned more than one row; only single-row ResultSets are permissible.

X0X11.S=The USING clause did not return any results so no parameters can be set. 

# Arguments:
#
#    {0} = fileName
#    {1} = schemaNamet
#
X0X13.S=Jar file ''{0}'' does not exist in schema ''{1}''.

# Arguments:
#
#    {0} = type
#
X0X57.S=An attempt was made to put a Java value of type ''{0}'' into a SQL value, but there is no corresponding SQL type.  The Java value is probably the result of a method call or field access.

# Arguments:
#
#    {0} = cursorName
#
X0X60.S=A cursor with name ''{0}'' already exists.

# Arguments:
#
#    {0} = indexName
#    {1} = schemaName
#    {2} = tableName
#    {3} = rowLocation
#    {4} = columnName
#    {5} = dataValue
#    {6} = dataValue
#    {7} = indexKey
#
X0X61.S=The values for column ''{4}'' in index ''{0}'' and table ''{1}.{2}'' do not match for row location {3}.  The value in the index is ''{5}'', while the value in the base table is ''{6}''.  The full index key, including the row location, is ''{7}''.  The suggested corrective action is to recreate the index.

# Arguments:
#
#    {0} = tableName
#    {1} = indexName
#    {2} = rowLocation
#    {3} = indexKey
#
X0X62.S=Inconsistency found between table ''{0}'' and index ''{1}''.  Error when trying to retrieve row location ''{2}'' from the table.  The full index key, including the row location, is ''{3}''. The suggested corrective action is to recreate the index.

# Arguments:
#
#    {0} = exceptionText
#
X0X63.S=Got IOException ''{0}''.

# Arguments:
#
#    {0} = type
#
X0X67.S=Columns of type ''{0}'' may not be used in CREATE INDEX, ORDER BY, GROUP BY, UNION, INTERSECT, EXCEPT or DISTINCT statements because comparisons are not supported for that type.

# Arguments:
#
#    {0} = sqlObjectType
#    {1} = sqlObjectName
#
X0X81.S={0} ''{1}'' does not exist.

# Arguments:
#
#    {0} = indexName
#    {1} = indexType
#
X0X85.S=Index ''{0}'' was not created because ''{1}'' is not a valid index type.

X0X86.S=0 is an invalid parameter value for ResultSet.absolute(int row).

X0X87.S=ResultSet.relative(int row) cannot be called when the cursor is not positioned on a row.

# Arguments:
#
#    {0} = operationName
#    {1} = objectName
#
X0X95.S=Operation ''{0}'' cannot be performed on object ''{1}'' because there is an open ResultSet dependent on that object.

# Arguments:
#
#    {0} = indexName
#
X0X99.S=Index ''{0}'' does not exist.

# Arguments:
#
#    {0} = sqlObjectName
#
X0Y16.S=''{0}'' is not a view.  If it is a table, then use DROP TABLE instead.

# Arguments:
#
#    {0} = operationName
#    {1} = objectName
#    {2} = viewName
#
X0Y23.S=Operation ''{0}'' cannot be performed on object ''{1}'' because VIEW ''{2}'' is dependent on that object.

# Arguments:
#
#    {0} = operationName
#    {1} = objectName
#    {2} = statement
#
X0Y24.S=Operation ''{0}'' cannot be performed on object ''{1}'' because STATEMENT ''{2}'' is dependent on that object.

# Arguments:
#
#    {0} = operationName
#    {1} = sqlObjectName
#    {2} = sqlObjectType
#    {3} = sqlObjectName
#
X0Y25.S=Operation ''{0}'' cannot be performed on object ''{1}'' because {2} ''{3}'' is dependent on that object.

# Arguments:
#
#    {0} = indexName
#    {1} = tableName
#
X0Y26.S=Index ''{0}'' is required to be in the same schema as table ''{1}''.

# Arguments:
#
#    {0} = indexName
#    {1} = tableName
#
X0Y28.S=Index ''{0}'' cannot be created on system table ''{1}''.  Users cannot create indexes on system tables.

# Arguments:
#
#    {0} = operationName
#    {1} = objectName
#    {2} = tableName
#
X0Y29.S=Operation ''{0}'' cannot be performed on object ''{1}'' because TABLE ''{2}'' is dependent on that object.

# Arguments:
#
#    {0} = operationName
#    {1} = objectName
#    {2} = routineName
#
X0Y30.S=Operation ''{0}'' cannot be performed on object ''{1}'' because ROUTINE ''{2}'' is dependent on that object.

# Arguments:
#
#    {0} = sqlObjectType
#    {1} = sqlObjectName
#    {2} = sqlObjectType
#    {3} = sqlObjectName
#
X0Y32.S={0} ''{1}'' already exists in {2} ''{3}''.

# Arguments:
#
#    {0} = indexName
#    {1} = tableName
#
X0Y38.S=Cannot create index ''{0}'' because table ''{1}'' does not exist.

# Arguments:
#
#    {0} = constraintName
#    {1} = tableName
#    {2} = tableName
#
X0Y41.S=Constraint ''{0}'' is invalid because the referenced table {1} has no primary key.  Either add a primary key to {1} or explicitly specify the columns of a unique constraint that this foreign key references. 

# Arguments:
#
#    {0} = constraintName
#
X0Y42.S=Constraint ''{0}'' is invalid: the types of the foreign key columns do not match the types of the referenced columns.

# Arguments:
#
#    {0} = constraintName
#    {1} = number
#    {2} = number
#
X0Y43.S=Constraint ''{0}'' is invalid: the number of columns ({1}) does not match the number of columns in the referenced key ({2}).

# Arguments:
#
#    {0} = constraintName
#    {1} = tableName
#
X0Y44.S=Constraint ''{0}'' is invalid: there is no unique or primary key constraint on table ''{1}'' that matches the number and types of the columns in the foreign key.

# Arguments:
#
#    {0} = constraintName
#    {1} = tableName
#
X0Y45.S=Foreign key constraint ''{0}'' cannot be added to or enabled on table {1} because one or more foreign keys do not have matching referenced keys.  

# Arguments:
#
#    {0} = constraintName
#    {1} = tableName
#
X0Y46.S=Constraint ''{0}'' is invalid: referenced table {1} does not exist.

# Arguments:
#
#    {0} = schemaNamet
#
X0Y54.S=Schema ''{0}'' cannot be dropped because it is not empty.

# Arguments:
#
#    {0} = indexName
#    {1} = schemaNamet
#    {2} = tableName
#    {3} = number
#    {4} = number
#
X0Y55.S=The number of rows in the base table does not match the number of rows in at least 1 of the indexes on the table. Index ''{0}'' on table ''{1}.{2}'' has {3} rows, but the base table has {4} rows.  The suggested corrective action is to recreate the index.

# Arguments:
#
#    {0} = sqlText
#    {1} = tableName
#
X0Y56.S=''{0}'' is not allowed on the System table ''{1}''.

# Arguments:
#
#    {0} = tableName
#
X0Y57.S=A non-nullable column cannot be added to table ''{0}'' because the table contains at least one row. Non-nullable columns can only be added to empty tables.

# Arguments:
#
#    {0} = tableName
#
X0Y58.S=Attempt to add a primary key constraint to table ''{0}'' failed because the table already has a constraint of that type.  A table can only have a single primary key constraint.

# Arguments:
#
#    {0} = constraintName
#    {1} = tableName
#    {2} = rowCount
#
X0Y59.S=Attempt to add or enable constraint(s) on table ''{1}'' failed because the table contains {2} row(s) that violate the following check constraint(s): {0}.

# Arguments:
#
#    {0} = tableName
#
X0Y63.S=The command on table ''{0}'' failed because null data was found in the primary key or unique constraint/index column(s). All columns in a primary or unique index key must not be null.  

# Arguments:
#
#    {0} = tableName
#
X0Y63.S.1=The command on table ''{0}'' failed because null data was found in the primary key/index column(s). All columns in a primary key must not be null.  

X0Y66.S=Cannot issue commit in a nested connection when there is a pending operation in the parent connection.

X0Y67.S=Cannot issue rollback in a nested connection when there is a pending operation in the parent connection.

# Arguments:
#
#    {0} = sqlObjectType
#    {1} = sqlObjectName
#
X0Y68.S={0} ''{1}'' already exists.

# Arguments:
#
#    {0} = triggerName
#
X0Y69.S=DDL is not supported in trigger {0}.

# Arguments:
#
#    {0} = triggerName
#    {1} = tableName
#
X0Y70.S=INSERT, UPDATE and DELETE are not permitted on table {1} because trigger {0} is active.

# Arguments:
#
#    {0} = triggerName
#
X0Y71.S=Transaction manipulation such as SET ISOLATION is not permitted because trigger {0} is active.

# Arguments:
#
#    {0} = tableName
#    {1} = triggerName
#
X0Y72.S=Bulk insert replace is not permitted on ''{0}'' because it has an enabled trigger ({1}).

X0Y77.S=Cannot issue set transaction isolation statement on a global transaction that is in progress because it would have implicitly committed the global transaction.

X0Y78.S=Statement.executeQuery() cannot be called with a statement that returns a row count.

# Arguments:
#
#    {0} = javaInterfaceName
#    {1} = javaInterfaceName
#
X0Y78.S.1={0}.executeQuery() cannot be called because multiple result sets were returned.  Use {1}.execute() to obtain multiple results.

# Arguments:
#
#    {0} = javaInterfaceName
#    {1} = javaInterfaceName
#
X0Y78.S.2={0}.executeQuery() was called but no result set was returned. Use {1}.executeUpdate() for non-queries.

X0Y79.S=Statement.executeUpdate() cannot be called with a statement that returns a ResultSet.

# Arguments:
#
#    {0} = tableName
#    {1} = columnName
#
X0Y80.S=ALTER table ''{0}'' failed. Null data found in column ''{1}''.

# Arguments:
#
#    {0} = rowName
#    {1} = id
#
X0Y83.S=Warning: While deleting a row from a table the index row for base table row {0} was not found in index with conglomerate id {1}.  This problem has automatically been corrected as part of the delete operation.

# Arguments:
#
#    {0} = sequenceName
#
X0Y84.T=Too much contention on sequence {0}. This is probably caused by an uncommitted scan of the SYS.SYSSEQUENCES catalog. Do not query this catalog directly. Instead, use the SYSCS_UTIL.SYSCS_PEEK_AT_SEQUENCE function to view the current value of a query generator.

# Arguments:
#
#    {0} = propertyName
#    {1} = className
#
X0Y85.S=The Derby property ''{0}'' identifies a class which cannot be instantiated: ''{1}''. See the next exception for details.

# Arguments:
#
#    {0} = schemaName
#    {1} = sequenceName
#
X0Y86.S=Derby could not obtain the locks needed to release the unused, preallocated values for the sequence ''{0}''.''{1}''. As a result, unexpected gaps may appear in this sequence.

# Arguments:
#
#    {0} = schemaName
#    {1} = aggregateOrFunctionName
#
X0Y87.S=There is already an aggregate or function with one argument whose name is ''{0}''.''{1}''.

# Arguments:
#
#    {0} = toolName
#
X0Y88.S=Unknown optional tool: ''{0}''

X0Y89.S=Bad arguments passed to SYSCS_UTIL.SYSCS_REGISTER_TOOL(). Please consult the Reference Manual section which describes this system procedure.

# Arguments:
#
#    {0} = className
#
X0Y90.S=Cannot create an instance of {0}. Maybe this class is not visible on the classpath. Maybe it doesn not have a 0-arg constructor.

# Arguments:
#
#    {0} = constraintName
#
X0Y91.S=Cannot change constraint mode of {0}. It is not a deferrable constraint.

X0Y92.S=Cannot change the names of this table function''s columns.

# Arguments:
#
#    {0} = cacheName
#    {1} = keyValue
#
XBCA0.S=Cannot create new object with key {1} in {0} cache. The object already exists in the cache. 

# Arguments:
#
#    {0} = className
#
XBCM1.S=Java linkage error thrown during load of generated class {0}.

# Arguments:
#
#    {0} = className
#
XBCM2.S=Cannot create an instance of generated class {0}.

# Arguments:
#
#    {0} = className
#    {1} = methodName
#
XBCM3.S=Method {1}() does not exist in generated class {0}.

# Arguments:
#
#    {0} = className
#    {1} = limitDescriptor
#
XBCM4.S=Java class file format limit(s) exceeded: {1} in generated class {0}.

XBCX0.S=Exception from Cryptography provider. See next exception for details.

XBCX1.S=Initializing cipher with illegal mode, must be either CipherFactory.ENCRYPT or CipherFactory.DECRYPT.

# Arguments:
#
#    {0} = number
#
XBCX2.S=Initializing cipher with a boot password that is too short. The password must be at least {0} characters long.    

XBCX5.S=Cannot change boot password to null.

XBCX6.S=Cannot change boot password to a non-string serializable type.

XBCX7.S=Wrong format for changing boot password.  Format must be : old_boot_password, new_boot_password.

XBCX8.S=Cannot change boot password for a non-encrypted database.

XBCX9.S=Cannot change boot password for a read-only database.  

XBCXA.S=Wrong boot password.

# Arguments:
#
#    {0} = paddingDirective
#
XBCXB.S=Bad encryption padding ''{0}'' or padding not specified. ''NoPadding'' must be used.

# Arguments:
#
#    {0} = algorithmName
#    {1} = providerName
#
XBCXC.S=Encryption algorithm ''{0}'' does not exist. Please check that the chosen provider ''{1}'' supports this algorithm.

XBCXD.S=The encryption algorithm cannot be changed after the database is created.

XBCXE.S=The encryption provider cannot be changed after the database is created.

# Arguments:
#
#    {0} = className
#
XBCXF.S=The class ''{0}'' representing the encryption provider cannot be found.

# Arguments:
#
#    {0} = providerName
#
XBCXG.S=The encryption provider ''{0}'' does not exist.

# Arguments:
#
#    {0} = algorithmName
#
XBCXH.S=The encryptionAlgorithm ''{0}'' is not in the correct format. The correct format is algorithm/feedbackMode/NoPadding.

# Arguments:
#
#    {0} = mode
#
XBCXI.S=The feedback mode ''{0}'' is not supported. Supported feedback modes are CBC, CFB, OFB and ECB.

XBCXJ.S=The application is using a version of the Java Cryptography Extension (JCE) earlier than 1.2.1.  Please upgrade to JCE 1.2.1 and try the operation again.    

XBCXK.S=The given encryption key does not match the encryption key used when creating the database. Please ensure that you are using the correct encryption key and try again. 

XBCXL.S=The verification process for the encryption key was not successful. This could have been caused by an error when accessing the appropriate file to do the verification process.  See next exception for details.  

XBCXM.S=The length of the external encryption key must be an even number.

XBCXN.S=The external encryption key contains one or more illegal characters. Allowed characters for a hexadecimal number are 0-9, a-f and A-F.

XBCXO.S=Cannot encrypt, re-encrypt or decrypt the database when there is a global transaction in the prepared state.

XBCXQ.S=Cannot encrypt, re-encrypt or decrypt a read-only database.

XBCXS.S=Cannot encrypt, re-encrypt or decrypt a database when it is in the log archive mode.

# Arguments:
#
#    {0} = failureMessage
#
XBCXU.S=Encryption, re-encryption or decryption of a database failed: {0}

# Arguments:
#
#    {0} = algorithmName
#
XBCXW.S=The message digest algorithm ''{0}'' is not supported by any of the available cryptography providers. Please install a cryptography provider that supports that algorithm, or specify another algorithm in the derby.authentication.builtin.algorithm property.

XBM01.D=Startup failed due to an exception. See next exception for details. 

# Arguments:
#
#    {0} = moduleName
#
XBM02.D=Startup failed due to missing functionality for {0}. Please ensure your classpath includes the correct Derby software.

# Arguments:
#
#    {0} = productName
#
XBM05.D=Startup failed due to missing product version information for {0}.

XBM06.D=Startup failed. An encrypted database cannot be accessed without the correct boot password.  

XBM07.D=Startup failed. Boot password must be at least 8 bytes long.

# Arguments:
#
#    {0} = subSubProtocol
#    {1} = className
#
XBM08.D=Could not instantiate {0} StorageFactory class {1}.

# Arguments:
#
#    {0} = directoryName
#    {1} = servicePropertiesName
#
XBM0A.D=The database directory ''{0}'' exists. However, it does not contain the expected ''{1}'' file. Perhaps Derby was brought down in the middle of creating this database. You may want to delete this directory and try creating the database again.

# Arguments:
#
#    {0} = errorMessage
#
XBM0B.D=Failed to edit/write service properties file: {0}

# Arguments:
#
#    {0} = operation
#    {1} = path
#    {2} = errorMessage
#
XBM0C.D=Missing privilege for operation ''{0}'' on file ''{1}'': {2}

XBM0G.D=Failed to start encryption engine. Please make sure you are running Java 2 and have downloaded an encryption provider such as jce and put it in your class path. 

# Arguments:
#
#    {0} = directoryName
#
XBM0H.D=Directory {0} cannot be created.

# Arguments:
#
#    {0} = directoryName
#
XBM0I.D=Directory {0} cannot be removed.

# Arguments:
#
#    {0} = directoryName
#
XBM0J.D=Directory {0} already exists.

# Arguments:
#
#    {0} = databaseName
#
XBM0K.D=Unknown sub-protocol for database name {0}.

# Arguments:
#
#    {0} = className
#    {1} = interfaceName
#
XBM0L.D=Specified authentication scheme class {0} does implement the authentication interface {1}.

# Arguments:
#
#    {0} = className
#    {1} = detail
#
XBM0M.D=Error creating an instance of a class named ''{0}''. This class name was the value of the derby.authentication.provider property and was expected to be the name of an application-supplied implementation of org.apache.derby.authentication.UserAuthenticator. The underlying problem was: {1}

XBM0N.D=JDBC Driver registration with java.sql.DriverManager failed. See next exception for details. 

XBM0P.D=Service provider is read-only. Operation not permitted. 

# Arguments:
#
#    {0} = fileName
#
XBM0Q.D=File {0} not found. Please make sure that backup copy is the correct one and it is not corrupted.

# Arguments:
#
#    {0} = fileName
#
XBM0R.D=Unable to remove File {0}.  

# Arguments:
#
#    {0} = fileName
#    {1} = fileName
#
XBM0S.D=Unable to rename file ''{0}'' to ''{1}''

# Arguments:
#
#    {0} = databaseName
#
XBM0T.D=Ambiguous sub-protocol for database name {0}.   

# Arguments:
#
#    {0} = identifierName
#
XBM0U.S=No class was registered for identifier {0}.

# Arguments:
#
#    {0} = identifierName
#    {1} = className
#
XBM0V.S=An exception was thrown while loading class {1} registered for identifier {0}.

# Arguments:
#
#    {0} = identifierName
#    {1} = className
#
XBM0W.S=An exception was thrown while creating an instance of class {1} registered for identifier {0}.

# Arguments:
#
#    {0} = localeID
#
XBM0X.D=Supplied locale description ''{0}'' is invalid, expecting ln[_CO[_variant]]\nln=lower-case two-letter ISO-639 language code, CO=upper-case two-letter ISO-3166 country codes, see java.util.Locale.

# Arguments:
#
#    {0} = collationName
#
XBM03.D=Supplied value ''{0}'' for collation attribute is invalid, expecting UCS_BASIC or TERRITORY_BASED.

# Arguments:
#
#    {0} = localeName
#
XBM04.D=Collator support not available from the JVM for the database''s locale ''{0}''.

# Arguments:
#
#    {0} = directoryName
#
XBM0Y.D=Backup database directory {0} not found. Please make sure that the specified backup path is right.

# Arguments:
#
#    {0} = fileName
#    {1} = fileName
#
XBM0Z.D=Unable to copy file ''{0}'' to ''{1}''. Please make sure that there is enough space and permissions are correct. 

XBDA0.C.1=Login timeout exceeded.

# Arguments:
#
#    {0} = operationName
#
XCL01.S=Result set does not return rows. Operation {0} not permitted. 

# Arguments:
#
#    {0} = operationName
#
XCL05.S=Activation closed, operation {0} not permitted.

# Arguments:
#
#    {0} = cursorName
#
XCL07.S=Cursor ''{0}'' is closed. Verify that autocommit is off.

# Arguments:
#
#    {0} = cursorName
#
XCL08.S=Cursor ''{0}'' is not on a row.

# Arguments:
#
#    {0} = methodName
#
XCL09.S=An Activation was passed to the ''{0}'' method that does not match the PreparedStatement.

XCL10.S=A PreparedStatement has been recompiled and the parameters have changed. If you are using JDBC you must prepare the statement again.  

# Arguments:
#
#    {0} = datatypeName
#    {1} = datatypeName
#
XCL12.S=An attempt was made to put a data value of type ''{0}'' into a data value of type ''{1}''.

# Arguments:
#
#    {0} = parameterPosition
#    {1} = number
#
XCL13.S=The parameter position ''{0}'' is out of range.  The number of parameters for this prepared  statement is ''{1}''.

# Arguments:
#
#    {0} = columnPosition
#    {1} = number
#
XCL14.S=The column position ''{0}'' is out of range.  The number of columns for this ResultSet is ''{1}''.

# Arguments:
#
#    {0} = object
#    {1} = className
#
XCL15.S=A ClassCastException occurred when calling the compareTo() method on an object ''{0}''.  The parameter to compareTo() is of class ''{1}''.

# Arguments:
#
#    {0} = operation
#
XCL16.S=ResultSet not open. Operation ''{0}'' not permitted. Verify that autocommit is off.

XCL18.S=Stream or LOB value cannot be retrieved more than once

# Arguments:
#
#    {0} = tableName
#    {1} = key
#
XCL19.S=Missing row in table ''{0}'' for key ''{1}''.

# Arguments:
#
#    {0} = versionNumber
#    {1} = versionNumber
#
XCL20.S=Catalogs at version level ''{0}'' cannot be upgraded to version level ''{1}''.

XCL21.S=You are trying to execute a Data Definition statement (CREATE, DROP, or ALTER) while preparing a different statement. This is not allowed. It can happen if you execute a Data Definition statement from within a static initializer of a Java class that is being used from within a SQL statement.

# Arguments:
#
#    {0} = parameterName
#
XCL22.S=Parameter {0} cannot be registered as an OUT parameter because it is an IN parameter. 

# Arguments:
#
#    {0} = type
#
XCL23.S=SQL type number ''{0}'' is not a supported type by registerOutParameter().

# Arguments:
#
#    {0} = parameterName
#    {1} = type
#
XCL24.S=Parameter {0} appears to be an output parameter, but it has not been so designated by registerOutParameter().  If it is not an output parameter, then it has to be set to type {1}.

# Arguments:
#
#    {0} = parameterName
#    {1} = type
#    {2} = type
#
XCL25.S=Parameter {0} cannot be registered to be of type {1} because it maps to type {2} and they are incompatible.

# Arguments:
#
#    {0} = parameterName
#
XCL26.S=Parameter {0} is not an output parameter.

XCL27.S=Return output parameters cannot be set.

# Arguments:
#
#    {0} = dataType
#
XCL30.S=An IOException was thrown when reading a ''{0}'' from an InputStream.

XCL31.S=Statement closed.

# Arguments:
#
#    {0} = tableName
#
XCL33.S=The table cannot be defined as a dependent of table {0} because of delete rule restrictions. (The relationship is self-referencing and a self-referencing relationship already exists with the SET NULL delete rule.) 

# Arguments:
#
#    {0} = tableName
#
XCL34.S=The table cannot be defined as a dependent of table {0} because of delete rule restrictions. (The relationship forms a cycle of two or more tables that cause the table to be delete-connected to itself (all other delete rules in the cycle would be CASCADE)).  

# Arguments:
#
#    {0} = tableName
#
XCL35.S=The table cannot be defined as a dependent of table {0} because of delete rule restrictions. (The relationship causes the table to be delete-connected to the indicated table through multiple relationships and the delete rule of the existing relationship is SET NULL.).  

# Arguments:
#
#    {0} = sqlText
#
XCL36.S=The delete rule of foreign key must be {0}. (The referential constraint is self-referencing and an existing self-referencing constraint has the indicated delete rule (NO ACTION, RESTRICT or CASCADE).)

# Arguments:
#
#    {0} = sqlText
#
XCL37.S=The delete rule of foreign key must be {0}. (The referential constraint is self-referencing and the table is dependent in a relationship with a delete rule of CASCADE.)

# Arguments:
#
#    {0} = ruleName
#
XCL38.S=The delete rule of foreign key  must be {0}. The relationship would cause the table to be delete-connected to the same table through multiple relationships and such relationships must have the same delete rule (NO ACTION, RESTRICT or CASCADE). 

XCL39.S=The delete rule of foreign key cannot be CASCADE. (A self-referencing constraint exists with a delete rule of SET NULL, NO ACTION or RESTRICT.) 

XCL40.S=The delete rule of foreign key cannot be CASCADE. (The relationship would form a cycle that would cause a table to be delete-connected to itself. One of the existing delete rules in the cycle is not CASCADE, so this relationship may be definable if the delete rule is not CASCADE.) 

XCL41.S=The delete rule of foreign key can not be CASCADE. (The relationship would cause another table to be delete-connected to the same table through multiple paths with different delete rules or with delete rule equal to SET NULL.) 

# Arguments:
#
#    {0} = sqlText
#    {1} = versionNumber
#    {2} = versionNumber
#
XCL47.S=Use of ''{0}'' requires database to be upgraded from version {1} to version {2} or later.

# Arguments:
#
#    {0} = tableName
#
XCL48.S= TRUNCATE TABLE is not permitted on ''{0}'' because unique/primary key constraints on this table are referenced by enabled foreign key constraints from other tables. 

# Arguments:
#
#    {0} = tableName
#    {1} = triggerName
#
XCL49.S= TRUNCATE TABLE is not permitted on ''{0}'' because it has an enabled DELETE trigger ({1}).

# Arguments:
#
#    {0} = versionNumber
#    {1} = versionNumber
#
XCL50.S=Upgrading the database from a previous version is not supported.  The database being accessed is at version level ''{0}'', this software is at version level ''{1}''.    

XCL51.S=The requested function can not reference tables in SESSION schema.

XCL52.S=The statement has been cancelled or timed out.

# Arguments:
#
#    {0} = versionID
#    {1} = versionID
#
XCW00.D=Unsupported upgrade from ''{0}'' to ''{1}''.

XCXA0.S=Invalid identifier.

# Arguments:
#
#    {0} = classpath
#
XCXB0.S=Invalid database classpath: ''{0}''.

XCXC0.S=Invalid id list.

XCXE0.S=You are trying to do an operation that uses the locale of the database, but the database does not have a locale.

# Arguments:
#
#    {0} = propertyName
#    {1} = propertyValue
#
XCY00.S=Invalid value for property ''{0}''=''{1}''.

# Arguments:
#
#    {0} = propertyName
#    {1} = propertyValue
#
XCY02.S=The requested property change is not supported ''{0}''=''{1}''.

# Arguments:
#
#    {0} = propertyName
#
XCY03.S=Required property ''{0}'' has not been set.

XCY04.S=Invalid syntax for optimizer overrides. The syntax should be -- DERBY-PROPERTIES propertyName = value [, propertyName = value]*

XCY05.S.2=Invalid setting of the derby.authentication.provider property. This property is already set to enable NATIVE authentication and cannot be changed.

XCY05.S.3=Invalid setting of the derby.authentication.provider property. To enable NATIVE authentication, use the SYSCS_UTIL.SYSCS_CREATE_USER procedure to store credentials for the database owner.

# Arguments:
#
#    {0} = permissionName
#
XCZ00.S=Unknown permission ''{0}''.

# Arguments:
#
#    {0} = authorizationID
#
XCZ01.S=Unknown user ''{0}''.

# Arguments:
#
#    {0} = propertyName
#    {1} = propertyValue
#
XCZ02.S=Invalid parameter ''{0}''=''{1}''.

XD004.S=Unable to store dependencies.

XIE01.S=Connection was null.

# Arguments:
#
#    {0} = lineNumber
#    {1} = columnName
#
XIE03.S=Data found on line {0} for column {1} after the stop delimiter.  

# Arguments:
#
#    {0} = fileName
#
XIE04.S=Data file not found: {0}

XIE05.S=Data file cannot be null. 

XIE06.S=Entity name was null.

XIE07.S=Field and record separators cannot be substrings of each other. 

# Arguments:
#
#    {0} = columnName
#
XIE08.S=There is no column named: {0}.  

# Arguments:
#
#    {0} = number
#
XIE09.S=The total number of columns in the row is: {0}.  

# Arguments:
#
#    {0} = columnName
#    {1} = type
#
XIE0B.S=Column ''{0}'' in the table is of type {1}, it is not supported by the import/export feature.   

# Arguments:
#
#    {0} = lineNumber
#
XIE0D.S=Cannot find the record separator on line {0}.

# Arguments:
#
#    {0} = lineNumber
#
XIE0E.S=Read end of file at unexpected place on line {0}.

XIE0I.S=An IOException occurred while writing data to the file.

XIE0J.S=A delimiter is not valid or is used more than once.

XIE0K.S=The period was specified as a character string delimiter.

# Arguments:
#
#    {0} = tableName
#
XIE0M.S=Table ''{0}'' does not exist.  

# Arguments:
#
#    {0} = hexString
#
XIE0N.S=An invalid hexadecimal string ''{0}'' detected in the import file.

# Arguments:
#
#    {0} = fileName
#
XIE0P.S=Lob data file {0} referenced in the import file not found.

XIE0Q.S=Lob data file name cannot be null. 

# Arguments:
#
#    {0} = lineNumber
#    {1} = fileName
#    {2} = details
#
XIE0R.S=Import error on line {0} of file {1}: {2} 

# Arguments:
#
#    {0} = fileName
#
XIE0S.S=The export operation was not performed, because the specified output file ({0}) already exists. Export processing will not overwrite an existing file, even if the process has permissions to write to that file, due to security concerns, and to avoid accidental file damage. Please either change the output file name in the export procedure arguments to specify a file which does not exist, or delete the existing file, then retry the export operation.

# Arguments:
#
#    {0} = fileName
#
XIE0T.S=The export operation was not performed, because the specified large object auxiliary file ({0}) already exists. Export processing will not overwrite an existing file, even if the process has permissions to write to that file, due to security concerns, and to avoid accidental file damage. Please either change the large object auxiliary file name in the export procedure arguments to specify a file which does not exist, or delete the existing file, then retry the export operation.

# Arguments:
#
#    {0} = databaseName
#
XJ004.C=Database ''{0}'' not found.

XJ008.S=Cannot rollback or release a savepoint when in auto-commit mode.

# Arguments:
#
#    {0} = sqlText
#
XJ009.S=Use of CallableStatement required for stored procedure call or use of output parameters: {0}

XJ010.S=Cannot issue SAVEPOINT when autoCommit is on.

XJ011.S=Cannot pass null for SAVEPOINT name.

# Arguments:
#
#    {0} = interfaceName
#
XJ012.S=''{0}'' already closed.

XJ013.S=No identifier for named SAVEPOINTS.

XJ014.S=No name for un-named SAVEPOINTS.

XJ015.M=Derby system shutdown.

# Arguments:
#
#    {0} = methodName
#
XJ016.S=Method ''{0}'' not allowed on prepared statement.

XJ017.S=No savepoint command allowed inside the trigger code.

XJ018.S=Column name cannot be null.

# Arguments:
#
#    {0} = typeName
#
XJ020.S=Object type not convertible to type ''{0}'', invalid java.sql.Types value, or object was null.

XJ021.S=Type is not supported.

# Arguments:
#
#    {0} = name
#
XJ022.S=Unable to set stream: ''{0}''.

XJ023.S=Input stream did not have exact amount of data as the requested length.

XJ025.S=Input stream cannot have negative length.

# Arguments:
#
#    {0} = urlValue
#
XJ028.C=The URL ''{0}'' is not properly formed.

XJ030.S=Cannot set Autocommit On when in a nested connection.

# Arguments:
#
#    {0} = databaseName
#    {1} = classLoader
#
XJ040.C=Failed to start database ''{0}'' with class loader {1}, see the next exception for details.

# Arguments:
#
#    {0} = databaseName
#
XJ041.C=Failed to create database ''{0}'', see the next exception for details.

# Arguments:
#
#    {0} = propertyValue
#    {1} = propertyName
#
XJ042.S=''{0}'' is not a valid value for property ''{1}''.

# Arguments:
#
#    {0} = number
#
XJ044.S=''{0}'' is an invalid scale.

# Arguments:
#
#    {0} = levelName
#
XJ045.S=Invalid or (currently) unsupported isolation level, ''{0}'', passed to Connection.setTransactionIsolation(). The currently supported values are java.sql.Connection.TRANSACTION_SERIALIZABLE, java.sql.Connection.TRANSACTION_REPEATABLE_READ, java.sql.Connection.TRANSACTION_READ_COMMITTED, and java.sql.Connection.TRANSACTION_READ_UNCOMMITTED.

# Arguments:
#
#    {0} = attributes
#
XJ048.C=Conflicting boot attributes specified: {0}

XJ049.C=Conflicting create attributes specified.

XJ04B.S=Batch cannot contain a command that attempts to return a result set.

XJ04C.S=CallableStatement batch cannot contain output parameters.

XJ056.S=Cannot set Autocommit On when in an XA connection.

XJ057.S=Cannot commit a global transaction using the Connection, commit processing must go thru XAResource interface.

XJ058.S=Cannot rollback a global transaction using the Connection, commit processing must go thru XAResource interface.

XJ059.S=Cannot close a connection while a global transaction is still active.

# Arguments:
#
#    {0} = attributeName
#    {1} = attributeValue
#    {2} = attributeValues
#
XJ05B.C=JDBC attribute ''{0}'' has an invalid value ''{1}'', valid values are ''{2}''.

XJ05C.S=Cannot set holdability ResultSet.HOLD_CURSORS_OVER_COMMIT for a global transaction.

# Arguments:
#
#    {0} = methodName
#
XJ061.S=The ''{0}'' method is only allowed on scroll cursors.

# Arguments:
#
#    {0} = invalidNumber
#
XJ062.S=Invalid parameter value ''{0}'' for ResultSet.setFetchSize(int rows).

# Arguments:
#
#    {0} = invalidNumber
#
XJ063.S=Invalid parameter value ''{0}'' for Statement.setMaxRows(int maxRows).  Parameter value must be >= 0.

# Arguments:
#
#    {0} = invalidNumber
#
XJ064.S=Invalid parameter value ''{0}'' for setFetchDirection(int direction).

# Arguments:
#
#    {0} = invalidNumber
#
XJ065.S=Invalid parameter value ''{0}'' for Statement.setFetchSize(int rows).

# Arguments:
#
#    {0} = invalidNumber
#
XJ066.S=Invalid parameter value ''{0}'' for Statement.setMaxFieldSize(int max).

XJ067.S=SQL text pointer is null.

XJ068.S=Only executeBatch and clearBatch allowed in the middle of a batch.

XJ069.S=No SetXXX methods allowed in case of USING execute statement.

# Arguments:
#
#    {0} = argument
#
XJ070.S=Negative or zero position argument ''{0}'' passed in a Blob or Clob method.

# Arguments:
#
#    {0} = argument
#
XJ071.S=Negative length argument ''{0}'' passed in a BLOB or CLOB method.

XJ072.S=Null pattern or searchStr passed in to a BLOB or CLOB position method.

XJ073.S=The data in this BLOB or CLOB is no longer available.  The BLOB/CLOB''s transaction may be committed, its connection closed or it has been freed.

# Arguments:
#
#    {0} = invalidNumber
#
XJ074.S=Invalid parameter value ''{0}'' for Statement.setQueryTimeout(int seconds).

# Arguments:
#
#    {0} = positionArgument
#
XJ076.S=The position argument ''{0}'' exceeds the size of the BLOB/CLOB.

XJ077.S=Got an exception when trying to read the first byte/character of the BLOB/CLOB pattern using getBytes/getSubString.

# Arguments:
#
#    {0} = invalidNumber
#
XJ078.S=Offset ''{0}'' is either less than zero or is too large for the current BLOB/CLOB.

# Arguments:
#
#    {0} = number
#
XJ079.S=The length specified ''{0}'' exceeds the size of the BLOB/CLOB.

# Arguments:
#
#    {0} = number
#    {1} = number
#
XJ080.S=USING execute statement passed {0} parameters rather than {1}.

XJ081.C=Conflicting create/restore/recovery attributes specified.

# Arguments:
#
#    {0} = parameterValue
#    {1} = parameterName
#    {2} = methodName
#
XJ081.S=Invalid value ''{0}'' passed as parameter ''{1}'' to method ''{2}''

XJ085.S=Stream has already been read and end-of-file reached and cannot be re-used.

XJ086.S=This method cannot be invoked while the cursor is not on the insert row or if the concurrency of this ResultSet object is CONCUR_READ_ONLY.

# Arguments:
#
#    {0} = pos
#    {1} = length
#
XJ087.S=Sum of position(''{0}'') and length(''{1}'') is greater than the size of the LOB plus one.

XJ088.S=Invalid operation: wasNull() called with no data retrieved.

XJ090.S=Invalid parameter: calendar is null.

# Arguments:
#
#    {0} = indexNumber
#
XJ091.S=Invalid argument: parameter index {0} is not an OUT or INOUT parameter.

# Arguments:
#
#    {0} = number
#    {1} = number
#
XJ093.S=Length of BLOB/CLOB, {0}, is too large.  The length cannot exceed {1}.

XJ095.S=An attempt to execute a privileged action failed.

XJ097.S=Cannot rollback or release a savepoint that was not created by this connection.

# Arguments:
#
#    {0} = keyValue
#
XJ098.S=The auto-generated keys value {0} is invalid

XJ099.S=The Reader/Stream object does not contain length characters

XJ100.S=The scale supplied by the registerOutParameter method does not match with the setter method. Possible loss of precision!

XJ103.S=Table name can not be null

# Arguments:
#
#    {0} = invalidNumber
#
XJ104.S=Shared key length is invalid: {0}.

# Arguments:
#
#    {0} = number
#    {1} = number
#
XJ105.S=DES key has the wrong length, expected length {0}, got length {1}.

XJ106.S=No such padding 

XJ107.S=Bad Padding

XJ108.S=Illegal Block Size

XJ110.S=Primary table name can not be null

XJ111.S=Foreign table name can not be null

XJ112.S=Security exception encountered, see next exception for details.

# Arguments:
#
#    {0} = fileName
#    {1} = error
#
XJ113.S=Unable to open file {0} : {1}

# Arguments:
#
#    {0} = cursorName
#
XJ114.S=Invalid cursor name ''{0}''

# Arguments:
#
#    {0} = invalidNumber
#
XJ115.S=Unable to open resultSet with requested holdability {0}.

# Arguments:
#
#    {0} = number
#
XJ116.S=No more than {0} commands may be added to a single batch.

XJ117.S=Batching of queries not allowed by J2EE compliance.

XJ118.S=Query batch requested on a non-query statement.

XJ121.S=Invalid operation at current cursor position.

XJ122.S=No updateXXX methods were called on this row.

XJ123.S=This method must be called to update values in the current row or the insert row.

XJ124.S=Column not updatable.

XJ125.S=This method should only be called on ResultSet objects that are scrollable (type TYPE_SCROLL_INSENSITIVE).

XJ126.S=This method should not be called on sensitive dynamic cursors.

# Arguments:
#
#    {0} = interfaceName
#
XJ128.S=Unable to unwrap for ''{0}''

# Arguments:
#
#    {0} = number
#
XJ200.S=Exceeded maximum number of sections {0}

# Arguments:
#
#    {0} = cursorName
#
XJ202.S=Invalid cursor name ''{0}''.

# Arguments:
#
#    {0} = cursorName
#
XJ203.S=Cursor name ''{0}'' is already in use

# Arguments:
#
#    {0} = holdValue
#
XJ204.S=Unable to open result set with requested holdability {0}.

# Arguments:
#
#    {0} = sqlText
#
XJ206.S=SQL text ''{0}'' has no tokens.

XJ207.S=executeQuery method can not be used for update.

XJ208.S=Non-atomic batch failure.  The batch was submitted, but at least one exception occurred on an individual member of the batch. Use getNextException() to retrieve the exceptions for specific batched elements.

XJ209.S=The required stored procedure is not installed on the server.

XJ210.S=The load module name for the stored procedure on the server is not found.

XJ211.S=Non-recoverable chain-breaking exception occurred during batch processing. The batch is terminated non-atomically.

# Arguments:
#
#    {0} = attributeSyntax
#
XJ212.S=Invalid attribute syntax: {0}

XJ213.C=The traceLevel connection property does not have a valid format for a number.

XJ214.S=An IO Error occurred when calling free() on a CLOB or BLOB.

XJ215.S=You cannot invoke other java.sql.Clob/java.sql.Blob methods after calling the free() method or after the Blob/Clob''s transaction has been committed or rolled back.

XJ216.S=The length of this BLOB/CLOB is not available yet. When a BLOB or CLOB is accessed as a stream, the length is not available until the entire stream has been processed.

XJ217.S=The locator that was supplied for this CLOB/BLOB is invalid

# Arguments:
#
#    {0} = reason
#
XK000.S=The security policy could not be reloaded: {0}

XK001.S=Username not found in SYS.SYSUSERS.

XN001.S=Connection reset is not allowed when inside a unit of work.

XN008.S=Query processing has been terminated due to an error on the server.

XN009.S=Error obtaining length of BLOB/CLOB object, exception follows.

XN010.S=Procedure name can not be null.

# Arguments:
#
#    {0} = number
#    {1} = number
#
XN011.S=Procedure name length {0} is not within the valid range of 1 to {1}.

# Arguments:
#
#    {0} = operatingSystemName
#    {1} = versionNumber
#    {2} = versionNumber
#
XN012.S=On {0} platforms, XA supports version {1} and above, this is version {2}

XN013.S=Invalid scroll orientation.

# Arguments:
#
#    {0} = number
#    {1} = messageText
#
XN014.S=Encountered an Exception while reading from the stream specified by parameter #{0}.  The remaining data expected by the server has been filled with 0x0. The Exception had this message: {1}.

# Arguments:
#
#    {0} = number
#
XN015.S=Network protocol error: the specified size of the InputStream, parameter #{0}, is less than the actual InputStream length.

# Arguments:
#
#    {0} = number
#    {1} = messageText
#
XN016.S=Encountered an Exception while trying to verify the length of the stream specified by parameter #{0}.  The Exception had this message: {1}.

# Arguments:
#
#    {0} = number
#
XN017.S=End of stream prematurely reached while reading the stream specified by parameter #{0}.  The remaining data expected by the server has been filled with 0x0.

# Arguments:
#
#    {0} = number
#
XN018.S=Network protocol error: the specified size of the Reader, parameter #{0}, is less than the actual InputStream length.

# Arguments:
#
#    {0} = xaFunctionName
#    {1} = xaError
#
XN019.S=Error executing a {0}, server returned {1}.

# Arguments:
#
#    {0} = messageDetail
#
XN020.S=Error marshalling or unmarshalling a user defined type: {0}

# Arguments:
#
#    {0} = sourceClassName
#    {1} = targetClassName
#
XN021.S=An object of type {0} cannot be cast to an object of type {1}.

XN022.C=A write chain that has transmitted data to the server cannot be reset until the request is finished and the chain terminated.

# Arguments:
#
#    {0} = number
#
XN023.C=The stream specified by parameter #{0} is locator-based and requires a nested request on the same connection to be materialized. This is not supported.

# Arguments:
#
#    {0} = number
#    {1} = messageText
#
XN024.C=Encountered an exception which terminated the connection, while reading from the stream specified by parameter #{0}. The Exception had this message: ''{1}''.

XRE00=This LogFactory module does not support replication.

XRE01=The log received from the master is corrupted.

XRE02=Master and Slave at different versions. Unable to proceed with Replication.

XRE03=Unexpected replication error. See derby.log for details.

# Arguments:
#
#    {0} = dbname
#    {1} = hostname
#    {2} = portname
#
XRE04.C.1=Could not establish a connection to the peer of the replicated database ''{0}'' on address ''{1}:{2}''.

# Arguments:
#
#    {0} = dbname
#
XRE04.C.2=Connection lost for replicated database ''{0}''.

# Arguments:
#
#    {0} = dbname
#    {1} = masterfile
#    {2} = masteroffset
#    {3} = slavefile
#    {4} = slaveoffset
#
XRE05.C=The log files on the master and slave are not in synch for replicated database ''{0}''. The master log instant is {1}:{2}, whereas the slave log instant is {3}:{4}. This is fatal for replication - replication will be stopped.

# Arguments:
#
#    {0} = dbname
#
XRE06=The connection attempts to the replication slave for the database {0} exceeded the specified timeout period.

XRE07=Could not perform operation because the database is not in replication master mode.

# Arguments:
#
#    {0} = dbname
#
XRE08=Replication slave mode started successfully for database ''{0}''. Connection refused because the database is in replication slave mode. 

# Arguments:
#
#    {0} = dbname
#
XRE09.C=Cannot start replication slave mode for database ''{0}''. The database has already been booted.

# Arguments:
#
#    {0} = attribute
#
XRE10=Conflicting attributes specified. See reference manual for attributes allowed in combination with replication attribute ''{0}''.

# Arguments:
#
#    {0} = command
#    {1} = dbname
#
XRE11.C=Could not perform operation ''{0}'' because the database ''{1}'' has not been booted.

# Arguments:
#
#    {0} = dbname
#    {1} = expectedtype
#    {2} = receivedtype
#
XRE12=Replication network protocol error for database ''{0}''. Expected message type ''{1}'', but received type ''{2}''.

# Arguments:
#
#    {0} = dbname
#
XRE20.D=Failover performed successfully for database ''{0}'', the database has been shutdown.

# Arguments:
#
#    {0} = dbname
#
XRE21.C=Error occurred while performing failover for database ''{0}'', Failover attempt was aborted.

# Arguments:
#
#    {0} = dbname
#
XRE22.C=Replication master has already been booted for database ''{0}''

XRE23=Replication master cannot be started since unlogged operations are in progress, unfreeze to allow unlogged operations to complete and restart replication

XRE40=Could not perform operation because the database is not in replication slave mode.

XRE41.C=Replication operation ''failover'' or ''stopSlave'' refused on the slave database because the connection with the master is working. Issue the ''failover'' or ''stopMaster'' operation on the master database instead.

# Arguments:
#
#    {0} = dbname
#
XRE42.C=Replicated database ''{0}'' shutdown.

XRE43=Unexpected error when trying to stop replication slave mode. To stop replication slave mode, use operation ''stopSlave'' or ''failover''.

# Arguments:
#
#    {0} = conglomerateNumber
#
XSAI2.S=The conglomerate ({0}) requested does not exist.

XSAI3.S=Feature not implemented.

# Arguments:
#
#    {0} = interfaceName
#
XSAM0.S=Exception encountered while trying to boot module for ''{0}''.

# Arguments:
#
#    {0} = conglomID
#
XSAM2.S=There is no index or conglomerate with conglomerate id ''{0}'' to drop.

# Arguments:
#
#    {0} = conglomID
#
XSAM3.S=There is no index or conglomerate with conglomerate id ''{0}''.

# Arguments:
#
#    {0} = sortName
#
XSAM4.S=There is no sort called ''{0}''.

XSAM5.S=Scan must be opened and positioned by calling next() before making other calls.

# Arguments:
#
#    {0} = containerName
#    {1} = pageNumber
#    {2} = recordNumber
#
XSAM6.S=Record {2} on page {1} in container {0} not found.

XSAS0.S=A scan controller interface method was called which is not appropriate for a scan on a sort.

XSAS1.S=An attempt was made to fetch a row before the beginning of a sort or after the end of a sort.

XSAS3.S=The type of a row inserted into a sort does not match the sort''s template.

XSAS6.S=Could not acquire resources for sort.

XSAX0.S=XA protocol violation.

XSAX1.S=An attempt was made to start a global transaction with an Xid of an existing global transaction.

XSCB0.S=Could not create container.

# Arguments:
#
#    {0} = containerName
#
XSCB1.S=Container {0} not found.

# Arguments:
#
#    {0} = propertyName
#
XSCB2.S=The required property {0} not found in the property list given to createConglomerate() for a btree secondary index.

XSCB3.S=Unimplemented feature.

# Arguments:
#
#    {0} = number
#
XSCB4.S=A method on a btree open scan has been called prior to positioning the scan on the first row (i.e. no next() call has been made yet).  The current state of the scan is ({0}).

XSCB5.S=During logical undo of a btree insert or delete the row could not be found in the tree.

XSCB6.S=Limitation: Record of a btree secondary index cannot be updated or inserted due to lack of space on the page.  Use the parameters derby.storage.pageSize and/or derby.storage.pageReservedSpace to work around this limitation.

# Arguments:
#
#    {0} = trueOrFalse
#    {1} = trueOrFalse
#
XSCB7.S=An internal error was encountered during a btree scan - current_rh is null = {0}, position key is null = {1}.

# Arguments:
#
#    {0} = conglomerateNumber
#
XSCB8.S=The btree conglomerate {0} is closed.

XSCB9.S=Reserved for testing.

XSCG0.S=Could not create a template.

XSCH0.S=Could not create container.

# Arguments:
#
#    {0} = containerName
#
XSCH1.S=Container {0} not found.

XSCH4.S=Conglomerate could not be created.

# Arguments:
#
#    {0} = number
#    {1} = number
#
XSCH5.S=In a base table there was a mismatch between the requested column number {0} and the maximum number of columns {1}.

# Arguments:
#
#    {0} = containerID
#
XSCH6.S=The heap container with container id {0} is closed.

XSCH7.S=The scan is not positioned.

XSCH8.S=The feature is not implemented.

XSDA1.S=An attempt was made to access an out of range slot on a page

XSDA2.S=An attempt was made to update a deleted record

XSDA3.S=Limitation: Record cannot be updated or inserted due to lack of space on the page. Use the parameters derby.storage.pageSize and/or derby.storage.pageReservedSpace to work around this limitation.

XSDA4.S=An unexpected exception was thrown

XSDA5.S=An attempt was made to undelete a record that is not deleted

# Arguments:
#
#    {0} = columnName
#
XSDA6.S=Column {0} of row is null, it needs to be set to point to an object.

# Arguments:
#
#    {0} = className
#
XSDA7.S=Restore of a serializable or SQLData object of class {0}, attempted to read more data than was originally stored

# Arguments:
#
#    {0} = className
#
XSDA8.S=Exception during restore of a serializable or SQLData object of class {0}

# Arguments:
#
#    {0} = className
#
XSDA9.S=Class not found during restore of a serializable or SQLData object of class {0}

# Arguments:
#
#    {0} = timestamp
#
XSDAA.S=Illegal time stamp {0}, either time stamp is from a different page or of incompatible implementation

XSDAB.S=Cannot set a null time stamp.

XSDAC.S=Attempt to move either rows or pages from one container to another.

XSDAD.S=Attempt to move zero rows from one page to another.

XSDAE.S=Can only make a record handle for special record handle id.

XSDAF.S=Using special record handle as if it were a normal record handle.

XSDAG.S=The allocation nested top transaction cannot open the container.

# Arguments:
#
#    {0} = page
#
XSDAI.S=Page {0} being removed is already locked for deallocation.

XSDAJ.S=Exception during write of a serializable or SQLData object

# Arguments:
#
#    {0} = recordHandle
#
XSDAK.S=Wrong page is gotten for record handle {0}.

# Arguments:
#
#    {0} = recordHandle
#
XSDAL.S=Record handle {0} unexpectedly points to overflow page.

# Arguments:
#
#    {0} = className
#
XSDAM.S=Exception during restore of a SQLData object of class {0}. The specified class cannot be instantiated.

# Arguments:
#
#    {0} = className
#
XSDAN.S=Exception during restore of a SQLData object of class {0}. The specified class encountered an illegal access exception.

# Arguments:
#
#    {0} = pageNumber
#
XSDAO.S=Internal error: page {0} attempted latched twice.

# Arguments:
#
#    {0} = pageId
#    {1} = pageDump
#    {2} = slot
#    {3} = recordId
#    {4} = columnList
#    {5} = nextColumn
#    {6} = updateMode
#    {7} = nextPortionHandle
#
XSDAP.S=Unexpected no space error while attempting to update a row on page {0}. Values of internal fields at time of error are as follows: slot = {2}, recordId = {3}, newColumnList = {4}, nextColumn = {5}, mode = {6}, nextPortionHandle = {7}, page dump = {1}.

# Arguments:
#
#    {0} = page
#
XSDB0.D=Unexpected exception on in-memory page {0}

# Arguments:
#
#    {0} = page
#
XSDB1.D=Unknown page format at page {0}

# Arguments:
#
#    {0} = containerName
#    {1} = number
#
XSDB2.D=Unknown container format at container {0} : {1}

# Arguments:
#
#    {0} = number
#    {1} = number
#
XSDB3.D=Container information cannot change once written: was {0}, now {1}

# Arguments:
#
#    {0} = page
#    {1} = versionNumber
#    {2} = versionNumber
#
XSDB4.D=Page {0} is at version {1}, the log file contains change version {2}, either there are log records of this page missing, or this page did not get written out to disk properly.

# Arguments:
#
#    {0} = page
#
XSDB5.D=Log has change record on page {0}, which is beyond the end of the container.

# Arguments:
#
#    {0} = databaseName
#
XSDB6.D=Another instance of Derby may have already booted the database {0}.

# Arguments:
#
#    {0} = derbyInstanceID
#    {1} = databaseName
#    {2} = derbyInstanceID
#
XSDB7.D=Warning: Derby (instance {0}) is attempting to boot the database {1} even though Derby (instance {2}) may still be active.  Only one instance of Derby should boot a database at a time. Severe and non-recoverable corruption can result and may have already occurred.

# Arguments:
#
#    {0} = derbyInstanceID
#    {1} = databaseName
#    {2} = derbyInstanceID
#
XSDB8.D=Warning: Derby (instance {0}) is attempting to boot the database {1} even though Derby (instance {2}) may still be active.  Only one instance of Derby should boot a database at a time. Severe and non-recoverable corruption can result if 2 instances of Derby boot on the same database at the same time.  The derby.database.forceDatabaseLock=true property has been set, so the database will not boot until the db.lck is no longer present.  Normally this file is removed when the first instance of Derby to boot on the database exits, but it may be left behind in some shutdowns.  It will be necessary to remove the file by hand in that case.  It is important to verify that no other VM is accessing the database before deleting the db.lck file by hand.

# Arguments:
#
#    {0} = containerName
#
XSDB9.D=Stream container {0} is corrupt.

# Arguments:
#
#    {0} = object
#
XSDBA.D=Attempt to allocate object {0} failed.

# Arguments:
#
#    {0} = page
#    {1} = hexDump
#
XSDBB.D=Unknown page format at page {0}, page dump follows: {1} 

# Arguments:
#
#    {0} = container
#
XSDBC.D=Write of container information to page 0 of container {0} failed.  See nested error for more information.  

# Arguments:
#
#    {0} = fileName
#
XSDF0.S=Could not create file {0} as it already exists.

# Arguments:
#
#    {0} = fileName
#
XSDF1.S=Exception during creation of file {0} for container

# Arguments:
#
#    {0} = fileName
#    {1} = exceptionText
#
XSDF2.S=Exception during creation of file {0} for container, file could not be removed.  The exception was: {1}.

# Arguments:
#
#    {0} = segmentName
#
XSDF3.S=Cannot create segment {0}.

# Arguments:
#
#    {0} = fileName
#    {1} = detailedException
#
XSDF4.S=Exception during remove of file {0} for dropped container, file could not be removed {1}.

# Arguments:
#
#    {0} = page
#
XSDF6.S=Cannot find the allocation page {0}.

# Arguments:
#
#    {0} = pageKey
#
XSDF7.S=Newly created page failed to be latched {0}

# Arguments:
#
#    {0} = page
#
XSDF8.S=Cannot find page {0} to reuse.

XSDFB.S=Operation not supported by a read only database

# Arguments:
#
#    {0} = page
#    {1} = hexDump
#    {2} = hexDump
#
XSDFD.S=Different page image read on 2 I/Os on Page {0}, first image has incorrect checksum, second image has correct checksum. Page images follows: {1} {2}

XSDFF.S=The requested operation failed due to an unexpected exception.

# Arguments:
#
#    {0} = fileName
#
XSDFH.S=Cannot backup the database, got an I/O Exception while writing to the backup container file {0}.

# Arguments:
#
#    {0} = page
#
XSDFI.S=Error encountered while trying to write data to disk during database recovery.  Check that the database disk is not full. If it is then delete unnecessary files, and retry connecting to the database.  It is also possible that the file system is read only, or the disk has failed, or some other problem with the media.  System encountered error while processing page {0}.

# Arguments:
#
#    {0} = fileName
#
XSDFJ.S=Error encountered while trying to remove database file {0}, as part of encrypting or decrypting database files. Incorrect file or directory ownership or permissions could cause remove of the file to fail.  Processes not controlled by Derby like backup or virus checkers could also be responsible.

# Arguments:
#
#    {0} = fileName
#
XSDFK.S=Error encountered while trying to remove a jar file {0} stored in the database. Incorrect file or directory ownership or permissions could cause remove of the file to fail.  Processes not controlled by Derby like backup or virus checkers could also be responsible.

# Arguments:
#
#    {0} = page
#
XSDG0.D=Page {0} could not be read from disk.

# Arguments:
#
#    {0} = page
#
XSDG1.D=Page {0} could not be written to disk, please check if the disk is full, or if a file system limit, such as a quota or a maximum file size, has been reached.

# Arguments:
#
#    {0} = page
#    {1} = number
#    {2} = number
#    {3} = hexDump
#
XSDG2.D=Invalid checksum on Page {0}, expected={1}, on-disk version={2}, page dump follows: {3}

# Arguments:
#
#    {0} = containerName
#    {1} = type
#    {2} = file
#
XSDG3.D=Meta-data for {0} could not be accessed to {1} {2}

XSDG5.D=Database is not in create mode when createFinished is called.

# Arguments:
#
#    {0} = directoryPath
#
XSDG6.D=Data segment directory not found in {0} backup during restore. Please make sure that backup copy is the right one and it is not corrupted.

# Arguments:
#
#    {0} = directoryName
#
XSDG7.D=Directory {0} could not be removed during restore. Please make sure that permissions are correct.

# Arguments:
#
#    {0} = directoryName
#    {1} = directoryName
#
XSDG8.D=Unable to copy directory ''{0}'' to ''{1}'' during restore. Please make sure that there is enough space and permissions are correct. 

XSDG9.D=Derby thread received an interrupt during a disk I/O operation, please check your application for the source of the interrupt.

# Arguments:
#
#    {0} = filePath
#
XSLA0.D=Cannot flush the log file to disk {0}.

# Arguments:
#
#    {0} = object
#
XSLA1.D=Log Record has been sent to the stream, but it cannot be applied to the store (Object {0}).  This may cause recovery problems also.

XSLA2.D=System will shutdown, got I/O Exception while accessing log file.

XSLA3.D=Log Corrupted, has invalid data in the log stream.

XSLA4.D=Error encountered when attempting to write the transaction recovery log. Most likely the disk holding the recovery log is full. If the disk is full, the only way to proceed is to free up space on the disk by either expanding it or deleting files not related to Derby. It is also possible that the file system and/or disk where the Derby transaction log resides is read-only. The error can also be encountered if the disk or file system has failed.

# Arguments:
#
#    {0} = transactionID
#
XSLA5.D=Cannot read log stream for some reason to rollback transaction {0}.

XSLA6.D=Cannot recover the database.

# Arguments:
#
#    {0} = operation
#
XSLA7.D=Cannot redo operation {0} in the log.

# Arguments:
#
#    {0} = transactionID
#    {1} = undoableOperation
#    {2} = compensationOperation
#
XSLA8.D=Cannot rollback transaction {0}, trying to compensate {1} operation with {2}

XSLAA.D=The store has been marked for shutdown by an earlier exception.

# Arguments:
#
#    {0} = logfileName
#
XSLAB.D=Cannot find log file {0}, please make sure your logDevice property is properly set with the correct path separator for your platform.

# Arguments:
#
#    {0} = directoryPath
#
XSLAC.D=Database at {0} has a format incompatible with the current version of software. It may have been created by or upgraded by a later version.

# Arguments:
#
#    {0} = length
#    {1} = length
#    {2} = logInstant
#    {3} = logfileName
#
XSLAD.D=Log Record at instant {2} in log file {3} corrupted. Expected log record length {0}, real length {1}.

# Arguments:
#
#    {0} = fileName
#
XSLAE.D=Control file at {0} cannot be written or updated.

XSLAF.D=A Read Only database was created with dirty data buffers.

XSLAH.D=A Read Only database is being updated.

XSLAI.D=Cannot log the checkpoint log record

XSLAJ.D=The logging system has been marked to shut down due to an earlier problem and will not allow any more operations until the system shuts down and restarts.

# Arguments:
#
#    {0} = number
#
XSLAK.D=Database has exceeded largest log file number {0}.

# Arguments:
#
#    {0} = logfileName
#    {1} = position
#    {2} = size
#    {3} = size
#
XSLAL.D=Log record size {2} exceeded the maximum allowable log file size {3}. Error encountered in log file {0}, position {1}.

# Arguments:
#
#    {0} = exceptionDetails
#    {1} = directoryPath
#
XSLAM.D=Cannot verify database format at {1} due to IOException: {0}

# Arguments:
#
#    {0} = directoryPath
#    {1} = versionNumber
#
XSLAN.D=Database at {0} has an incompatible format with the current version of the software.  The database was created by or upgraded by version {1}.

# Arguments:
#
#    {0} = detailedMessage
#
XSLAO.D=Recovery failed unexpected problem: {0}.

# Arguments:
#
#    {0} = directoryPath
#    {1} = versionNumber
#
XSLAP.D=Database at {0} is at version {1}. Beta databases cannot be upgraded.

# Arguments:
#
#    {0} = directoryName
#
XSLAQ.D=Cannot create log file at directory {0}.

# Arguments:
#
#    {0} = logfileName
#    {1} = logFileName
#
XSLAR.D=Unable to copy log file ''{0}'' to ''{1}'' during restore. Please make sure that there is enough space and permissions are correct. 

# Arguments:
#
#    {0} = directoryName
#
XSLAS.D=Log directory {0} not found in backup during restore. Please make sure that backup copy is the correct one and it is not corrupted.

# Arguments:
#
#    {0} = directoryName
#
XSLAT.D=The log directory ''{0}'' exists. The directory might belong to another database. Check that the location specified for the logDevice attribute is correct.

# Arguments:
#
#    {0} = logOperation
#
XSLB1.S=Log operation {0} encounters error writing itself out to the log stream, this could be caused by an errant log operation or internal log buffer full due to excessively large log operation.

# Arguments:
#
#    {0} = logOperation
#
XSLB2.S=Log operation {0} logging excessive data, it filled up the internal log buffer.

# Arguments:
#
#    {0} = logInstant
#    {1} = truncationPoint
#    {2} = logInstant
#    {3} = logInstant
#
XSLB5.S=Illegal truncationLWM instant {1} for truncation point {0}. Legal range is from {2} to {3}.

XSLB6.S=Trying to log a 0 or -ve length log Record.

# Arguments:
#
#    {0} = logInstant
#    {1} = logInstant
#
XSLB8.S=Trying to reset a scan to {0}, beyond its limit of {1}.

XSLB9.S=Cannot issue any more change, log factory has been stopped.

XSRS0.S=Cannot freeze the database after it is already frozen.

# Arguments:
#
#    {0} = directoryPath
#
XSRS1.S=Cannot backup the database to {0}, which is not a directory.

# Arguments:
#
#    {0} = fileName
#    {1} = fileName
#
XSRS4.S=Error renaming file (during backup) from {0} to {1}.

# Arguments:
#
#    {0} = path
#    {1} = path
#
XSRS5.S=Error copying file (during backup) from {0} to {1}.

# Arguments:
#
#    {0} = directoryName
#
XSRS6.S=Cannot create backup directory {0}.

XSRS7.S=Backup caught unexpected exception.

XSRS8.S=Log Device can only be set during database creation time, it cannot be changed on the fly.

# Arguments:
#
#    {0} = recordName
#
XSRS9.S=Record {0} no longer exists

XSRSA.S=Cannot backup the database when unlogged operations are uncommitted. Please commit the transactions with backup blocking operations. 

XSRSB.S=Backup cannot be performed in a transaction with uncommitted unlogged operations.

# Arguments:
#
#    {0} = directoryLocation
#
XSRSC.S=Cannot backup the database to {0}, it is a database directory.

XSTA2.S=A transaction was already active, when attempt was made to make another transaction active.

XSTB0.M=An exception was thrown during transaction abort.

XSTB2.M=Cannot log transaction changes, maybe trying to write to a read only database.

XSTB3.M=Cannot abort transaction because the log manager is null, probably due to an earlier error.

XSTB5.M=Creating database with logging disabled encountered unexpected problem.

XSTB6.M=Cannot substitute a transaction table with another while one is already in use.

XXXXX.C.6=Normal database session close.

02000=No row was found for FETCH, UPDATE or DELETE; or the result of a query is an empty table.

# Arguments:
#
#    {0} = operatorName
#    {1} = detailedError
#
10000=Encountered error while evaluating XML query expression for {0} operator: {1}

42Z00.U=Java method call or field reference

42Z01.U=Untyped

# Arguments:
#
#    {0} = javaClassName
#
42Z10=The Java class bound to a user defined type may not be a class used internally by Derby: ''{0}''.

# Arguments:
#
#    {0} = dataType
#
42Z12.U=Internal error: Invalid attempt to access a {0} as a stream

# Translators: This is part of query plan printout; the string is complete as is.
#
42Z30.U=time spent in this ResultSet =

# Translators: This is part of query plan printout; the string is complete as is.
#
42Z31.U=time spent in this ResultSet and below =

# Translators: This is part of query plan printout; the string is complete as is.
#
42Z32.U=total time breakdown: 

# Translators: This is part of query plan printout; the string is complete as is.
#
42Z33.U=constructor time (milliseconds) =

# Translators: This is part of query plan printout; the string is complete as is.
#
42Z34.U=open time (milliseconds) =

# Translators: This is part of query plan printout; the string is complete as is.
#
42Z35.U=next time (milliseconds) =

# Translators: This is part of query plan printout; the string is complete as is.
#
42Z36.U=close time (milliseconds) =

# Translators: This is part of query plan printout; the string is complete as is.
# This is a start or stop position for a scan.
#
42Z37.U=None

# Translators: This is part of query plan printout; the string is complete as is.
#
42Z38.U=Positioning information not available because this ResultSet was never opened.

# Translators: This is part of query plan printout; the string is complete as is.
#
# Arguments:
#
#    {0} = exceptionMessage
#
42Z39.U=Unexpected exception {0} getting positioner.

# Translators: This is part of query plan printout; the string is complete as is.
#
# Arguments:
#
#    {0} = searchOperator
#    {1} = number
#
42Z40.U={0} on first {1} column(s).

# Translators: This is part of query plan printout; the string is complete as is.
#
42Z41.U=Ordered null semantics on the following columns: 

# Translators: This is part of query plan printout; the string is complete as is.
#
42Z42.U=Column Id

# Translators: This is part of query plan printout; the string is complete as is.
#
42Z43.U=Operator

# Translators: This is part of query plan printout; the string is complete as is.
#
42Z44.U=Ordered nulls

# Translators: This is part of query plan printout; the string is complete as is.
#
42Z45.U=Unknown return value

# Translators: This is part of query plan printout; the string is complete as is.
#
42Z46.U=Negate comparison result

# Arguments:
#
#    {0} = className
#
42Z47.U=Getting the query plan as a String is not currently supported for {0}

# Translators: This is part of query plan printout; the string is complete as is.
#
# Arguments:
#
#    {0} = term
#    {1} = columnNumber
#
42Z48.U=Column[{0}][{1}] Id

42Z54.U=This exception stops the statement after parsing - no further processing is needed.

42Z55.U=Execution stopped after parsing by StopAfterParsing debug flag.

42Z56.U=Execution stopped after binding by StopAfterBinding debug flag.

42Z57.U=Execution stopped after optimizing by StopAfterOptimizing debug flag.

42Z58.U=Execution stopped after generating by StopAfterGenerating debug flag.

# A transaction isolation level. See http://en.wikipedia.org/wiki/Isolation_%28database_systems%29
# Translators: This is part of query plan printout; the string is complete as is.
#
42Z80.U=serializable

# A transaction isolation level. See http://en.wikipedia.org/wiki/Isolation_%28database_systems%29
# Translators: This is part of query plan printout; the string is complete as is.
#
42Z81.U=read committed

# A lock mode.
# Translators: This is part of query plan printout; the string is complete as is.
# This is shorthand for "exclusive lock".
#
42Z82.U=exclusive

# A lock mode.
# Translators: This is part of query plan printout; the string is complete as is.
#
42Z83.U=instantaneous share

# A lock mode.
# Translators: This is part of query plan printout; the string is complete as is.
#
42Z84.U=share

# A lock granularity.
# Translators: This is part of query plan printout; the string is complete as is.
#
42Z85.U=table

# A lock granularity.
# Translators: This is part of query plan printout; the string is complete as is.
#
42Z86.U=row

# Lock mode and granularity.
# Translators: This is part of query plan printout; the string is complete as is.
#
42Z87.U=share table

# Lock mode and granularity.
# Translators: This is part of query plan printout; the string is complete as is.
#
42Z88.U=share row

# Translators: This is part of query plan printout; the string is complete as is.
#
43X00.U=Attached to

# Translators: This is part of query plan printout; the string is complete as is.
#
43X01.U=Begin Subquery Number

# Translators: This is part of query plan printout; the string is complete as is.
#
43X02.U=Any ResultSet

# Translators: This is part of query plan printout; the string is complete as is.
#
43X03.U=Number of opens

# Translators: This is part of query plan printout; the string is complete as is.
#
43X04.U=Rows seen

# Translators: This is part of query plan printout; the string is complete as is.
#
43X05.U=Source result set

# Translators: This is part of query plan printout; the string is complete as is.
#
43X06.U=End Subquery Number

# Translators: This is part of query plan printout; the string is complete as is.
#
# Arguments:
#
#    {0} = number
#
43X07.U=optimizer estimated row count: {0,number,###########0.00}

# Translators: This is part of query plan printout; the string is complete as is.
#
# Arguments:
#
#    {0} = number
#
43X08.U=optimizer estimated cost: {0,number,###########0.00}

# Translators: This is part of query plan printout; the string is complete as is.
#
43X09.U=seconds

# Translators: This is part of query plan printout; the string is complete as is.
#
43X11.U=Node

# Arguments:
#
#    {0} = methodName
#    {1} = className
#
43X12.U={0} not currently implemented for {1}

# Translators: This is part of query plan printout; the string is complete as is.
#
43X13.U=Delete ResultSet using

# Lock granularity.
# Translators: This is part of query plan printout; the string is complete as is.
#
43X14.U=table locking

# Lock granularity.
# Translators: This is part of query plan printout; the string is complete as is.
#
43X15.U=row locking

# Translators: This is part of query plan printout; the string is complete as is.
# This is shorthand for "deferred update".
#
43X16.U=deferred

# Translators: This is part of query plan printout; the string is complete as is.
#
43X17.U=Rows deleted

# Translators: This is part of query plan printout; the string is complete as is.
#
43X18.U=Indexes updated

43X19.U=Delete

# Translators: This is part of query plan printout; the string is complete as is.
#
43X20.U=Distinct Scalar Aggregate ResultSet

# Translators: This is part of query plan printout; the string is complete as is.
#
43X21.U=Rows input

# Translators: This is part of query plan printout; the string is complete as is.
#
43X22.U=Distinct Scalar Aggregate

# Translators: This is part of query plan printout; the string is complete as is.
#
# Arguments:
#
#    {0} = tableName
#    {1} = constraintOrIndex
#    {2} = constraintOrIndexName
#
43X23.U=Distinct Scan ResultSet for {0} using {1} {2}

# Translators: This is part of query plan printout; the string is complete as is.
#
# Arguments:
#
#    {0} = tableName
#
43X26.U=Distinct Scan ResultSet for {0}

# Translators: This is part of query plan printout; the string is complete as is.
#
# Arguments:
#
#    {0} = isolationLevel
#    {1} = lockString
#
43X27.U=at {0} isolation level using {1} locking

# Translators: This is part of query plan printout; the string is complete as is.
#
43X28.U=scan information

# Translators: This is part of query plan printout; the string is complete as is.
#
43X29.U=Distinct column is column number

# Translators: This is part of query plan printout; the string is complete as is.
#
43X30.U=Distinct columns are column numbers

# Translators: This is part of query plan printout; the string is complete as is.
#
43X31.U=Hash table size

# Translators: This is part of query plan printout; the string is complete as is.
#
43X32.U=Rows filtered

# Translators: This is part of query plan printout; the string is complete as is.
#
43X33.U=next time in milliseconds/row

# Translators: This is part of query plan printout; the string is complete as is.
#
43X34.U=start position

# Translators: This is part of query plan printout; the string is complete as is.
#
43X35.U=stop position

# Translators: This is part of query plan printout; the string is complete as is.
#
43X36.U=scan qualifiers

# Translators: This is part of query plan printout; the string is complete as is.
#
43X37.U=next qualifiers

# Translators: This is part of query plan printout; the string is complete as is.
#
# Arguments:
#
#    {0} = tableName
#    {1} = indexName
#
43X38.U=on {0} using {1}

# Translators: This is part of query plan printout; the string is complete as is.
#
43X39.U=Distinct Scan

# Translators: This is part of query plan printout; the string is complete as is.
#
43X40.U=Sort information

# Translators: This is part of query plan printout; the string is complete as is.
#
43X41.U=Grouped Aggregate ResultSet

# Translators: This is part of query plan printout; the string is complete as is.
#
43X42.U=Has distinct aggregate

# Translators: This is part of query plan printout; the string is complete as is.
#
43X43.U=In sorted order

# Translators: This is part of query plan printout; the string is complete as is.
#
43X44.U=Grouped Aggregate

# Translators: This is part of query plan printout; the string is complete as is.
#
43X45.U=Hash Exists Join

# Translators: This is part of query plan printout; the string is complete as is.
#
43X46.U=Hash Exists Join ResultSet

# Translators: This is part of query plan printout; the string is complete as is.
#
43X47.U=Hash Join

# Translators: This is part of query plan printout; the string is complete as is.
#
43X48.U=Hash Join ResultSet

# Translators: This is part of query plan printout; the string is complete as is.
#
43X49.U=Hash Left Outer Join

# Translators: This is part of query plan printout; the string is complete as is.
#
43X50.U=Hash Left Outer Join ResultSet

# Translators: This is part of query plan printout; the string is complete as is.
#
# Arguments:
#
#    {0} = tableName
#    {1} = constraintOrIndex
#    {2} = constraintOrIndexName
#
43X51.U=Hash Scan ResultSet for {0} using {1} {2}

# Translators: This is part of query plan printout; the string is complete as is.
#
# Arguments:
#
#    {0} = tableName
#
43X52.U=Hash Scan ResultSet for {0}

# Translators: This is part of query plan printout; the string is complete as is.
#
43X53.U=Hash key is column number

# Translators: This is part of query plan printout; the string is complete as is.
#
43X54.U=Hash keys are column numbers

# Translators: This is part of query plan printout; the string is complete as is.
#
43X55.U=Hash Scan

# Translators: This is part of query plan printout; the string is complete as is.
#
43X56.U=Attached subqueries

# Translators: This is part of query plan printout; the string is complete as is.
#
43X57.U=Hash Table ResultSet

# Translators: This is part of query plan printout; the string is complete as is.
#
43X58.U=Hash Table

# Translators: This is part of query plan printout; the string is complete as is.
# Shorthand for "all columns".
#
43X59.U=all

# Translators: This is part of query plan printout; the string is complete as is.
#
# Arguments:
#
#    {0} = tableName
#
43X60.U=Index Row to Base Row ResultSet for {0}

# Translators: This is part of query plan printout; the string is complete as is.
#
43X61.U=Columns accessed from heap

# Translators: This is part of query plan printout; the string is complete as is.
#
# Arguments:
#
#    {0} = tableName
#
43X62.U=for {0}

# Translators: This is part of query plan printout; the string is complete as is.
#
43X63.U=Index Row to Base Row

# Translators: This is part of query plan printout; the string is complete as is.
#
43X64.U=insert mode: bulk insert

# Translators: This is part of query plan printout; the string is complete as is.
#
43X65.U=insert mode: normal (unable to perform bulk insert due to non-empty table)

# Translators: This is part of query plan printout; the string is complete as is.
#
43X66.U=insert mode: normal

# Translators: This is part of query plan printout; the string is complete as is.
#
43X67.U=Insert ResultSet using

# Translators: This is part of query plan printout; the string is complete as is.
#
43X68.U=Rows inserted

# Translators: This is part of query plan printout; the string is complete as is.
#
43X69.U=Insert

# Translators: This is part of query plan printout; the string is complete as is.
#
43X70.U=Join

# Translators: This is part of query plan printout; the string is complete as is.
#
# Arguments:
#
#    {0} = tableName
#    {1} = indexName
#
43X71.U=Last Key Index Scan ResultSet for {0} using index {1}

# Translators: This is part of query plan printout; the string is complete as is.
#
# Arguments:
#
#    {0} = isolationLevel
#    {1} = lockString
#
43X72.U=at {0} isolation level using {1} locking chosen by the optimizer

# Translators: This is part of query plan printout; the string is complete as is.
#
43X73.U=Table Scan

# Translators: This is part of query plan printout; the string is complete as is.
#
43X74.U=Index Scan

# Translators: This is part of query plan printout; the string is complete as is.
#
# Arguments:
#
#    {0} = tableName
#
43X75.U=on {0}

# Translators: This is part of query plan printout; the string is complete as is.
#
43X76.U=Materialized ResultSet

# Translators: This is part of query plan printout; the string is complete as is.
#
43X77.U=temporary conglomerate creation time (milliseconds)

# Translators: This is part of query plan printout; the string is complete as is.
#
43X78.U=temporary conglomerate fetching time (milliseconds)

# Translators: This is part of query plan printout; the string is complete as is.
#
43X79.U=Rows seen from the left

# Translators: This is part of query plan printout; the string is complete as is.
#
43X80.U=Rows seen from the right

# Translators: This is part of query plan printout; the string is complete as is.
#
43X81.U=Rows returned

# Translators: This is part of query plan printout; the string is complete as is.
#
43X82.U=Left result set

# Translators: This is part of query plan printout; the string is complete as is.
#
43X83.U=Right result set

# Translators: This is part of query plan printout; the string is complete as is.
#
43X84.U=Nested Loop Exists Join

# Translators: This is part of query plan printout; the string is complete as is.
#
43X85.U=Nested Loop Exists Join ResultSet

# Translators: This is part of query plan printout; the string is complete as is.
#
43X86.U=Nested Loop Join

# Translators: This is part of query plan printout; the string is complete as is.
#
43X87.U=Nested Loop Join ResultSet

# Translators: This is part of query plan printout; the string is complete as is.
#
43X88.U=Empty right rows returned

# Translators: This is part of query plan printout; the string is complete as is.
#
43X89.U=Nested Loop Left Outer Join

# Translators: This is part of query plan printout; the string is complete as is.
#
43X90.U=Nested Loop Left Outer Join ResultSet

# Translators: This is part of query plan printout; the string is complete as is.
#
43X91.U=Normalize ResultSet

# Translators: This is part of query plan printout; the string is complete as is.
#
43X92.U=Once ResultSet

# Translators: This is part of query plan printout; the string is complete as is.
#
43X93.U=Project-Restrict ResultSet

# Translators: This is part of query plan printout; the string is complete as is.
#
43X94.U=restriction

# Translators: This is part of query plan printout; the string is complete as is.
#
43X95.U=projection

# Translators: This is part of query plan printout; the string is complete as is.
#
43X96.U=restriction time (milliseconds)

# Translators: This is part of query plan printout; the string is complete as is.
#
43X97.U=projection time (milliseconds)

# Translators: This is part of query plan printout; the string is complete as is.
#
43X98.U=Project Restrict

# Translators: This is part of query plan printout; the string is complete as is.
#
43X99.U=Row ResultSet

# Translators: This is part of query plan printout; the string is complete as is.
#
43X9A.U=Row Count ResultSet

# Translators: This is part of query plan printout; the string is complete as is.
#
43X9B.U=Row Count

# Translators: This is part of query plan printout; the string is complete as is.
#
43X9C.U=Window ResultSet: 

# Translators: This is part of query plan printout; the string is complete as is.
#
43Y00.U=Scalar Aggregate ResultSet

# Translators: This is part of query plan printout; the string is complete as is.
#
43Y01.U=Index Key Optimization

# Translators: This is part of query plan printout; the string is complete as is.
#
43Y02.U=Scalar Aggregate

# Translators: This is part of query plan printout; the string is complete as is.
#
43Y03.U=Scroll Insensitive ResultSet

# Translators: This is part of query plan printout; the string is complete as is.
#
43Y04.U=Number of reads from hash table

# Translators: This is part of query plan printout; the string is complete as is.
#
43Y05.U=Number of writes to hash table

# Translators: This is part of query plan printout; the string is complete as is.
#
43Y06.U=Sort ResultSet

# Translators: This is part of query plan printout; the string is complete as is.
#
43Y07.U=Eliminate duplicates

# Translators: This is part of query plan printout; the string is complete as is.
#
43Y08.U=Sort

# Translators: This is part of query plan printout; the string is complete as is.
#
# Arguments:
#
#    {0} = tableName
#    {1} = constraintOrIndex
#    {2} = constraintOrIndexName
#
43Y09.U=Index Scan ResultSet for {0} using {1} {2}

# Translators: This is part of query plan printout; the string is complete as is.
#
# Arguments:
#
#    {0} = tableName
#
43Y10.U=Table Scan ResultSet for {0}

# Translators: This is part of query plan printout; the string is complete as is.
#
43Y11.U=Actual locking used: table level locking.

# Translators: This is part of query plan printout; the string is complete as is.
#
43Y12.U=Fetch Size

# Translators: This is part of query plan printout; the string is complete as is.
#
43Y13.U=qualifiers

# Translators: This is part of query plan printout; the string is complete as is.
#
43Y14.U=Union ResultSet

# Translators: This is part of query plan printout; the string is complete as is.
#
# Arguments:
#
#    {0} = tableOrRow
#
43Y16.U=Update ResultSet using {0} locking

# Translators: This is part of query plan printout; the string is complete as is.
#
43Y17.U=Rows updated

# Translators: This is part of query plan printout; the string is complete as is.
#
# Arguments:
#
#    {0} = javaClassName
#
43Y19.U=VTI ResultSet for {0}

# Translators: This is part of query plan printout; the string is complete as is.
#
43Y20.U=VTI

# Translators: This is part of query plan printout; the string is complete as is.
#
43Y21.U=Materialized subqueries

# Translators: This is part of query plan printout; the string is complete as is.
#
43Y22.U=Statement Name

# Translators: This is part of query plan printout; the string is complete as is.
#
43Y23.U=Statement Text

# Translators: This is part of query plan printout; the string is complete as is.
#
43Y24.U=Parse Time

# Translators: This is part of query plan printout; the string is complete as is.
#
43Y25.U=Bind Time

# Translators: This is part of query plan printout; the string is complete as is.
#
43Y26.U=Optimize Time

# Translators: This is part of query plan printout; the string is complete as is.
#
43Y27.U=Generate Time

# Translators: This is part of query plan printout; the string is complete as is.
#
43Y28.U=Compile Time

# Translators: This is part of query plan printout; the string is complete as is.
#
43Y29.U=Execute Time

# Translators: This is part of query plan printout; the string is complete as is.
#
43Y30.U=Begin Compilation Timestamp

# Translators: This is part of query plan printout; the string is complete as is.
#
43Y31.U=End Compilation Timestamp

# Translators: This is part of query plan printout; the string is complete as is.
#
43Y32.U=Begin Execution Timestamp

# Translators: This is part of query plan printout; the string is complete as is.
#
43Y33.U=End Execution Timestamp

# Translators: This is part of query plan printout; the string is complete as is.
#
43Y44.U=Statement Execution Plan Text

# Translators: This is part of query plan printout; the string is complete as is.
#
# Arguments:
#
#    {0} = number
#
43Y45.U=Run Time 100%, {0} seconds

43Y46.U=Insert VTI ResultSet

43Y47.U=Delete VTI ResultSet

43Y49.U=Insert VTI

43Y50.U=Delete VTI

# Translators: This is part of query plan printout; the string is complete as is.
#
43Y51.U=Delete Cascade ResultSet

# Translators: This is part of query plan printout; the string is complete as is.
#
43Y52.U=Delete Cascade ResultSet using

# Translators: This is part of query plan printout; the string is complete as is.
#
43Y53.U=Referential Actions On Dependent Tables

# Translators: This is part of query plan printout; the string is complete as is.
#
43Y54.U=Begin Referential Action On Dependent Table Number

# Translators: This is part of query plan printout; the string is complete as is.
#
43Y55.U=End Referential Action On Dependent Table Number

# Translators: This is part of query plan printout; the string is complete as is.
#
# Arguments:
#
#    {0} = tableName
#    {1} = userSuppliedOptimizerOverrides
#
43Y56.U=User supplied optimizer overrides on {0} are {1}

# Translators: This is part of query plan printout; the string is complete as is.
#
# Arguments:
#
#    {0} = userSuppliedOptimizerOverrides
#
43Y57.U=User supplied optimizer overrides for join are {0}

44X00.U=SQL Type Name

# Arguments:
#
#    {0} = url
#
46001=Exception while accessing jar file using URL ''{0}''.

46J01=Java method signature has invalid format.

# Arguments:
#
#    {0} = number
#    {1} = number
#
46J02=Java method signature contains incorrect number ({0}) of parameters, expected {1}.

# Arguments:
#
#    {0} = prefix
#
54002=A string constant starting with ''{0}'' is too long.

54004=SELECT statement has too many items in GROUP BY, ORDER BY or SELECT list.

# Arguments:
#
#    {0} = operator
#    {1} = number
#
54006=The length resulting from {0} operation is greater than {1}.

54008=The CREATE INDEX statement specifies too many columns (16 is the maximum).

# Arguments:
#
#    {0} = number
#    {1} = tableOrViewName
#    {2} = number
#
54011=Too many columns ({0}) were specified for  table or view {1}. The limit is {2}.

54038=Maximum depth of nested triggers was exceeded.

BIN01=(Binary data value not displayed)

# Arguments:
#
#    {0} = columnName
#
S0022=Column ''{0}'' not found.

# Arguments:
#
#    {0} = errorMessage
#    {1} = exceptionClassName
#
XJ001.U=Java exception: ''{1}: {0}''.

# Arguments:
#
#    {0} = oldVersion
#    {1} = newVersion
#
XJ050.U=Database requires upgrade from version {0}, set the attribute ''upgrade=true'' on the JDBC connection URL to allow upgrade to version {1}.

XJ082.U=BLOB/CLOB values are not allowed as method parameters or receiver.

# Arguments:
#
#    {0} = operation
#
XJ083.U=''{0}'' not allowed because the ResultSet is not an updatable ResultSet. 

# Arguments:
#
#    {0} = methodName
#
XJ084.U=Column does not correspond to a column in the base table. Cannot issue ''{0}'' on this column.

# Arguments:
#
#    {0} = xmlPackageName
#
XML00=Failed to locate ''{0}'' API or implementation classes.  XML operations are not permitted unless these classes are in your classpath.

# Arguments:
#
#    {0} = errorMessage
#
XML01=Encountered unexpected error while processing XML: {0}

XN002.U=SECTKN was not returned.

XSAJ0.U=Scan type

XSAJ1.U=Number of pages visited

XSAJ2.U=Number of rows visited

XSAJ3.U=Number of deleted rows visited

XSAJ4.U=Number of rows qualified

XSAJ5.U=Number of columns fetched

XSAJ6.U=Bit set of columns fetched

XSAJ7.U=Tree height

XSAJ8.U=Sort type

XSAJA.U=Number of rows input

XSAJB.U=Number of rows output

XSAJC.U=Number of merge runs

XSAJD.U=Size of merge runs

XSAJE.U=All

# This is a type of conglomerate.
#
XSAJF.U=btree

# This is a type of conglomerate.
#
XSAJG.U=heap

XSAJH.U=sort

# This is a type of sort.
#
XSAJI.U=external

# This is a type of sort.
#
XSAJJ.U=internal

A001=Fatal: There is no Authentication Service for the system

A002=Fatal: There is no Authentication Service for the database

# Arguments:
#
#    {0} = propertyName
#
A011=Warning: No LDAP Server/Host name mentioned in {0} property; assuming localhost:389

A020=Invalid authentication.

# Arguments:
#
#    {0} = className
#    {1} = fileName
#    {2} = errorMessage
#
C000=Wrote class {0} to file {1}. Please provide support with the file and the following exception information: {2}

# Arguments:
#
#    {0} = className
#    {1} = jarName
#
C001=Class {0} has an unknown certificate type in jar {1}, expecting X509 certificate.

# Arguments:
#
#    {0} = className
#    {1} = jarName
#    {2} = errorMessage
#
C002=Security exception thrown accessing class {0} in jar {1} : {2}

# Arguments:
#
#    {0} = jarName
#    {1} = errorMessage
#
C003=Exception loading database jar {0} - {1}

# Arguments:
#
#    {0} = className
#
C004=Stale class loader for class {0}

# Arguments:
#
#    {0} = classpath
#
C005=Database Class Loader started - derby.database.classpath=''{0}''

# Arguments:
#
#    {0} = className
#    {1} = jarName
#
C006=Loaded {0} from database jar {1}

# Arguments:
#
#    {0} = className
#    {1} = jarName
#    {2} = detailedError
#
C007=Exception loading class {0} from jar {1} - {2}

# Arguments:
#
#    {0} = className
#    {1} = detailedError
#
C008=Exception loading class {0}: {1}

# Arguments:
#
#    {0} = derbyVersion
#    {1} = id
#    {2} = directoryName
#    {3} = classloader
#    {4} = JarClassPath
#
D000=:\nBooting Derby (version {0}) instance {1} \non database directory {2} in READ ONLY mode with class loader {3}. \nLoaded from {4}.

# Arguments:
#
#    {0} = derbyVersion
#    {1} = id
#    {2} = directoryName
#    {3} = classloader
#    {4} = JarClassPath
#
D001=:\nBooting Derby version {0}: instance {1} \non database directory {2} with class loader {3} \nLoaded from {4}

# Arguments:
#
#    {0} = id
#    {1} = dbDirectory
#    {2} = classloader
#
D002=:\nShutting down instance {0} on database directory {1} with class loader {2} 

# Arguments:
#
#    {0} = databaseName
#    {1} = filePath
#
D004=Backup started for database located at {0} to {1}.

# Arguments:
#
#    {0} = filePath
#    {1} = filePath
#
D005=Moved old backup copy from {0} to {1}

# Arguments:
#
#    {0} = filePath
#
D006=Backup of data segment to {0} completed. 

D007=Edited database service.properties to use default log device

# Arguments:
#
#    {0} = errorMessage
#
D008=Error editing database service.properties, backup aborted: {0}

# Arguments:
#
#    {0} = filePath
#    {1} = filePath
#
D009=Copied log directory from {0} to {1}

D010=Backup aborted due to error

# Arguments:
#
#    {0} = filePath
#
D011=Removed old backup copy at {0}

# Arguments:
#
#    {0} = backupInstant
#
D012=Backup completed, log instant at {0} \n

# Arguments:
#
#    {0} = durabilityProperty
#    {1} = noSync
#
D013=Warning: The database is booted with {0}={1}. In this mode, it is possible that database may not be able to recover, committed transactions may be lost, database may be in an inconsistent state. Please use this mode only when these consequences are acceptable  \n

D015=Could not read further because another transaction has modified the value.

# Arguments:
#
#    {0} = pageId
#    {1} = overFlow
#    {2} = pageVersion
#    {3} = slotsInUse
#    {4} = deletedRowCount
#    {5} = pageStatus
#    {6} = nextId
#    {7} = firstFreeByte
#    {8} = freeSpace
#    {9} = totalSpace
#    {10} = spareSpace
#    {11} = minimumRecordSize
#    {12} = pageSize
#    {13} = hexPageDump
#
D016=\n---------------------------------------------------\npage id:            {0}\n Overflow:          {1}\n PageVersion:       {2}\n SlotsInUse:        {3}\n DeletedRowCount:   {4}\n PageStatus:        {5}\n NextId:            {6}\n firstFreeByte:     {7}\n freeSpace:         {8}\n totalSpace:        {9}\n spareSpace:        {10}%\n minimumRecordSize: {11}\n PageSize:          {12}\n---------------------------------------------------\n{13}\n---------------------------------------------------

I024=Database not available

I025=JDBC Driver not available

# Arguments:
#
#    {0} = errorMessage
#
I026=JDBC Driver registration with java.sql.DriverManager failed: {0}

I027=No mark set, or mark read ahead limit exceeded.

I028=Stream read error on client side when transferring user data to server.

# Arguments:
#
#    {0} = expectedCount
#    {1} = gotCount
#
I029=Reached EOF prematurely; expected {0}, got {1}.

# Arguments:
#
#    {0} = timestamp
#
J003={0}: Shutting down Derby engine

J004=Database identity

J005=Shut down Derby

J006=Deregister AutoloadedDriver

J007=Create database

J008=No details

J010=Encrypt database on disk

J013=Upgrade database

J016=Cryptographic service provider

J017=Cryptographic algorithm

J018=Cryptographic key length

J019=External cryptographic key

J020=Secret cryptographic key

J021=Locale for the database

J022=User name

J023=User password

J025=Log directory path

J028=Backup path for roll-forward recovery

J029=Backup path for creating database from backup

J030=Backup path for restoring database from backup

J031=Collation for character datatypes

# Arguments:
#
#    {0} = className
#
J100=Cannot find the network server class, {0}. Your class path should contain derbynet.jar.

# Arguments:
#
#    {0} = className
#    {1} = errorMessage
#
J101=Cannot load the network server class, {0}. {1}  Check the integrity of your derbynet.jar file.

# Arguments:
#
#    {0} = errorMessage
#
J102=An exception was thrown during network server startup. {0}

# Arguments:
#
#    {0} = errorMessage
#
J103=An exception was thrown during network server shutdown. {0}

J104=The object is already closed.

J105=Precision exceeds 31 digits!

J107=Error for batch element #

# Arguments:
#
#    {0} = propertyName
#
J108=Security manager does not permit access to system property {0}.

# Arguments:
#
#    {0} = errorMessage
#
J109=Detected an improper TCP/IP client configuration.  Unable to determine the IP address of your local host: ''{0}''.  Make sure your client machine has a properly configured IP address.

J110=Security mechanism not supported

J111=Password missing

J112=Userid missing

J113=Userid or password invalid

J114=Userid revoked

J115=New password invalid

J116=Local security service error for an operation which cannot be retried.

J117=SECTKN missing on ACCSEC when it is required or it is invalid

J118=Password expired

J120=Unspecified connection error

J121=The user is not authorized to access the database.

J122=A command requesting services of the database was issued prior to the command requesting access to database (ACCRDB).

J123=The requested command encountered an unarchitected and implementation-specific condition for which there was no architected message (additional information may be available in the derby.log file on the server).

J124=The access relational database (ACCRDB) command cannot be issued because the database is already currently accessed.

J125=A Data Descriptor Mismatch Error was detected.

# Arguments:
#
#    {0} = hexNumber
#
J126=A conversational protocol error was detected.  Reason: 0x{0}.

J128=The cursor is not open.

J129=An Open Query command was issued for a query which was already open.

J130=A protocol error (Invalid FDOCA Description Error) was detected.

# Arguments:
#
#    {0} = hexNumber
#
J131=A protocol error (Data Stream Syntax Error) was detected.  Reason: 0x{0}. Perhaps this is an attempt to open a plaintext connection to an SSL enabled server.

J132=The user name for the connection

J133=The user''s password for the connection

# Arguments:
#
#    {0} = maxStatements
#
J134=Negative values for the maxStatements property are not allowed: {0}

# Arguments:
#
#    {0} = transactionXid
#
J135=The XA transaction timed out and is going to be rolled back. The transaction Xid is {0}.

# Arguments:
#
#    {0} = transactionXid
#
J136=There was an XA transaction associated with the connection being closed. The transaction is going to be rolled back. The transaction Xid is {0}.

J137=Could not deregister the JDBC driver when shutting down the Derby engine. Make sure SQLPermission("deregisterDriver") is granted to derby.jar.

L001=------------  Begin Error Message -------------\n

L002=------------  End Error Message -------------\n

L003=\n------------  Begin Shutdown Error Stack -------------\n

L004=\n------------  End Shutdown Error Stack -------------\n

L005=\n------------  Begin Error Stack -------------\n

L006=\n------------  End Error Stack -------------\n

L007=Warning: Log file not found, creating new log. Possible inconsistency in the database

# Arguments:
#
#    {0} = fileName
#
L008=Deleting incompatible old Logfile {0}

# Arguments:
#
#    {0} = fileName
#
L009=Deleting old Logfile {0}

# Arguments:
#
#    {0} = fileName
#    {1} = position
#    {2} = position
#
L010=Incomplete log record detected in file {0} clearing log file from position {1} to eof at {2}.

L011=Checkpoint Daemon caught standard exception

# Arguments:
#
#    {0} = transactionID
#
L012=Log record is Not first but transaction is not in transaction table : {0}

# Arguments:
#
#    {0} = transactionID
#
L013=Log record is first but transaction is already in transaction table : {0}

L014=Bad start instant

# Arguments:
#
#    {0} = fileName
#
L015=New log file exist and cannot be deleted {0}

# Arguments:
#
#    {0} = fileName
#
L016=Cannot create a new log file {0}

# Arguments:
#
#    {0} = fileName
#    {1} = errorMessage
#
L017=Cannot create a new log file {0} due to {1}

# Arguments:
#
#    {0} = fileName
#
L018=System may be in a inconsistent state, missing file {0}

# Arguments:
#
#    {0} = testModeProperty
#    {1} = testMode
#
L020=Warning: The database was at least at one time booted with {0}={1}. As a result of this mode being used, it is possible that the database may not be able to recover, committed transactions may be lost, and the database may be in an inconsistent state. This may cause unexpected errors.\n

# Arguments:
#
#    {0} = testModeProperty
#    {1} = testMode
#    {2} = testModeProperty
#    {3} = testMode
#
L021=Warning: The database was either previously booted or is currently booted with {0} set to {1}. Note that this mode {0}={1} does not guarantee recoverability, and is probably what might have caused this boot error.\n

L022=Warning: Due to a permissions issue accessing the log files, the status of the database has been changed to read only. \n               

# Arguments:
#
#    {0} = timestamp
#
R001=----  Begin replication error message ({0}) ----

R002=--------------------  End replication error message ---------------------

# Arguments:
#
#    {0} = dbname
#
R003=Replication slave role started for database ''{0}''.

# Arguments:
#
#    {0} = dbname
#
R004=Replication slave role was stopped for database ''{0}''.

# Arguments:
#
#    {0} = dbname
#
R005=Replication slave got a fatal error for database ''{0}''. Replication will be stopped.

# Arguments:
#
#    {0} = dbname
#
R006=Lost connection with the replication master of database ''{0}''.

# Arguments:
#
#    {0} = dbname
#
R007=Replication master role started for database ''{0}''.

# Arguments:
#
#    {0} = dbname
#
R008=Replication master role stopped for database ''{0}''.

R009=Exception occurred during log shipping.

# Arguments:
#
#    {0} = dbname
#
R010=Replication master trying to reconnect to slave for database ''{0}''.

# Arguments:
#
#    {0} = dbname
#    {1} = hostname
#    {2} = port
#
R011=Replication slave database ''{0}'' listens for connections from master on ''{1}:{2}''.

R012=Replication connection handle invalid.

# Arguments:
#
#    {0} = timestamp
#    {1} = message
#
R013=Replication message ({0}): {1}

# Arguments:
#
#    {0} = dbname
#
R020=Failover performed successfully for database ''{0}''.

# Translators: Please translate the ALL CAPS words.
#
M001=\n# ********************************************************************\n# ***                Please do NOT edit this file.                 ***\n# *** CHANGING THE CONTENT OF THIS FILE MAY CAUSE DATA CORRUPTION. ***\n# ********************************************************************

M002=Restored missing/corrupted service properties from backup file.

M003=Deleted leftover service properties backup file.

# Arguments:
#
#    {0} = servicePropertiesBackupFile
#
M004=Failed to delete leftover service properties backup file, delete it manually: {0}

# Translators: Please translate the ALL CAPS words.
#
M005=\n# *************************************************************************\n# ***              DO NOT TOUCH FILES IN THIS DIRECTORY!                ***\n# *** FILES IN THIS DIRECTORY AND SUBDIRECTORIES CONSTITUTE A DERBY     ***\n# *** DATABASE, WHICH INCLUDES THE DATA (USER AND SYSTEM) AND THE       ***\n# *** FILES NECESSARY FOR DATABASE RECOVERY.                            ***\n# *** EDITING, ADDING, OR DELETING ANY OF THESE FILES MAY CAUSE DATA    ***\n# *** CORRUPTION AND LEAVE THE DATABASE IN A NON-RECOVERABLE STATE.     ***\n# *************************************************************************

# Translators: Please translate the ALL CAPS words.
#
M006=\n# *************************************************************************\n# ***              DO NOT TOUCH FILES IN THIS DIRECTORY!                ***\n# *** FILES IN THIS DIRECTORY ARE USED BY THE DERBY DATABASE RECOVERY   ***\n# *** SYSTEM. EDITING, ADDING, OR DELETING FILES IN THIS DIRECTORY      ***\n# *** WILL CAUSE THE DERBY RECOVERY SYSTEM TO FAIL, LEADING TO          ***\n# *** NON-RECOVERABLE CORRUPT DATABASES.                                ***\n# *************************************************************************

# Translators: Please translate the ALL CAPS words.
#
M007=\n# *************************************************************************\n# ***              DO NOT TOUCH FILES IN THIS DIRECTORY!                ***\n# *** FILES IN THIS DIRECTORY ARE USED BY THE DERBY DATABASE TO STORE   *** \n# *** USER AND SYSTEM DATA. EDITING, ADDING, OR DELETING FILES IN THIS  ***\n# *** DIRECTORY WILL CORRUPT THE ASSOCIATED DERBY DATABASE AND MAKE     ***\n# *** IT NON-RECOVERABLE.                                               ***\n# *************************************************************************

N001=This error is caused by the following error.
